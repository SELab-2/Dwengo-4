===== Bestand: ../dwengo_backend/services/dwengoLearningObjectService.ts =====
import { dwengoAPI } from "../config/dwengoAPI";

/**
 * De mogelijke content types (zie je enum in de oorspronkelijke code).
 */
enum ContentType {
  // Dit zijn momenteel "unused variables" dus eslint wil dat deze voorafgegaan worden door een "_"
  _TEXT_PLAIN = "text/plain",
  _TEXT_MARKDOWN = "text/markdown",
  _IMAGE_IMAGE_BLOCK = "image/image-block",
  _IMAGE_IMAGE = "image/image",
  _AUDIO_MPEG = "audio/mpeg",
  _VIDEO = "video",
  _EVAL_MULTIPLE_CHOICE = "evaluation/multiple-choice",
  _EVAL_OPEN_QUESTION = "evaluation/open-question",
}

/**
 * Mapping van Dwengo string => onze enum
 */
const permittedContentTypes = {
  "text/plain": ContentType._TEXT_PLAIN,
  "text/markdown": ContentType._TEXT_MARKDOWN,
  "image/image-block": ContentType._IMAGE_IMAGE_BLOCK,
  "image/image": ContentType._IMAGE_IMAGE,
  "audio/mpeg": ContentType._AUDIO_MPEG,
  video: ContentType._VIDEO,
  "evaluation/multiple-choice": ContentType._EVAL_MULTIPLE_CHOICE,
  "evaluation/open-question": ContentType._EVAL_OPEN_QUESTION,
};

interface DwengoLearningObject {
  _id?: string;
  uuid?: string;
  hruid?: string;
  version?: number;
  language?: string;
  title?: string;
  description?: string;
  content_type?: string;
  keywords?: string[];
  target_ages?: number[];
  teacher_exclusive?: boolean;
  skos_concepts?: string[];
  copyright?: string;
  licence?: string;
  difficulty?: number;
  estimated_time?: number;
  available?: boolean;
  content_location?: string;
  created_at?: string;
  updatedAt?: string;
}

export interface LearningObjectDto {
  id: string;
  uuid: string;
  hruid: string;
  version: number;
  language: string;
  title: string;
  description: string;
  contentType: string;
  keywords: string[];
  targetAges: number[];
  teacherExclusive: boolean;
  skosConcepts: string[];
  copyright: string;
  licence: string;
  difficulty: number;
  estimatedTime: number;
  available: boolean;
  contentLocation?: string;
  createdAt: string;
  updatedAt: string;
  origin: "dwengo" | "local";
}

/**
 * Converteer Dwengo-object naar onze LearningObjectDto
 */
function mapDwengoToLocal(dwengoObj: DwengoLearningObject): LearningObjectDto {
  return {
    id: dwengoObj._id ?? "",
    uuid: dwengoObj.uuid ?? "",
    hruid: dwengoObj.hruid ?? "",
    version: dwengoObj.version ?? 1,
    language: dwengoObj.language ?? "",
    title: dwengoObj.title ?? "",
    description: dwengoObj.description ?? "",
    contentType:
      permittedContentTypes[
        (dwengoObj.content_type as keyof typeof permittedContentTypes) ?? ""
      ] ?? ContentType._TEXT_PLAIN,
    keywords: dwengoObj.keywords ?? [],
    targetAges: dwengoObj.target_ages ?? [],
    teacherExclusive: Boolean(dwengoObj.teacher_exclusive),
    skosConcepts: dwengoObj.skos_concepts ?? [],
    copyright: dwengoObj.copyright ?? "",
    licence: dwengoObj.licence ?? "",
    difficulty: dwengoObj.difficulty ?? 0,
    estimatedTime: dwengoObj.estimated_time ?? 0,
    available: dwengoObj.available ?? false,
    contentLocation: dwengoObj.content_location ?? "",
    createdAt: dwengoObj.created_at ?? "",
    updatedAt: dwengoObj.updatedAt ?? "",
    origin: "dwengo",
  };
}

// Alle Dwengo-objects
export async function fetchAllDwengoObjects(
  isTeacher: boolean,
): Promise<LearningObjectDto[]> {
  try {
    const params: Record<string, any> = {};
    if (!isTeacher) {
      params.teacher_exclusive = false;
      params.available = true;
    }
    const response = await dwengoAPI.get("/api/learningObject/search", {
      params,
    });
    const dwengoData: DwengoLearningObject[] = response.data;
    return dwengoData.map(mapDwengoToLocal);
  } catch (error) {
    console.error("Fout bij fetchAllDwengoObjects:", error);
    throw new Error("Dwengo API call mislukt.");
  }
}

// EÃ©n Dwengo-object op basis van _id
export async function fetchDwengoObjectById(
  id: string,
  isTeacher: boolean,
): Promise<LearningObjectDto | null> {
  try {
    const params = { _id: id };
    const response = await dwengoAPI.get("/api/learningObject/getMetadata", {
      params,
    });
    const dwengoObj: DwengoLearningObject = response.data;
    const mapped = mapDwengoToLocal(dwengoObj);

    if (!isTeacher && (mapped.teacherExclusive || !mapped.available)) {
      return null;
    }
    return mapped;
  } catch (error: any) {
    if (error.response && error.response.status === 404) {
      return null;
    }
    console.error("Fout bij fetchDwengoObjectById:", error);
    return null;
  }
}

// [NIEUW] Dwengo-object op basis van hruid, language, version
export async function fetchDwengoObjectByHruidLangVersion(
  hruid: string,
  language: string,
  version: number,
  isTeacher: boolean,
): Promise<LearningObjectDto | null> {
  try {
    // Dwengo-API: /api/learningObject/getMetadata?hruid=...&language=...&version=...
    const params = { hruid, language, version };
    console.log("Dwengo params:", params);

    const response = await dwengoAPI.get("/api/learningObject/getMetadata", {
      params,
    });
    const dwengoObj: DwengoLearningObject = response.data;
    const mapped = mapDwengoToLocal(dwengoObj);

    if (!isTeacher && (mapped.teacherExclusive || !mapped.available)) {
      return null;
    }
    return mapped;
  } catch (error: any) {
    if (error.response && error.response.status === 404) {
      return null;
    }
    console.error("Fout bij fetchDwengoObjectByHruidLangVersion:", error);
    return null;
  }
}

// Zoeken Dwengo-objects
export async function searchDwengoObjects(
  isTeacher: boolean,
  searchTerm: string,
): Promise<LearningObjectDto[]> {
  try {
    const params: Record<string, any> = {};
    if (!isTeacher) {
      params.teacher_exclusive = false;
      params.available = true;
    }
    if (searchTerm) {
      params.searchTerm = searchTerm;
    }
    const response = await dwengoAPI.get("/api/learningObject/search", {
      params,
    });
    const dwengoData: DwengoLearningObject[] = response.data;
    return dwengoData.map(mapDwengoToLocal);
  } catch (error) {
    console.error("Fout bij searchDwengoObjects:", error);
    throw new Error("Dwengo API search mislukt.");
  }
}

// Haal leerobjecten op voor een leerpad (Dwengo)
export async function getDwengoObjectsForPath(
  pathId: string,
  isTeacher: boolean,
): Promise<LearningObjectDto[]> {
  try {
    const pathResp = await dwengoAPI.get("/api/learningPath/search", {
      params: { all: "" },
    });
    const allPaths: any[] = pathResp.data;
    const learningPath = allPaths.find((lp) => lp._id === pathId);
    if (!learningPath) {
      console.warn(`Leerpad met _id=${pathId} niet gevonden in Dwengo-API.`);
      return [];
    }
    const nodes = learningPath.nodes || [];
    const results: LearningObjectDto[] = [];

    for (const node of nodes) {
      try {
        const params = {
          hruid: node.learningobject_hruid,
          version: node.version,
          language: node.language,
        };
        const response = await dwengoAPI.get(
          "/api/learningObject/getMetadata",
          { params },
        );
        const dwengoObj: DwengoLearningObject = response.data;
        const mapped = mapDwengoToLocal(dwengoObj);

        if (!isTeacher && (mapped.teacherExclusive || !mapped.available)) {
          continue;
        }
        results.push(mapped);
      } catch (err) {
        console.error("Fout bij ophalen node:", err);
      }
    }
    return results;
  } catch (error) {
    console.error("Fout bij getDwengoObjectsForPath:", error);
    return [];
  }
}


===== Bestand: ../dwengo_backend/services/joinRequestService.ts =====
import {PrismaClient, JoinRequestStatus, JoinRequest} from "@prisma/client";
import classService from "./classService";
import {ClassWithLinks} from "./classService";
import { PrismaClientKnownRequestError } from "@prisma/client/runtime/library";
import { AccesDeniedError, BadRequestError, NotFoundError } from "../errors/errors";

const prisma = new PrismaClient();

export default class joinRequestService {

    // Validate whether the class exists before proceeding
    private static async validateClassExists(joinCode: string): Promise<ClassWithLinks> {
        const classroom: ClassWithLinks | null = await classService.getClassByJoinCode(joinCode);
        if (!classroom) {
            throw new NotFoundError(`Class with code ${joinCode} not found.`);
        }
        return classroom;
    }

    private static async updateAndValidateRequest(requestId: number, teacherId: number, classId: number, status: JoinRequestStatus): Promise<JoinRequest> {
        // check if teacher is allowed to approve/deny the request
        const isTeacher: boolean = await classService.isTeacherOfClass(classId, teacherId);
        if (!isTeacher) {
            throw new AccesDeniedError(`Teacher ${teacherId} is not a teacher of class ${classId}`);
        }

        const joinRequest: JoinRequest | null = await prisma.joinRequest.findFirst({
            where: { requestId, classId, status: JoinRequestStatus.PENDING },
        });
        if (!joinRequest) {
            throw new NotFoundError(`Join request ${requestId} for class ${classId} not found/not pending.`);
        }
        
        // Update the join request status
        const updatedRequest = await prisma.joinRequest.update({
            where: { requestId },
            data: { status: status },
        });

        return updatedRequest;
    }

    static async createJoinRequest(studentId: number, classId: number): Promise<JoinRequest> {
        return prisma.joinRequest.create({
            data: {
                studentId,
                classId: classId,
                status: JoinRequestStatus.PENDING,
            },
        });
    }

    static async createValidJoinRequest(studentId: number, joinCode: string): Promise<JoinRequest> {
        try {
            const classroom: ClassWithLinks = await this.validateClassExists(joinCode);

            // check if the student is already a member of the class
            if (await classService.isStudentInClass(classroom, studentId)) {
                throw new BadRequestError(`Student ${studentId} is already a member of class ${classroom.id}`);
            }

            // check if there's already a pending join request for this student and class
            const existingRequest: JoinRequest | null = await prisma.joinRequest.findFirst({
                where: {
                    studentId,
                    classId: classroom.id,
                    status: JoinRequestStatus.PENDING,
                },
            });
            if (existingRequest) {
                throw new BadRequestError(`There's already a pending join request for student ${studentId} and class ${classroom.id}`);
            }

            return await this.createJoinRequest(studentId, classroom.id);
        } catch (error) {
            this.handleError(error, "Error creating join request");
            // Without this Typescript does not accept the return type to just be Promise<JoinRequest>
            // but also wants it to be optionally "undefined".
            // Since I don't want that, I will just log the error here, and then pass the error to the
            // JoinRequestController which will handle accordingly.
            throw error;
        }
    };

    static async approveRequestAndAddStudentToClass(requestId: number, teacherId: number, classId: number): Promise<JoinRequest> {
        try {
            const updatedRequest: JoinRequest = await this.updateAndValidateRequest(requestId, teacherId, classId, JoinRequestStatus.APPROVED);

            // Add the student to the class
            await classService.addStudentToClass(updatedRequest.studentId, classId);
            return updatedRequest;
        } catch (error) {
            this.handleError(error, `Error approving join request ${requestId} for class ${classId}`);
            throw error;
        }
    };

    static async denyJoinRequest(requestId: number, teacherId: number, classId: number): Promise<JoinRequest> {
        try {
            return await this.updateAndValidateRequest(requestId, teacherId, classId, JoinRequestStatus.DENIED);
        } catch (error) {
            this.handleError(error, `Error denying join request ${requestId} for class ${classId}`);
            throw error;
        }
    };

    static async getJoinRequestsByClass(teacherId: number, classId: number): Promise<JoinRequest[]> {
        try {
          const isTeacher: boolean = await classService.isTeacherOfClass(classId, teacherId);
          if (!isTeacher) {
            throw new AccesDeniedError(`Teacher ${teacherId} is not a teacher of class ${classId}`);
          }
    
          return await prisma.joinRequest.findMany({
            where: { classId },
            include: {
              student: {
                select: {
                  user: {
                    select: {
                      firstName: true,
                      lastName: true,
                      email: true,
                    },
                  },
                },
              },
            },
          }).then((requests) =>
            requests.map((request) => ({
              requestId: request.requestId,
              studentId: request.studentId,
              classId: request.classId,
              status: request.status,
              student: request.student?.user
                ? {
                    firstName: request.student.user.firstName,
                    lastName: request.student.user.lastName,
                    email: request.student.user.email,
                  }
                : undefined,
            }))
          );
        } catch (error) {
          console.error(`Error fetching join requests for class ${classId}:`, error);
          throw new Error("Er is een probleem opgetreden bij het ophalen van join requests.");
        }
      }
    

    private static handleError(error: any, message: string): void {
        if (error instanceof PrismaClientKnownRequestError) {
            throw new Error(`Prisma error occurred: ${error.message}`);
        } else if (error instanceof Error) {
            error.message = `${message}: ${error.message}`;
            throw error;
        }
        throw new Error(`${message}: Unknown error occurred.`);
    }
}


===== Bestand: ../dwengo_backend/services/learningPathService.ts =====
import { dwengoAPI } from "../config/dwengoAPI";

export interface LearningPathDto {
  _id: string; // Dwengo gebruikt _id
  hruid: string; // Human readable unique id
  language: string;
  title: string;
  description: string;
  image?: string;
  num_nodes?: number; // Aantal nodes in het pad
  num_nodes_left: number;
  nodes: any[]; // Array van nodes (zie Dwengo docs), elk met transitions, etc.
  createdAt?: string; // Als Dwengo 'created_at' meegeeft
  updatedAt?: string; // Als Dwengo 'updatedAt' meegeeft
}

/**
 * Hulpfunctie om JSON van Dwengo te mappen naar een LearningPathDto
 */
function mapDwengoPathToLocal(dwengoPath: any): LearningPathDto {
  return {
    _id: dwengoPath._id ?? "",
    hruid: dwengoPath.hruid ?? "",
    language: dwengoPath.language ?? "",
    title: dwengoPath.title ?? "",
    description: dwengoPath.description ?? "",
    image: dwengoPath.image ?? "",
    num_nodes: dwengoPath.num_nodes ?? 0,
    num_nodes_left: dwengoPath.num_nodes_left ?? 0,
    nodes: dwengoPath.nodes ?? [],
    createdAt: dwengoPath.created_at ?? "",
    updatedAt: dwengoPath.updatedAt ?? "",
  };
}

/**
 * Haalt alle leerpaden op via Dwengo API: /api/learningPath/search
 * - Je kunt filteren met all, language, title, description, hruid, ...
 *   (zie Dwengo docs)
 * @param filters Object met mogelijke zoekfilters
 */
export async function searchLearningPaths(
  filters: {
    language?: string;
    hruid?: string;
    title?: string;
    description?: string;
    all?: string; // leeg string => alles
  } = {}
): Promise<LearningPathDto[]> {
  try {
    // Zet de filters om naar Dwengo queryparams
    const params: Record<string, any> = {};

    // Dwengo-API ondersteunt: all, language, hruid, title, description
    // (zie docs: <dwengo-host>/api/learningPath/search?all=&language=nl&hruid=... etc.)
    if (filters.language) params.language = filters.language;
    if (filters.hruid) params.hruid = filters.hruid;
    if (filters.title) params.title = filters.title;
    if (filters.description) params.description = filters.description;

    // 'all=' => om alle paden op te halen
    if (filters.all !== undefined) {
      // Bijv. filters.all = "" â ?all=
      params.all = filters.all;
    }

    // GET call
    const response = await dwengoAPI.get("/api/learningPath/search", {
      params,
    });
    const dwengoData = response.data; // array van leerpaden

    // Map elk item naar LearningPathDto
    const results = dwengoData.map(mapDwengoPathToLocal);
    return results;
  } catch (error) {
    console.error("Fout bij searchLearningPaths:", error);
    throw new Error("Dwengo API call voor leerpaden mislukt.");
  }
}

/**
 * Haalt 1 leerpad op (niet voorzien in Dwengo met /getMetadata,
 * maar je kunt filteren in search op bijv. hruid of _id).
 *
 * Let op: Dwengo heeft geen dedicated "getLearningPathById" route;
 * je zoekt typically via search + hruid=... of all=...
 */
export async function getLearningPathByIdOrHruid(
  idOrHruid: string
): Promise<LearningPathDto | null> {
  try {
    // Probeer te zoeken met hruid=... of als je _id hebt, moet je 'all=' gebruiken en local filteren
    const params = { all: "" };
    const response = await dwengoAPI.get("/api/learningPath/search", {
      params,
    });
    const allPaths = response.data;

    // Zoeken in array op basis van _id of hruid
    const found = allPaths.find(
      (lp: any) => lp._id === idOrHruid || lp.hruid === idOrHruid
    );
    if (!found) return null;

    return mapDwengoPathToLocal(found);
  } catch (error) {
    console.error("Fout bij getLearningPathByIdOrHruid:", error);
    return null;
  }
}


===== Bestand: ../dwengo_backend/services/authorizationService.ts =====
import { PrismaClient, Role } from "@prisma/client";

const prisma = new PrismaClient();

export const isAuthorized = async (
  userId: number,
  requiredRole: Role,
  classId?: number
): Promise<boolean> => {
  const user = await prisma.user.findUnique({
    where: { id: userId },
    select: { role: true, teacher: true, student: true },
  });

  if (!user) throw new Error("User not found");

  // Admins are always authorized
  if (user.role === Role.ADMIN) return true;

  if (requiredRole === Role.TEACHER && user.role !== Role.TEACHER) return false;
  if (requiredRole === Role.STUDENT && user.role !== Role.STUDENT) return false;

  // Extra check for teachers: ensure they teach this class
  if (requiredRole === Role.TEACHER && classId) {
    const teachesClass = await prisma.classTeacher.findFirst({
      where: { teacherId: userId, classId },
    });
    return teachesClass !== null;
  }

  // Extra check for students: ensure they are part of this class
  if (requiredRole === Role.STUDENT && classId) {
    const enrolled = await prisma.classStudent.findFirst({
      where: { studentId: userId, classId },
    });
    return enrolled !== null;
  }

  return true;
};

export const canUpdateOrDelete = async (
  userId: number,
  assignmentId: number
): Promise<boolean> => {
  if (!(await isAuthorized(userId, Role.TEACHER))) return false;

  // The teacher is authorized
  // Now there needs to be checked if the teacher has classes that have this assignment
  const allClassesTeacher: { classId: number }[] =
    await prisma.classTeacher.findMany({
      where: { teacherId: userId },
      select: { classId: true },
    });

  // Check if at least one of the classes of the teacher has the assignment
  const hasAssignment = await prisma.classAssignment.findFirst({
    where: {
      assignmentId,
      classId: { in: allClassesTeacher.map((c) => c.classId) },
    },
  });
  return hasAssignment !== null;
};


===== Bestand: ../dwengo_backend/services/combinedLearningObjectService.ts =====

import {
    fetchAllDwengoObjects,
    fetchDwengoObjectById,
    searchDwengoObjects,
    getDwengoObjectsForPath,
    LearningObjectDto,
    // [NIEUW] importeer de functie om Dwengo-LO op te halen via hruid/lang/version
    fetchDwengoObjectByHruidLangVersion,
  } from "./dwengoLearningObjectService";
  import {
    getLocalLearningObjects,
    getLocalLearningObjectById,
    searchLocalLearningObjects,
    // [NIEUW] importeer de functie om lokaal LO op te halen via hruid/lang/version
    getLocalLearningObjectByHruidLangVersion,
  } from "./localDBLearningObjectService";
  
  /**
   * Haalt ALLE leerobjecten op: Dwengo + lokaal.
   */
  export async function getAllLearningObjects(
    isTeacher: boolean
  ): Promise<LearningObjectDto[]> {
    const dwengoObjs = await fetchAllDwengoObjects(isTeacher);
    const localObjs = await getLocalLearningObjects(isTeacher);
    return [...dwengoObjs, ...localObjs];
  }
  
  /**
   * Zoeken (Dwengo + lokaal)
   */
  export async function searchLearningObjects(
    isTeacher: boolean,
    searchTerm: string
  ): Promise<LearningObjectDto[]> {
    const dwengoResults = await searchDwengoObjects(isTeacher, searchTerm);
    const localResults = await searchLocalLearningObjects(isTeacher, searchTerm);
    return [...dwengoResults, ...localResults];
  }
  
  /**
   * Haal 1 leerobject op (op basis van 'id' â Dwengo _id of local ID).
   */
  export async function getLearningObjectById(
    id: string,
    isTeacher: boolean
  ): Promise<LearningObjectDto | null> {
    // Eerst Dwengo checken
    const fromDwengo = await fetchDwengoObjectById(id, isTeacher);
    if (fromDwengo) return fromDwengo;
  
    // Anders lokaal checken
    const fromLocal = await getLocalLearningObjectById(id, isTeacher);
    if (fromLocal) return fromLocal;
  
    return null;
  }
  
  /**
   * Haalt alle leerobjecten op die bij een leerpad (Dwengo) horen.
   * Wil je later ook lokale leerpaden toevoegen, pas deze functie aan.
   */
  export async function getLearningObjectsForPath(
    pathId: string,
    isTeacher: boolean
  ): Promise<LearningObjectDto[]> {
    return await getDwengoObjectsForPath(pathId, isTeacher);
  }
  
  // [NIEUW] Haal 1 leerobject op via hruid-language-version
  export async function getLearningObjectByHruidLangVersion(
    hruid: string,
    language: string,
    version: number,
    isTeacher: boolean
  ): Promise<LearningObjectDto | null> {
    // 1) Probeer Dwengo
    const fromDwengo = await fetchDwengoObjectByHruidLangVersion(
      hruid,
      language,
      version,
      isTeacher
    );
    if (fromDwengo) return fromDwengo;
  
    // 2) Probeer lokaal
    const fromLocal = await getLocalLearningObjectByHruidLangVersion(
      hruid,
      language,
      version,
      isTeacher
    );
    if (fromLocal) return fromLocal;
  
    return null;
  }
  

===== Bestand: ../dwengo_backend/services/localLearningPathNodeService.ts =====
import { LearningPathNode, PrismaClient } from "@prisma/client";
import { dwengoAPI } from "../config/dwengoAPI";

const prisma = new PrismaClient();

/**
 * Data object om een node te maken/updaten.
 */
export interface NodeData {
  isExternal: boolean;
  // Voor lokaal:
  localLearningObjectId?: string;

  // Voor Dwengo:
  dwengoHruid?: string;
  dwengoLanguage?: string;
  dwengoVersion?: number;

  // Overige eigenschappen:
  start_node?: boolean;
}

class LocalLearningPathNodeService {
  /**
   * Helper: check of de teacher de eigenaar is van leerpad 'pathId'
   */
  private async checkTeacherOwnsPath(teacherId: number, pathId: string) {
    const path = await prisma.learningPath.findUnique({
      where: { id: pathId },
    });
    if (!path) {
      throw new Error("Leerpad niet gevonden.");
    }
    if (path.creatorId !== teacherId) {
      throw new Error("Je bent niet de eigenaar van dit leerpad.");
    }
  }

  /**
   * Haal alle nodes van dit leerpad op.
   */
  async getAllNodesForPath(
    teacherId: number,
    pathId: string,
  ): Promise<LearningPathNode[]> {
    await this.checkTeacherOwnsPath(teacherId, pathId);
    return prisma.learningPathNode.findMany({
      where: { learningPathId: pathId },
      orderBy: { createdAt: "asc" },
    });
  }

  /**
   * CreÃ«er nieuwe node in path, atomaire transactie:
   *  1) Node maken
   *  2) Aantal nodes updaten
   */
  async createNodeForPath(
    teacherId: number,
    pathId: string,
    data: NodeData,
  ): Promise<LearningPathNode> {
    await this.checkTeacherOwnsPath(teacherId, pathId);

    // 1) Valideer => afhankelijk van isExternal
    if (data.isExternal) {
      if (
        !data.dwengoHruid ||
        !data.dwengoLanguage ||
        typeof data.dwengoVersion !== "number"
      ) {
        throw new Error(
          "Missing Dwengo-fields: dwengoHruid, dwengoLanguage, dwengoVersion",
        );
      }
      await this.validateDwengoObject(
        data.dwengoHruid,
        data.dwengoLanguage,
        data.dwengoVersion,
      );
    } else {
      if (!data.localLearningObjectId) {
        throw new Error("Missing localLearningObjectId for local node");
      }
      await this.validateLocalObject(data.localLearningObjectId);
    }

    // 2) Transactie:
    return prisma.$transaction(async (tx) => {
      // 2a) Node maken
      const newNode = await tx.learningPathNode.create({
        data: {
          learningPathId: pathId,
          isExternal: data.isExternal,

          localLearningObjectId: data.isExternal
            ? undefined
            : data.localLearningObjectId,
          dwengoHruid: data.isExternal ? data.dwengoHruid : undefined,
          dwengoLanguage: data.isExternal ? data.dwengoLanguage : undefined,
          dwengoVersion: data.isExternal ? data.dwengoVersion : undefined,

          start_node: data.start_node ?? false,
        },
      });

      // 2b) Aantal nodes bijwerken
      const count = await tx.learningPathNode.count({
        where: { learningPathId: pathId },
      });
      await tx.learningPath.update({
        where: { id: pathId },
        data: { num_nodes: count },
      });

      return newNode;
    });
  }

  /**
   * Update existing node
   * (Geen transactie nodig, want we doen 1 DB-call en we
   *  updaten niet het aantal nodes.)
   */
  async updateNodeForPath(
    teacherId: number,
    pathId: string,
    nodeId: string,
    data: NodeData,
  ): Promise<LearningPathNode> {
    await this.checkTeacherOwnsPath(teacherId, pathId);

    const node = await prisma.learningPathNode.findUnique({
      where: { nodeId },
    });
    if (!node) {
      throw new Error("Node niet gevonden.");
    }
    if (node.learningPathId !== pathId) {
      throw new Error("Node hoort niet bij dit leerpad.");
    }

    // Bepaal de nieuwe velden (als de client niet alles meestuurt, fallback naar de bestaande)
    const newIsExternal = data.isExternal ?? node.isExternal;

    let newLocalLearningObjectId = node.localLearningObjectId;
    let newDwengoHruid = node.dwengoHruid;
    let newDwengoLanguage = node.dwengoLanguage;
    let newDwengoVersion = node.dwengoVersion;

    // check of men echt de toggle "extern/lokaal" heeft aangepast
    if (data.isExternal !== undefined) {
      // men heeft de "extern vs lokaal" toggle aangepast
      if (newIsExternal) {
        // van false => true
        if (
          !data.dwengoHruid ||
          !data.dwengoLanguage ||
          typeof data.dwengoVersion !== "number"
        ) {
          throw new Error(
            "Missing Dwengo fields for external node: hruid, language, version",
          );
        }
        await this.validateDwengoObject(
          data.dwengoHruid,
          data.dwengoLanguage,
          data.dwengoVersion,
        );

        // overschrijf
        newDwengoHruid = data.dwengoHruid;
        newDwengoLanguage = data.dwengoLanguage;
        newDwengoVersion = data.dwengoVersion;

        // en wis local
        newLocalLearningObjectId = null;
      } else {
        // van true => false
        if (!data.localLearningObjectId) {
          throw new Error("Missing localLearningObjectId for local node");
        }
        await this.validateLocalObject(data.localLearningObjectId);

        newLocalLearningObjectId = data.localLearningObjectId;
        // wis dwengo
        newDwengoHruid = null;
        newDwengoLanguage = null;
        newDwengoVersion = null;
      }
    } else {
      // isExternal ongewijzigd, maar misschien men geeft een nieuwe LORef / DwengoRef mee
      if (newIsExternal) {
        // Dwengo
        const newHruid =
          data.dwengoHruid !== undefined ? data.dwengoHruid : newDwengoHruid;
        const newLang =
          data.dwengoLanguage !== undefined
            ? data.dwengoLanguage
            : newDwengoLanguage;
        const newVer =
          data.dwengoVersion !== undefined
            ? data.dwengoVersion
            : newDwengoVersion;

        if (
          data.dwengoHruid !== undefined ||
          data.dwengoLanguage !== undefined ||
          data.dwengoVersion !== undefined
        ) {
          // user gaf iets nieuws in Dwengo
          if (!newHruid || !newLang || typeof newVer !== "number") {
            throw new Error("Incomplete Dwengo info");
          }
          await this.validateDwengoObject(newHruid, newLang, newVer);
        }

        newDwengoHruid = newHruid;
        newDwengoLanguage = newLang;
        newDwengoVersion = newVer;
      } else {
        // lokaal node
        if (data.localLearningObjectId !== undefined) {
          // user gaf nieuwe local ID
          await this.validateLocalObject(data.localLearningObjectId);
          newLocalLearningObjectId = data.localLearningObjectId;
        }
      }
    }

    // Aantal nodes blijft hetzelfde â geen updateNumNodes nodig
    return prisma.learningPathNode.update({
      where: { nodeId },
      data: {
        isExternal: newIsExternal,
        localLearningObjectId: newIsExternal
          ? null
          : (newLocalLearningObjectId ?? null),
        dwengoHruid: newIsExternal ? newDwengoHruid : null,
        dwengoLanguage: newIsExternal ? newDwengoLanguage : null,
        dwengoVersion: newIsExternal ? newDwengoVersion : null,
        start_node: data.start_node ?? node.start_node,
      },
    });
  }

  /**
   * Verwijder node.
   * Atomaire transactie (2 acties):
   *   1) Node verwijderen
   *   2) Aantal nodes herberekenen
   */
  async deleteNodeFromPath(
    teacherId: number,
    pathId: string,
    nodeId: string,
  ): Promise<void> {
    await this.checkTeacherOwnsPath(teacherId, pathId);

    const node = await prisma.learningPathNode.findUnique({
      where: { nodeId },
    });
    if (!node) {
      throw new Error("Node niet gevonden.");
    }
    if (node.learningPathId !== pathId) {
      throw new Error("Node hoort niet bij dit leerpad.");
    }

    await prisma.$transaction(async (tx) => {
      // 1) Node verwijderen
      await tx.learningPathNode.delete({
        where: { nodeId },
      });

      // 2) Aantal nodes herberekenen
      const count = await tx.learningPathNode.count({
        where: { learningPathId: pathId },
      });
      await tx.learningPath.update({
        where: { id: pathId },
        data: { num_nodes: count },
      });
    });
  }

  /**
   *  ================================
   *  1) Check of local LearningObject bestaat
   *  ================================
   */
  private async validateLocalObject(loId: string): Promise<void> {
    const exists = await prisma.learningObject.findUnique({
      where: { id: loId },
    });
    if (!exists) {
      throw new Error(`Lokaal leerobject '${loId}' niet gevonden.`);
    }
  }

  /**
   *  ================================
   *  2) Check of external Dwengo object bestaat
   *  ================================
   */
  private async validateDwengoObject(
    hruid: string,
    language: string,
    version: number,
  ): Promise<void> {
    try {
      const resp = await dwengoAPI.get(
        `/api/learningObject/getMetadata?hruid=${hruid}&language=${language}&version=${version}`,
      );
      if (!resp.data) {
        throw new Error(
          `Dwengo-object (hruid=${hruid}, lang=${language}, ver=${version}) niet gevonden (lege data).`,
        );
      }
    } catch (err: any) {
      if (err.response?.status === 404) {
        throw new Error(
          `Dwengo-object (hruid=${hruid}, lang=${language}, ver=${version}) niet gevonden (404).`,
        );
      } else {
        console.error(err);
        throw new Error(
          `Fout bij Dwengo-check: ${
            (err.response && err.response.data) || err.message
          }`,
        );
      }
    }
  }
}

export default new LocalLearningPathNodeService();


===== Bestand: ../dwengo_backend/services/localLearningObjectService.ts =====
import {ContentType, LearningObject, PrismaClient} from "@prisma/client";

const prisma = new PrismaClient();

export interface LocalLearningObjectData {
  // De data die een teacher kan opgeven bij het aanmaken of updaten
  title: string;
  description: string;
  contentType: ContentType; // bv. "text/markdown", "interactive/quiz", ...
  keywords?: Array<string>; // komma-gescheiden of JSON
  targetAges?: Array<number>; // idem
  teacherExclusive?: boolean;
  skosConcepts?: Array<string>;
  copyright?: string;
  licence?: string;
  difficulty?: number;
  estimatedTime?: number;
  available?: boolean;
  contentLocation?: string;
}

export default class LocalLearningObjectService {
  /**
   * Maakt een nieuw leerobject aan in onze eigen databank.
   * Genereert een UUID voor het veld 'id' (Prisma-model heeft id: String @id).
   */
  static async createLearningObject(
    teacherId: number,
    data: LocalLearningObjectData
  ): Promise<LearningObject> {
    // Prisma create
    return prisma.learningObject.create({
      data: {
        hruid: `${data.title.toLowerCase()}-${Date.now()}`,
        language: "nl", // Kan ook dynamisch
        title: data.title,
        description: data.description,
        contentType: data.contentType,
        keywords: data.keywords ?? [],
        targetAges: data.targetAges ?? [],
        teacherExclusive: data.teacherExclusive ?? false,
        skosConcepts: data.skosConcepts ?? [],
        copyright: data.copyright ?? "",
        licence: data.licence ?? "CC BY Dwengo",
        difficulty: data.difficulty ?? 1,
        estimatedTime: data.estimatedTime ?? 0,
        available: data.available ?? true,
        contentLocation: data.contentLocation ?? "",
        creatorId: teacherId,
      },
    });
  }

  /**
   * Geeft alle leerobjecten terug die door een bepaalde teacher zijn aangemaakt.
   * Of (afhankelijk van je wensen) alle leerobjecten in de DB als je dat wilt.
   */
  static async getAllLearningObjectsByTeacher(teacherId: number) {
    const objects = await prisma.learningObject.findMany({
      where: { creatorId: teacherId },
      orderBy: { createdAt: "desc" },
    });
    return objects;
  }

  /**
   * Haalt Ã©Ã©n leerobject op. Optioneel kun je checken of de aanvrager
   * wel de creator is, als je dat in de controller wilt enforce'n.
   */
  static async getLearningObjectById(id: string) {
    return prisma.learningObject.findUnique({
      where: { id },
    });
  }

  /**
   * Update van een bestaand leerobject. We gaan ervan uit dat je al
   * gecontroleerd hebt of de teacher mag updaten (bv. of teacherId === creatorId).
   */
  static async updateLearningObject(
    id: string,
    data: Partial<LocalLearningObjectData>
  ) {
    // Prisma update
    return prisma.learningObject.update({
      where: { id },
      data: {
        // Als we hruid gelijk stellen aan de titel, dan zal hruid hier ook moeten aangepast worden.

        title: data.title,
        description: data.description,
        contentType: data.contentType,
        keywords: data.keywords,
        targetAges: data.targetAges,
        teacherExclusive: data.teacherExclusive,
        skosConcepts: data.skosConcepts,
        copyright: data.copyright,
        licence: data.licence,
        difficulty: data.difficulty,
        estimatedTime: data.estimatedTime,
        available: data.available,
        contentLocation: data.contentLocation,
      },
    });
  }

  /**
   * Verwijdert een leerobject op basis van zijn id.
   */
  static async deleteLearningObject(id: string) {
    return prisma.learningObject.delete({
      where: { id },
    });
  }
}


===== Bestand: ../dwengo_backend/services/localDBLearningObjectService.ts =====


import { PrismaClient, LearningObject } from "@prisma/client";
import { LearningObjectDto } from "./dwengoLearningObjectService";

const prisma = new PrismaClient();

/**
 * Converteert een Prisma LearningObject record naar ons LearningObjectDto
 * (origin = "local")
 */
function mapLocalToDto(localObj: LearningObject, isTeacher: boolean): LearningObjectDto {
  return {
    id: localObj.id,
    uuid: localObj.uuid,
    hruid: localObj.hruid,
    version: localObj.version,
    language: localObj.language,
    title: localObj.title,
    description: localObj.description,
    contentType: localObj.contentType,
    keywords: localObj.keywords,
    targetAges: localObj.targetAges,
    teacherExclusive: localObj.teacherExclusive,
    skosConcepts: localObj.skosConcepts,
    copyright: localObj.copyright,
    licence: localObj.licence,
    difficulty: localObj.difficulty,
    estimatedTime: localObj.estimatedTime,
    available: localObj.available,
    contentLocation: localObj.contentLocation ?? "",
    createdAt: localObj.createdAt.toISOString(),
    updatedAt: localObj.updatedAt.toISOString(),
    origin: "local",
  };
}

/**
 * Haal alle lokale leerobjecten op,
 * filter op teacherExclusive/available als de gebruiker geen teacher is.
 */
export async function getLocalLearningObjects(
  isTeacher: boolean
): Promise<LearningObjectDto[]> {
  const whereClause = isTeacher
    ? {}
    : { teacherExclusive: false, available: true };

  const localObjects = await prisma.learningObject.findMany({
    where: whereClause,
    orderBy: { createdAt: "desc" },
  });

  return localObjects.map((obj) => mapLocalToDto(obj, isTeacher));
}

/**
 * Haal 1 lokaal leerobject op (check of user het mag zien).
 */
export async function getLocalLearningObjectById(
  id: string,
  isTeacher: boolean
): Promise<LearningObjectDto | null> {
  const localObj = await prisma.learningObject.findUnique({ where: { id } });
  if (!localObj) return null;

  if (!isTeacher && (localObj.teacherExclusive || !localObj.available)) {
    return null;
  }
  return mapLocalToDto(localObj, isTeacher);
}

/**
 * Doorzoeken van de lokale DB op basis van searchTerm in de title/description/keywords.
 */
export async function searchLocalLearningObjects(
  isTeacher: boolean,
  searchTerm: string
): Promise<LearningObjectDto[]> {
  const whereClause: any = {
    OR: [
      { title: { contains: searchTerm, mode: "insensitive" } },
      { description: { contains: searchTerm, mode: "insensitive" } },
      { keywords: { has: searchTerm } },
    ],
  };

  if (!isTeacher) {
    whereClause.AND = [{ teacherExclusive: false }, { available: true }];
  }

  const localObjects = await prisma.learningObject.findMany({
    where: whereClause,
    orderBy: { createdAt: "desc" },
  });

  return localObjects.map((obj) => mapLocalToDto(obj, isTeacher));
}

// [NIEUW] Haal lokaal leerobject op via hruid+language+version
export async function getLocalLearningObjectByHruidLangVersion(
  hruid: string,
  language: string,
  version: number,
  isTeacher: boolean
): Promise<LearningObjectDto | null> {
  const localObj = await prisma.learningObject.findUnique({
    

  
     where: {
       hruid,
       language,
       version,
     },
   });

  if (!localObj) return null;

  if (!isTeacher && (localObj.teacherExclusive || !localObj.available)) {
    return null;
  }
  return mapLocalToDto(localObj, isTeacher);
}


===== Bestand: ../dwengo_backend/services/teacherService.ts =====
import { PrismaClient, Teacher, User } from "@prisma/client";

const prisma = new PrismaClient();

export default class TeacherService {
  static async findTeacherById(
    userId: number
  ): Promise<Teacher & { user: User }> {
    return prisma.teacher.findUniqueOrThrow({
      where: { userId: userId },
      include: {
        user: true,
      },
    });
  }

  static async getAllTeachers(): Promise<Teacher[]> {
    return prisma.teacher.findMany({
      include: {
        user: true, // Inclusief gebruikersinformatie
      },
    });
  }

  static async getTeachersByClass(classId: number): Promise<Teacher[]> {
    return prisma.teacher.findMany({
      where: {
        teaches: {
          some: { classId }, // Find teachers who are linked to this class
        },
      },
      include: {
        user: true, // Includes full user data in each teacher object
      },
    });
  }
}


===== Bestand: ../dwengo_backend/services/questionsService.ts =====
import { 
  PrismaClient, 
  Question, 
  QuestionType, 
  QuestionSpecific, 
  QuestionGeneral, 
  QuestionMessage, 
  Role 
} from "@prisma/client";

import referenceValidationService from "./referenceValidationService";
import { NotFoundError, BadRequestError } from "../errors/errors";
import { AuthenticatedUser } from "../interfaces/extendedTypeInterfaces";

const prisma = new PrismaClient();

/**
 * Helper: bepaal of een gegeven user deze vraag mag *zien* in een overzicht.
 *
 * - Als question.isPrivate == true => enkel zichtbaar voor:
 *   (1) de maker (question.createdBy),
 *   (2) teacher(s) in de class,
 *   ((3) admin)
 * - Als question.isPrivate == false => zichtbaar voor:
 *   (1) teamleden,
 *   (2) teacher(s) in de class,
 *   ((3) admin)
 *
 * Let op: we veronderstellen dat 'question' is ingeladen met
 *  team -> { students, class -> { ClassTeacher } }.
 */
function canUserSeeQuestionInList(question: Question & {
  team: {
    students: { userId: number }[];
    class: {
      ClassTeacher: { teacherId: number }[];
    };
  };
}, user: AuthenticatedUser): boolean {
  
  const isAdmin = (user.role === Role.ADMIN);

  // Teacher in class?
  const isTeacherInClass = question.team.class.ClassTeacher
    .some(ct => ct.teacherId === user.id);

  // Student in team?
  const isStudentInTeam = question.team.students
    .some(s => s.userId === user.id);

  if (question.isPrivate) {
    // Private => alleen creator, teacher in class, admin
    const isCreator = (question.createdBy === user.id);
    if (isCreator || isTeacherInClass || isAdmin) return true;
    return false;
  } else {
    // Niet private => hele team, teacher, admin
    if (isStudentInTeam || isTeacherInClass || isAdmin) return true;
    return false;
  }
}

export default class QuestionService {

  /**
   * ------------------------------------------
   * HULPFUNCTIE: maak basis Question + 1ste msg
   * ------------------------------------------
   */
  private static async createQuestionAndMessage(
    assignmentId: number,
    teamId: number,
    creatorId: number,
    title: string,
    initialMessage: string,
    type: QuestionType,
    isTeacher: boolean,
    isPrivate: boolean
  ): Promise<Question> {
    // 1) Check assignment
    const assignment = await prisma.assignment.findUnique({
      where: { id: assignmentId },
    });
    if (!assignment) {
      throw new NotFoundError("Assignment not found.");
    }

    // 2) Check team
    const team = await prisma.team.findUnique({
      where: { id: teamId },
      include: {
        teamAssignment: true,
        students: true,
      },
    });
    if (!team) {
      throw new BadRequestError("Team niet gevonden.");
    }

    // Check of team bij deze assignment hoort
    if (!team.teamAssignment || team.teamAssignment.assignmentId !== assignmentId) {
      throw new BadRequestError("Team is niet gekoppeld aan deze assignment.");
    }

    // Indien student => check of hij/zij in team zit
    if (!isTeacher) {
      const studentInTeam = team.students.some(s => s.userId === creatorId);
      if (!studentInTeam) {
        throw new BadRequestError("Student zit niet in dit team.");
      }
    }

    // 3) Transactie: Question + eerste message
    const newQuestion = await prisma.$transaction(async (tx) => {
      const q = await tx.question.create({
        data: {
          title,
          type,
          assignmentId,
          teamId,
          createdBy: creatorId,
          isPrivate
        },
      });
      await tx.questionMessage.create({
        data: {
          questionId: q.id,
          userId: creatorId,
          text: initialMessage,
        },
      });
      return q;
    });

    return newQuestion;
  }

  /**
   * CREATE SPECIFIC
   */
  static async createQuestionSpecific(
    assignmentId: number,
    teamId: number,
    creatorId: number,
    creatorRole: Role,
    title: string,
    text: string,
    isExternal: boolean,
    isPrivate: boolean,
    localLearningObjectId?: string,
    dwengoHruid?: string,
    dwengoLanguage?: string,
    dwengoVersion?: number
  ): Promise<QuestionSpecific> {

    const baseQuestion = await this.createQuestionAndMessage(
      assignmentId,
      teamId,
      creatorId,
      title,
      text,
      QuestionType.SPECIFIC,
      creatorRole === Role.TEACHER,
      isPrivate
    );

    // Validatie object
    if (isExternal) {
      if (!dwengoHruid || !dwengoLanguage || dwengoVersion == null) {
        throw new BadRequestError("Dwengo fields missing: hruid, language, version");
      }
      await referenceValidationService.validateDwengoLearningObject(dwengoHruid, dwengoLanguage, dwengoVersion);
    } else {
      if (!localLearningObjectId) {
        throw new BadRequestError("localLearningObjectId is missing for local question");
      }
      await referenceValidationService.validateLocalLearningObject(localLearningObjectId);
    }

    return prisma.questionSpecific.create({
      data: {
        questionId: baseQuestion.id,
        isExternal,
        localLearningObjectId: isExternal ? undefined : localLearningObjectId,
        dwengoHruid: isExternal ? dwengoHruid : undefined,
        dwengoLanguage: isExternal ? dwengoLanguage : undefined,
        dwengoVersion: isExternal ? dwengoVersion : undefined,
      },
    });
  }

  /**
   * CREATE GENERAL
   */
  static async createQuestionGeneral(
    assignmentId: number,
    teamId: number,
    creatorId: number,
    creatorRole: Role,
    title: string,
    text: string,
    isExternal: boolean,
    isPrivate: boolean,
    pathRef: string,
    dwengoLanguage?: string
  ): Promise<QuestionGeneral> {

    const baseQuestion = await this.createQuestionAndMessage(
      assignmentId,
      teamId,
      creatorId,
      title,
      text,
      QuestionType.GENERAL,
      creatorRole === "TEACHER",
      isPrivate
    );

    // Validatie path
    if (isExternal) {
      if (!dwengoLanguage) {
        throw new BadRequestError("Dwengo language is missing for external path question");
      }
      await referenceValidationService.validateDwengoLearningPath(pathRef, dwengoLanguage);
    } else {
      await referenceValidationService.validateLocalLearningPath(pathRef);
    }

    return prisma.questionGeneral.create({
      data: {
        questionId: baseQuestion.id,
        pathRef,
        isExternal,
      },
    });
  }

  /**
   * CREATE message
   */
  static async createQuestionMessage(
    questionId: number,
    userId: number,
    text: string
  ): Promise<QuestionMessage> {
    if (!text.trim()) {
      throw new BadRequestError("Message cannot be empty");
    }
    const question = await prisma.question.findUnique({ where: { id: questionId } });
    if (!question) {
      throw new NotFoundError("Question not found");
    }

    return prisma.questionMessage.create({
      data: {
        questionId,
        userId,
        text,
      },
    });
  }

  /**
   * UPDATE question (titel)
   */
  static async updateQuestion(questionId: number, newTitle: string): Promise<Question> {
    if (!newTitle.trim()) {
      throw new BadRequestError("Title mag niet leeg zijn");
    }
    const q = await prisma.question.findUnique({ where: { id: questionId } });
    if (!q) {
      throw new NotFoundError("Question not found");
    }
    return prisma.question.update({
      where: { id: questionId },
      data: { title: newTitle },
    });
  }

  /**
   * UPDATE message (tekst)
   */
  static async updateQuestionMessage(questionMessageId: number, newText: string): Promise<QuestionMessage> {
    if (!newText.trim()) {
      throw new BadRequestError("Message cannot be empty");
    }
    const msg = await prisma.questionMessage.findUnique({ where: { id: questionMessageId } });
    if (!msg) {
      throw new NotFoundError("QuestionMessage not found");
    }
    return prisma.questionMessage.update({
      where: { id: questionMessageId },
      data: { text: newText },
    });
  }

  /**
   * GET Ã©Ã©n vraag (enkel 1 detail)
   * (De authorizeQuestion middleware checkt of user mag inzien.)
   */
  static async getQuestion(questionId: number): Promise<Question> {
    const question = await prisma.question.findUnique({
      where: { id: questionId },
      include: {
        specific: true,
        general: true,
        questionConversation: true,
      },
    });
    if (!question) {
      throw new NotFoundError("Question not found");
    }
    return question;
  }

  /**
   * GET: alle vragen in 1 team, gefilterd op private
   *  We hebben 'user' nodig om te filteren.
   */
  static async getQuestionsForTeam(teamId: number, user: AuthenticatedUser): Promise<Question[]> {
    const allQs = await prisma.question.findMany({
      where: { teamId },
      include: {
        team: {
          include: {
            students: true,
            class: { include: { ClassTeacher: true } }
          }
        },
        specific: true,
        general: true,
        questionConversation: true
      },
      orderBy: { createdAt: "desc" },
    });
    return allQs.filter(q => canUserSeeQuestionInList(q, user));
  }

  /**
   * GET: alle vragen in 1 class, gefilterd
   */
  static async getQuestionsForClass(classId: number, user: AuthenticatedUser): Promise<Question[]> {
    const allQs = await prisma.question.findMany({
      where: {
        team: { classId },
      },
      include: {
        team: {
          include: {
            students: true,
            class: { include: { ClassTeacher: true } }
          }
        },
        specific: true,
        general: true,
        questionConversation: true
      },
      orderBy: { createdAt: "desc" },
    });
    return allQs.filter(q => canUserSeeQuestionInList(q, user));
  }

  /**
   * GET: alle vragen voor assignment + class, gefilterd
   */
  static async getQuestionsForAssignment(assignmentId: number, classId: number, user: AuthenticatedUser): Promise<Question[]> {
    const allQs = await prisma.question.findMany({
      where: {
        assignmentId,
        team: {
          classId,
        }
      },
      include: {
        team: {
          include: {
            students: true,
            class: { include: { ClassTeacher: true } }
          }
        },
        specific: true,
        general: true,
        questionConversation: true
      },
      orderBy: { createdAt: "desc" },
    });
    return allQs.filter(q => canUserSeeQuestionInList(q, user));
  }

  /**
   * GET: alle messages van 1 vraag
   * (De authorizeQuestion-middleware checkt of user de vraag mag zien.)
   */
  static async getQuestionMessages(questionId: number): Promise<QuestionMessage[]> {
    await this.getQuestion(questionId); // check existence
    return prisma.questionMessage.findMany({
      where: { questionId },
      orderBy: { createdAt: "asc" },
    });
  }

  /**
   * DELETE vraag (cascade messages)
   */
  static async deleteQuestion(questionId: number): Promise<Question> {
    const question = await prisma.question.findUnique({ where: { id: questionId } });
    if (!question) {
      throw new NotFoundError("Question not found");
    }
    return prisma.question.delete({ where: { id: questionId } });
  }

  /**
   * DELETE message
   */
  static async deleteQuestionMessage(questionMessageId: number): Promise<QuestionMessage> {
    const msg = await prisma.questionMessage.findUnique({ where: { id: questionMessageId } });
    if (!msg) {
      throw new NotFoundError("QuestionMessage not found");
    }
    return prisma.questionMessage.delete({ where: { id: questionMessageId } });
  }
}


===== Bestand: ../dwengo_backend/services/inviteService.ts =====
import { Invite, JoinRequestStatus, Class, PrismaClient } from "@prisma/client";
import classService from "./classService";
import { AccesDeniedError, BadRequestError, ConflictError, NotFoundError } from "../errors/errors";

const prisma = new PrismaClient();

export default class inviteService {

    private static async validateInvitePending(inviteId: number, otherTeacherId: number): Promise<Invite> {
        const invite: Invite | null = await prisma.invite.findFirst({
            where: {
                inviteId,
                otherTeacherId,
                status: JoinRequestStatus.PENDING,
            },
        });
        if (!invite) {
            throw new BadRequestError("Uitnodiging is niet pending of bestaat niet");
        }
        return invite;
    }

    static async createInvite(classTeacherId: number, otherTeacherEmail: string, classId: number): Promise<Invite> {
        // Check if de klas bestaat
        const classroom: Class | null = await classService.getClassById(classId);
        if (!classroom) {
            throw new NotFoundError("Klas niet gevonden");
        }

        // Check of de leerkracht die de invite verstuurt beheerder is van de klas
        const isTeacher: boolean = await classService.isTeacherOfClass(classId, classTeacherId);
        if (!isTeacher) {
            throw new AccesDeniedError("Leerkracht is geen beheerder van de klas");
        }

        // Zoek de leerkracht op basis van het e-mailadres
        const teacherUser = await prisma.user.findUnique({
            where: { email: otherTeacherEmail },
        });
        if (!teacherUser || teacherUser.role !== "TEACHER") {
            throw new NotFoundError("Leerkracht niet gevonden");
        }
        const otherTeacherId = teacherUser.id;

        // Controleer of er al een pending invite bestaat voor deze teacher en klas
        const existingInvite: Invite | null = await prisma.invite.findFirst({
            where: {
                otherTeacherId,
                classId,
                status: JoinRequestStatus.PENDING,
            },
        });
        if (existingInvite) {
            throw new ConflictError("Er bestaat al een pending uitnodiging voor deze leerkracht en klas");
        }

        // Controleer of de teacher nog geen lid is van de klas
        const isAlreadyTeacher: boolean = await classService.isTeacherOfClass(classId, otherTeacherId);
        if (isAlreadyTeacher) {
            throw new BadRequestError("Leerkracht is al lid van de klas");
        }

        // Maak de invite aan
        return await prisma.invite.create({
            data: {
                otherTeacherId,
                classTeacherId,
                classId,
                status: JoinRequestStatus.PENDING,
            },
        });
    }

    static async getPendingInvitesForClass(classTeacherId: number, classId: number): Promise<Invite[]> {
        // Alleen een teacher van de klas mag de invites zien
        const isTeacher: boolean = await classService.isTeacherOfClass(classId, classTeacherId);
        if (!isTeacher) {
            throw new AccesDeniedError("Leerkracht is geen beheerder van de klas");
        }
        return await prisma.invite.findMany({
            where: {
                classId,
                status: JoinRequestStatus.PENDING,
            },
        });
    }

    static async getPendingInvitesForTeacher(teacherId: number): Promise<Invite[]> {
        return prisma.invite.findMany({
            where: {
                otherTeacherId: teacherId,
                status: JoinRequestStatus.PENDING,
            },
        });
    }

    static async acceptInviteAndJoinClass(teacherId: number, inviteId: number): Promise<Invite> {
        // Check of de invite pending is
        let invite: Invite = await this.validateInvitePending(inviteId, teacherId);

        [invite] = await prisma.$transaction([
            // Accept de invite
            prisma.invite.update({
                where: {
                    inviteId: invite.inviteId,
                },
                data: {
                    status: JoinRequestStatus.APPROVED,
                },
            }),
            // Voeg de teacher toe aan de klas
            prisma.classTeacher.create({
                data: {
                    teacherId,
                    classId: invite.classId,
                },
            }),
        ]);
        return invite;
    }

    static async declineInvite(teacherId: number, inviteId: number): Promise<Invite> {
        // Check of de invite pending is
        const invite: Invite = await this.validateInvitePending(inviteId, teacherId);

        // Decline de invite
        return prisma.invite.update({
            where: {
                inviteId: invite.inviteId,
            },
            data: {
                status: JoinRequestStatus.DENIED,
            },
        });
    }

    static async deleteInvite(classTeacherId: number, inviteId: number, classId: number): Promise<Invite> {
        // Check of de teacher een teacher van de klas is
        const isTeacher: boolean = await classService.isTeacherOfClass(classId, classTeacherId);
        if (!isTeacher) {
            throw new AccesDeniedError("Leerkracht is geen beheerder van de klas");
        }

        // Verwijder de invite
        return await prisma.invite.delete({
            where: {
                inviteId,
                classId,
            },
        });
    }
}


===== Bestand: ../dwengo_backend/services/userService.ts =====
import { PrismaClient, Role, User } from "@prisma/client";

const prisma = new PrismaClient();

export default class UserService {
  static async findUser(email: string): Promise<User | null> {
    return prisma.user.findUnique({ where: { email } });
  }

  static async createUser(
    firstName: string,
    lastName: string,
    email: string,
    hashedPassword: string,
    role: Role
  ): Promise<User> {
    return prisma.user.create({
      data: {
        firstName,
        lastName,
        email,
        password: hashedPassword,
        role: role,
        // This immediately creates the teacher/student/admin records as well
        teacher: role === Role.TEACHER ? { create: {} } : undefined,
        student: role === Role.STUDENT ? { create: {} } : undefined,
        admin: role === Role.ADMIN ? { create: {} } : undefined,
      },
      include: {
        teacher: true,
        student: true,
        admin: true,
      },
    });
  }

  static async findUserByEmail(email: string): Promise<User> {
    return prisma.user.findUniqueOrThrow({ where: { email } });
  }
}


===== Bestand: ../dwengo_backend/services/studentTeamService.ts =====
import {PrismaClient, Team} from "@prisma/client";

const prisma = new PrismaClient();

export default class StudentTeamService {
    static async getStudentTeams(studentId: number): Promise<Team[]> {
        return prisma.team.findMany({
            where: {
                students: {
                    some: {userId: studentId}
                }
            },
            include: {
                teamAssignment: {
                    include: {
                        assignment: true,
                    },
                },
            },
        });
    };

    static async getTeam(studentId: number, assignmentId: number) {
        return prisma.team.findFirst({
            where: {
                students: {
                    some: {userId: studentId}
                },
                teamAssignment: {
                    assignmentId: assignmentId,
                }
            },
            include: {
                students: {
                    select: {
                        userId: true,
                        user: {select: {id: true, email: true, firstName: true, lastName: true}}
                    }
                },
                teamAssignment: {
                    include: {
                        assignment: true,
                    },
                },
            },
        });
    }

    static async getTeamById(teamId: number) {
        return prisma.team.findUnique({
            where: {id: teamId},
            include: {
                students: {
                    select: {
                        userId: true,
                        user: {select: {id: true, email: true, firstName: true, lastName: true}}
                    }
                }
            }
        });
    }
}


===== Bestand: ../dwengo_backend/services/studentService.ts =====
import { PrismaClient, Student, User } from "@prisma/client";

const prisma = new PrismaClient();

export default class StudentService {
  static async findStudentById(
    userId: number
  ): Promise<Student & { user: User }> {
    return prisma.student.findUniqueOrThrow({
      where: { userId: userId },
      include: {
        user: true,
      },
    });
  }

  static async getStudentsByClass(classId: number): Promise<Student[]> {
    const classWithStudents = await prisma.class.findUnique({
      where: { id: classId },
      include: {
        classLinks: { include: { student: { include: { user: true } } } },
      },
    });

    if (!classWithStudents) {
      throw new Error(`Class with ID: ${classId} not found`);
    }

    return classWithStudents.classLinks.map((cs) => cs.student);
  }

  static async getStudentsByTeamAssignment(
    assignmentId: number,
    teamId: number
  ): Promise<Student[]> {
    return prisma.student.findMany({
      where: {
        Team: {
          some: {
            id: teamId,
            teamAssignment: {
              assignmentId: assignmentId,
            },
          },
        },
      },
      include: {
        user: true,
      },
    });
  }
}


===== Bestand: ../dwengo_backend/services/assignmentService.ts =====
import { Assignment, PrismaClient } from "@prisma/client";

const prisma = new PrismaClient();

export default class AssignmentService {
  static async getAssignmentById(assignmentId: number): Promise<Assignment | null> {
    return prisma.assignment.findUnique({
      where: { id: assignmentId },
      // geen include meer, want there's no relation to learningPath
    });
  }
}



===== Bestand: ../dwengo_backend/services/feedbackService.ts =====
import {Assignment, Feedback, PrismaClient, Teacher} from '@prisma/client';


const prisma = new PrismaClient();

export default class FeedbackService {
    static async getAllFeedbackForEvaluation(assignmentId: number, evaluationId: string, teacherId: number): Promise<Feedback[]> {
        if (!await this.hasAssignmentRights(assignmentId, teacherId)) {
            throw new Error("The teacher is unauthorized to perform this action");
        }

        return prisma.feedback.findMany({
            where: {
                submission: {
                    evaluationId: evaluationId,
                    assignmentId: assignmentId
                },
            },
            include: {
                submission: true,
            },
        });
    }

    static async createFeedback(submissionId: number, teacherId: number, description: string): Promise<Feedback> {
        if (!await this.hasSubmissionRights(teacherId, submissionId)) {
            throw new Error("The teacher is unauthorized to perform this action");
        }

        // aantal evaluaties met deadline in de toekomst
        const deadline: Assignment | null = await prisma.assignment.findFirst({
            where: {
                submissions: {
                    some: {
                        submissionId: submissionId,
                    },
                },
                deadline: {
                    // gte == Greater than equal
                    gte: new Date()
                }
            }
        });

        // Als deadline in de toekomst ligt: error
        if (deadline !== null) {
            throw new Error("Deadline in toekomst");
        }

        return prisma.feedback.create({
            data: {
                submissionId: submissionId,
                teacherId: teacherId,
                description: description,
            },
        });
    }

    static async getFeedbackForSubmission(submissionId: number, teacherId: number): Promise<Feedback | null> {
        if (!await this.hasSubmissionRights(teacherId, submissionId)) {
            throw new Error("The teacher is unauthorized to perform this action");
        }

        return prisma.feedback.findUnique({
            where: {
                submissionId: submissionId,
            }
        });
    }

    static async updateFeedbackForSubmission(submissionId: number, description: string, teacherId: number): Promise<Feedback> {
        if (!await this.hasSubmissionRights(teacherId, submissionId)) {
            throw new Error("The teacher is unauthorized to perform this action");
        }

        return prisma.feedback.update({
            where: {
                submissionId: submissionId,
            },
            data: {
                description: description,
            },
        });
    }

    static async deleteFeedbackForSubmission(submissionId: number, teacherId: number): Promise<Feedback> {
        if (!await this.hasSubmissionRights(teacherId, submissionId)) {
            throw new Error("The teacher is unauthorized to perform this action");
        }

        return prisma.feedback.delete({
            where: {
                submissionId: submissionId,
            },
        });

    }

    static async hasAssignmentRights(assignmentId: number, teacherId: number): Promise<boolean> {
        // Tel aantal leerkrachten die rechten hebben op de evaluatie
        const teacherWithRights: Teacher | null = await prisma.teacher.findFirst({
            where: {
                userId: teacherId,
                teaches: {
                    some: {
                        class: {
                            assignments: {
                                some: {
                                    assignment: {
                                        id: assignmentId,
                                    }
                                }
                            }
                        }
                    }
                }
            }
        });

        return teacherWithRights !== null;
    }

    static async hasSubmissionRights(teacherId: number, submissionId: number): Promise<boolean> {
        // Ga na of de leerkracht rechten heeft op de submission
        const teacherWithRights: Teacher | null = await prisma.teacher.findFirst({
            where: {
                userId: teacherId,
                teaches: {
                    some: {
                        class: {
                            assignments: {
                                some: {
                                    assignment: {
                                        submissions: {
                                            some: {
                                                submissionId: submissionId,
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        );

        // Return true als teacher rechten heeft
        return teacherWithRights !== null;
    }
}

===== Bestand: ../dwengo_backend/services/teacherTeamsService.ts =====
import {ClassAssignment, ClassStudent, PrismaClient, Student, Team, User} from "@prisma/client";
import {IdentifiableTeamDivision, TeamDivision} from "../interfaces/extendedTypeInterfaces"
import _ from "lodash";

const prisma = new PrismaClient();

/**
 * This function assumes that the division of a group of people into teams has already been done
 * and is specified as a "TeamDivision" interface.
 * This function assumes the assignment has already been linked to a Class.
 * **/
export const createTeamsInAssignment = async (
    assignmentId: number,
    classId: number,
    teams: TeamDivision[]
): Promise<Team[]> => {
    const createdTeams: Team[] = [];

    // Check if a class has been assigned an Assignment before splitting this class up into
    // Teams to solve this assignment.
    const classAssignments: ClassAssignment[] = await prisma.classAssignment.findMany({
        where: {
            assignmentId: assignmentId,
            classId: classId,
        }
    });

    if (classAssignments.length === 0) {
        throw new Error("Assignment not found or not linked to any class.");
    }

    // Create teams in the database
    for (const team of teams) {
        const newTeam: Team = await createTeam(team.teamName, classId);
        await assignStudentsToTeam(newTeam.id, team.studentIds);
        await giveAssignmentToTeam(newTeam.id, assignmentId);

        createdTeams.push(newTeam);
    }

    return createdTeams;
};

// Helper function for createTeamsInAssignment
// This function creates a Team with a given teamname
async function createTeam(teamName: string, classId: number): Promise<Team> {
    return prisma.team.create({
        data: {
            teamname: teamName,
            classId: classId,
        }
    });
}

// Helper function for createTeamsInAssignment
// This function assigns an Assignment to a Team
async function giveAssignmentToTeam(teamId: number, assignmentId: number): Promise<Team> {
    return prisma.team.update({
        where: { id: teamId },
        data: {
            teamAssignment: {
                // Update if it already exists, create if it does not exist
                upsert: {
                    create: { assignmentId },
                    update: { assignmentId },
                },
            },
        },
    });
}

// Helper function for createTeamsInAssignment
// This function updates the list of students in a Team
async function assignStudentsToTeam(teamId: number, studentIds: number[]): Promise<void> {
    for (const studentId of studentIds) {
        // Ga eerst na of deze student en dit team zelfs bestaan
        const student: Student | null = await prisma.student.findUnique({ where: { userId: studentId } });
        const team: Team | null = await prisma.team.findUnique({ where: { id: teamId } });

        if (student && team) {
            await prisma.team.update({
                where: { id: teamId },
                data: {
                    students: {
                        connect: { userId: studentId },
                    }
                }
            });
        }
    }
}

//* Zoals ik het zie kan een leerkracht eerst deze functie lokaal gebruiken om een teamindeling te maken.
// Als deze hier dan mee akkoord gaat kan de leerkracht het resultaat van deze functie geven aan
// createTeamsInAssignment. Want createTeamsInAssignment verwacht al een geldige indeling, daar wordt ook
// door middleware op gecontroleerd.
// *//
async function randomlyDivideClassIntoTeams(teamSize: number, classId: number): Promise<TeamDivision[]> {

    const students: ClassStudent[] = await prisma.classStudent.findMany({
        where: {classId: classId},
    });

    // Ensure that class is found and classLinks exists
    if (!students) {
        throw new Error(`No students found for ${classId}`);
    }

    const studentIds: number[] = students.map((st: ClassStudent): number => st.studentId);

    // Shuffle the list of studentIds using Lodash
    const shuffledStudents: number[] = _.shuffle(studentIds);

    const teams: TeamDivision[] = [];

    for (let i: number = 0; i < shuffledStudents.length; i += teamSize) {
        teams.push({
            teamName: `Team ${i+1}`,
            // Select "teamSize" amount of students via slicing
            studentIds: shuffledStudents.slice(i, i + teamSize),
        });
    }

    return teams;
}


// Does the same as "randomlyDivideClassIntoTeams" but sorts the students alphabetically
async function divideClassIntoAlphabeticalTeams(teamSize: number, classId: number): Promise<TeamDivision[]> {
    // This lets TypeScript know what is happening when assigning types to the variables in the sort function
    interface StudentWithUser extends Student {
        user: User;
    }

    // First fetch all the students in the given class
    const students: (Student & { user: User })[] = await prisma.student.findMany({
        where: {
            classes: {
                some: {
                    classId: classId,
                },
            },
        },
        include: { user: true },
    });

    // Check if the class is not empty
    if (!students || students.length === 0) {
        throw new Error(`No students found for ${classId}`);
    }

    // Sort students alphabetically by name
    const sortedStudents: StudentWithUser[] = students.sort((a: StudentWithUser, b: StudentWithUser): number => {
        // Sort alphabetically based on the user's last name
        const lastNameComparison: number = a.user.lastName.localeCompare(b.user.lastName);

        // If last names are the same, compare by first name
        return lastNameComparison !== 0 ? lastNameComparison : a.user.firstName.localeCompare(b.user.firstName);
    });

    // Extract sorted student IDs
    const studentIds: number[] = sortedStudents.map((st: Student): number => st.userId);

    const teams: TeamDivision[] = [];

    for (let i: number = 0; i < studentIds.length; i += teamSize) {
        teams.push({
            teamName: `Team ${Math.floor(i / teamSize) + 1}`,
            // Select "teamSize" amount of students via slicing
            studentIds: studentIds.slice(i, i + teamSize),
        });
    }

    return teams;
}

// Check if the students exists or not
const validateStudentIds = async (studentIds: number[]): Promise<void> => {
    // Fetch all valid students from the database
    const validStudents: Student[] = await prisma.student.findMany({
        where: { userId: { in: studentIds } },
        select: { userId: true }
    });

    // Extract the StudentIds
    const validStudentIds = new Set(validStudents.map((student: Student): number => student.userId));

    // Check if all the given StudentIds where found in the Database
    const invalidStudentIds: number[] = studentIds.filter((studentId: number): boolean => !validStudentIds.has(studentId));

    // If any ID was not found this means that it isn't part of our Database and is therefore invalid
    if (invalidStudentIds.length > 0) {
        throw new Error(`Invalid student IDs: ${invalidStudentIds.join(", ")}`);
    }
};

// Update the given list of teams that have a given assignment
export const updateTeamsForAssignment = async (
    assignmentId: number,
    teams: IdentifiableTeamDivision[]
): Promise<Team[]> => {
    const updatedTeams: Team[] = [];

    for (const team of teams) {
        // Check if the team exists
        const existingTeam: Team | null = await prisma.team.findUnique({ where: { id: team.teamId } });

        if (!existingTeam) {
            throw new Error(`Team with ID ${team.teamId} not found.`);
        }

        // Validate students before updating
        await validateStudentIds(team.studentIds);

        // Update team name and students
        const updatedTeam: Team = await prisma.team.update({
            where: { id: team.teamId },
            data: {
                teamname: team.teamName,
                students: {
                    // The set operation removes all existing students from the team and replaces them with the new list of students (team.studentIds).
                    set: team.studentIds.map((studentId: number): {userId: number} => ({ userId: studentId }))
                },
                teamAssignment: {
                    connectOrCreate: {
                        where: { teamId_assignmentId: {  teamId: team.teamId, assignmentId } },
                        create: { assignmentId: assignmentId }
                    }
                }
            }
        });

        updatedTeams.push(updatedTeam);
    }

    return updatedTeams;
};


// Get all teams for a given assignment
export const getTeamsThatHaveAssignment = async (assignmentId: number): Promise<Team[]> => {
    return prisma.team.findMany({
        where: {
            teamAssignment: {
                assignmentId: assignmentId,
            }
        }
    });
};

// Delete a team from an assignment
// The TeamAssignment record will be deleted is either the team or assignment are deleted because of onDelete: Cascade
export const deleteTeam = async (teamId: number): Promise<void> => {
    await prisma.team.delete({
        where: {
            id: teamId
        }
    });
};


===== Bestand: ../dwengo_backend/services/studentAssignmentService.ts =====
import { Assignment, PrismaClient } from "@prisma/client";

const prisma = new PrismaClient();

/**
 * Haalt alle assignments op die een student (studentId) kan zien,
 * gesorteerd op meegegeven velden, en limiteer met 'limit'.
 * 
 * Let op: 'pathRef' en 'isExternal' staan nu in Assignment, 
 * we laten ze gewoon meekomen in de resultaten.
 */
export const getAssignmentsForStudent = async (
  studentId: number,
  sortFields: string[],
  order: "asc" | "desc",
  limit: number
): Promise<Assignment[]> => {
  return prisma.assignment.findMany({
    where: {
      classAssignments: {
        some: {
          class: {
            classLinks: {
              some: {
                studentId: studentId,
              },
            },
          },
        },
      },
    },
    orderBy: sortFields.map((field: string) => ({ [field]: order })),
    take: limit,
    // We hebben geen 'learningPath' relation meer, dus geen include needed
  });
};


===== Bestand: ../dwengo_backend/services/teacherServices/teacherAssignmentService.ts =====
import { Assignment, PrismaClient, Role } from "@prisma/client";
import { canUpdateOrDelete, isAuthorized } from "../authorizationService";
import ReferenceValidationService from "../../services/referenceValidationService";
// ^ let op: named import, gÃ©Ã©n "default" meer.

const prisma = new PrismaClient();

export default class TeacherAssignmentService {
  /**
   * CreÃ«er een assignment voor een class, met pathRef/isExternal.
   */
  static async createAssignmentForClass(
    teacherId: number,
    classId: number,
    pathRef: string,
    pathLanguage: string,
    isExternal: boolean,
    deadline: Date,
    title: string,
    description: string
  ): Promise<Assignment> {
    // 1) check authorization
    if (!(await isAuthorized(teacherId, Role.TEACHER, classId))) {
      throw new Error("The teacher is unauthorized to perform this action");
    }

    // 2) Valideer pathRef
    // => isExternal=true => Dwengo (hruid + language)
    // => isExternal=false => lokaal (localId=pathRef)
    await ReferenceValidationService.validateLearningPath(
      isExternal,
      isExternal ? undefined : pathRef, // localId
      isExternal ? pathRef : undefined, // hruid
      isExternal ? pathLanguage : undefined // language
    );

    // 3) Maak assignment
    return prisma.assignment.create({
      data: {
        pathRef,
        isExternal,
        deadline,
        classAssignments: {
          create: {
            classId,
          },
        },
        title,
        description,
      },
    });
  }

  /**
   * Haal alle assignments op voor 1 klas
   */
  static async getAssignmentsByClass(
    classId: number,
    teacherId: number
  ): Promise<Assignment[]> {
    if (!(await isAuthorized(teacherId, Role.TEACHER, classId))) {
      throw new Error("The teacher is unauthorized to request the assignments");
    }
    return prisma.assignment.findMany({
      where: {
        classAssignments: {
          some: {
            classId,
          },
        },
      },
    });
  }

  /**
   * Update assignment => pathRef/isExternal
   */
  static async updateAssignment(
    assignmentId: number,
    pathRef: string,
    isExternal: boolean,
    teacherId: number,
    title: string,
    description: string
  ): Promise<Assignment> {
    // 1) autorisatie
    if (!(await canUpdateOrDelete(teacherId, assignmentId))) {
      throw new Error("The teacher is unauthorized to update the assignment");
    }

    // 2) validate new pathRef
    await ReferenceValidationService.validateLearningPath(isExternal, pathRef);

    // 3) update
    return prisma.assignment.update({
      where: { id: assignmentId },
      data: {
        pathRef,
        isExternal,
        title,
        description,
      },
    });
  }

  /**
   * Delete assignment
   */
  static async deleteAssignment(
    assignmentId: number,
    teacherId: number
  ): Promise<Assignment> {
    if (!(await canUpdateOrDelete(teacherId, assignmentId))) {
      throw new Error("The teacher is unauthorized to delete the assignment");
    }

    return prisma.assignment.delete({
      where: { id: assignmentId },
    });
  }
}


===== Bestand: ../dwengo_backend/services/submissionService.ts =====
import { PrismaClient, Submission } from "@prisma/client";
import { AccesDeniedError } from "../errors/errors";

const prisma = new PrismaClient();

export default class submissionService {
  static async createSubmission(
    studentId: number,
    evaluationId: string,
    assignmentId: number
  ): Promise<Submission> {
    // Controleren of de student in een team zit dat gekoppeld is aan de opdracht.
    // De originele filter probeerde ook te filteren op assignment.learningPath, maar dat veld bestaat niet.
    const team: {id: number} | null = await prisma.team.findFirst({
      where: {
        students: {
          some: {
            userId: studentId,
          },
        },
        teamAssignment: {
          assignment: {
            id: assignmentId,
          },
        },
      },
      select: {
        id: true,
      },
    });

    if (!team) {
      throw new AccesDeniedError("Student is not in a team for this assignment");
    }

    return prisma.submission.create({
      data: {
        evaluationId: evaluationId,
        teamId: team.id,
        assignmentId: assignmentId,
      },
    });
  }

  static async getSubmissionsForAssignment(
    assignmentId: number,
    studentId: number
  ): Promise<Submission[]> {
    return prisma.submission.findMany({
      where: {
        assignmentId: assignmentId,
        team: {
          students: {
            some: {
              userId: studentId,
            },
          },
          teamAssignment: {
            assignmentId: assignmentId,
          },
        },
      },
    });
  }

  static getSubmissionsForEvaluation(
    assignmentId: number,
    evaluationId: string,
    studentId: number
  ): Promise<Submission[]> {
    return prisma.submission.findMany({
      where: {
        assignmentId: assignmentId,
        evaluationId: evaluationId,
        team: {
          students: {
            some: {
              userId: studentId,
            },
          },
          teamAssignment: {
            assignmentId: assignmentId,
          },
        },
      },
    });
  }

  static teacherGetSubmissionsForStudent(
    studentId: number,
    teacherId: number,
    assignmentId?: number
  ): Promise<Submission[]> {
    return prisma.submission.findMany({
      where: {
        team: {
          students: {
            some: {
              userId: studentId,
            },
          },
        },
        assignment: {
          id: assignmentId,
          classAssignments: {
            some: {
              class: {
                ClassTeacher: {
                  some: {
                    teacherId: teacherId,
                  },
                },
              },
            },
          },
        },
      },
    });
  }

  static async teacherGetSubmissionsForTeam(
    teamId: number,
    teacherId: number,
    assignmentId?: number
  ) {
    return prisma.submission.findMany({
      where: {
        team: {
          id: teamId,
        },
        assignment: {
          id: assignmentId,
          classAssignments: {
            some: {
              class: {
                ClassTeacher: {
                  some: {
                    teacherId: teacherId,
                  },
                },
              },
            },
          },
        },
      },
    });
  }
}


===== Bestand: ../dwengo_backend/services/localLearningPathService.ts =====
import { PrismaClient, LearningPath } from "@prisma/client";

const prisma = new PrismaClient();

export interface LocalLearningPathData {
  title?: string;
  language?: string;
  description?: string;
  image?: string | null;
}

class LocalLearningPathService {
  /**
   * Maak leerpad met num_nodes = 0.
   */
  async createLearningPath(
    teacherId: number,
    data: Required<LocalLearningPathData>
  ): Promise<LearningPath> {
    const newPath = await prisma.learningPath.create({
      data: {
        title: data.title,
        language: data.language,
        description: data.description || "",
        image: data.image,
        num_nodes: 0,
        num_nodes_left: 0,
        creatorId: teacherId,
        // unieker hruid
        hruid: `lp-${Date.now()}-${Math.floor(Math.random() * 100000)}`,
      },
    });
    return newPath;
  }

  async getAllLearningPathsByTeacher(teacherId: number): Promise<LearningPath[]> {
    return prisma.learningPath.findMany({
      where: { creatorId: teacherId },
      orderBy: { createdAt: "desc" },
    });
  }

  async getLearningPathById(pathId: string): Promise<LearningPath | null> {
    return prisma.learningPath.findUnique({
      where: { id: pathId },
    });
  }

  async updateLearningPath(pathId: string, data: LocalLearningPathData): Promise<LearningPath> {
    const updated = await prisma.learningPath.update({
      where: { id: pathId },
      data: {
        title: data.title,
        language: data.language,
        description: data.description,
        image: data.image,
      },
    });
    return updated;
  }

  async deleteLearningPath(pathId: string): Promise<void> {
    await prisma.learningPath.delete({
      where: { id: pathId },
    });
  }

  /**
   * Hulpmethode om bij elke mutatie van nodes het aantal nodes te herberekenen
   */
  async updateNumNodes(pathId: string): Promise<void> {
    const count = await prisma.learningPathNode.count({
      where: { learningPathId: pathId },
    });
    await prisma.learningPath.update({
      where: { id: pathId },
      data: { num_nodes: count },
    });
  }
}

export default new LocalLearningPathService();


===== Bestand: ../dwengo_backend/services/classService.ts =====
import {
  Class,
  ClassStudent,
  ClassTeacher,
  PrismaClient,
  Student,
  User,
} from "@prisma/client";
import crypto from "crypto";
import {
  AccesDeniedError,
  BadRequestError,
  NotFoundError,
} from "../errors/errors";

const prisma = new PrismaClient();

export type ClassWithLinks = Class & { classLinks: ClassStudent[] };

export default class ClassService {
  static async createClass(name: string, teacherId: number): Promise<Class> {
    // Generate a unique join code (e.g., an 8-digit hex string)
    const joinCode = await this.generateUniqueCode();

    const classroom = await prisma.class.create({
      data: {
        name: name, // name field matches the Class schema
        code: joinCode, // code field matches the Class schema
      },
    });

    // Now that you have the class id, create the ClassTeacher record
    await prisma.classTeacher.create({
      data: {
        teacherId: teacherId, // teacherId links to the teacher record
        classId: classroom.id, // Use the id of the newly created class
      },
    });

    return classroom;
  }

  // this function checks if the class exists and if the teacher is associated with the class
  // if either of these conditions are not met, an error is thrown
  private static async verifyClassAndTeacher(
    classId: number,
    teacherId: number
  ): Promise<void> {
    // Check if the class exists
    const classroom = await prisma.class.findUnique({
      where: { id: classId },
    });
    if (!classroom) {
      throw new NotFoundError(`Class with id ${classId} not found`);
    }

    // Check if the teacher is associated with the class
    const isTeacher = await this.isTeacherOfClass(classId, teacherId);
    if (!isTeacher) {
      throw new AccesDeniedError(
        `Acces denied: Teacher ${teacherId} is not part of class ${classId}`
      );
    }
    return;
  }

  // Delete a class by ID
  static async deleteClass(classId: number, teacherId: number): Promise<Class> {
    await this.verifyClassAndTeacher(classId, teacherId);
    return await prisma.class.delete({ where: { id: classId } }); // onDelete: Cascade in the prisma schema makes sure that all related records are also deleted
  }

  // Get all classes taught by a given teacher
  static async getClassesByTeacher(teacherId: number): Promise<Class[]> {
    // Fetch all classes where the teacher is assigned
    return prisma.class.findMany({
      where: {
        ClassTeacher: {
          some: {
            teacherId: teacherId, // Filter for the given teacherId
          },
        },
      },
    });
  }

  // Get all classes a student is partaking in
  static async getClassesByStudent(studentId: number): Promise<Class[]> {
    // Fetch all classes where the student is enrolled
    return prisma.class.findMany({
      where: {
        classLinks: {
          some: {
            studentId: studentId, // Filter for the given studentId
          },
        },
      },
    });
  }

  // Function to check if the requester is the teacher of the class
  static async isTeacherOfClass(
    classId: number,
    teacherId: number
  ): Promise<boolean> {
    const classTeacher: ClassTeacher | null =
      await prisma.classTeacher.findUnique({
        where: {
          teacherId_classId: {
            teacherId: teacherId,
            classId: classId,
          },
        },
      });
    return classTeacher !== null;
  }

  // Get all students from a given class
  static async getStudentsByClass(
    classId: number,
    teacherId: number
  ): Promise<(Student & { user: User })[]> {
    await this.verifyClassAndTeacher(classId, teacherId);

    const classStudents = await prisma.classStudent.findMany({
      where: { classId },
      include: {
        student: {
          include: { user: true }, // include user details
        },
      },
    });
    return classStudents.map((cs) => cs.student);
  }

  static async addStudentToClass(
    studentId: number,
    classId: number
  ): Promise<ClassStudent> {
    return prisma.classStudent.create({
      data: {
        studentId,
        classId,
      },
    });
  }

  // Check if student is already in the class
  static async isStudentInClass(
    classroom: ClassWithLinks,
    studentId: number
  ): Promise<boolean> {
    return classroom.classLinks.some(
      (link: ClassStudent) => link.studentId === studentId
    );
  }

  static async removeStudentFromClass(
    studentId: number,
    classId: number
  ): Promise<ClassStudent> {
    return prisma.classStudent.delete({
      where: {
        studentId_classId: {
          studentId,
          classId,
        },
      },
    });
  }

  // Return all classes
  static async getAllClasses(): Promise<Class[]> {
    // Returns an empty array if nothing is found
    return prisma.class.findMany();
  }

  // Read a class by ID
  static async getClassById(id: number): Promise<Class | null> {
    return prisma.class.findUnique({
      where: { id: id },
    });
  }

  // Read a class by ID and teacher ID
  static async getClassByIdAndTeacherId(
    classId: number,
    teacherId: number
  ): Promise<Class | null> {
    // Verify if the teacher is associated with the class
    const isTeacher = await this.isTeacherOfClass(classId, teacherId);
    if (!isTeacher) {
      throw new AccesDeniedError(
        `Access denied: Teacher ${teacherId} is not part of class ${classId}`
      );
    }

    // Fetch the class by ID
    return prisma.class.findUnique({
      where: { id: classId },
    });
  }

  // Give the class a new name
  static async updateClassName(
    classId: number,
    newName: string
  ): Promise<Class> {
    return prisma.class.update({
      where: { id: classId },
      data: { name: newName },
    });
  }

  // Read a class by JoinCode
  static async getClassByJoinCode(
    joinCode: string
  ): Promise<ClassWithLinks | null> {
    if (!joinCode) {
      throw new BadRequestError(`Invalid join code: ${joinCode}`);
    }
    return prisma.class.findUnique({
      where: { code: joinCode }, // Search by the joinCode (which is 'code' in the schema)
      include: {
        classLinks: true,
      },
    });
  }

  static async getJoinCode(
    classId: number,
    teacherId: number
  ): Promise<string> {
    const classroom = await prisma.class.findUnique({
      where: { id: classId },
      select: { code: true }, // Only fetch the join code
    });
    if (!classroom) {
      throw new NotFoundError(`Class with id ${classId} not found`);
    }

    // Check if the teacher is associated with the class
    const isTeacher = await this.isTeacherOfClass(classId, teacherId);
    if (!isTeacher) {
      throw new AccesDeniedError(
        `Acces denied: Teacher ${teacherId} is not part of class ${classId}`
      );
    }

    return classroom.code;
  }

  // Function to generate a unique join code
  static async generateUniqueCode(): Promise<string> {
    let isUnique = false;
    let newJoinCode: string = "";

    while (!isUnique) {
      // Generate new join code
      newJoinCode = crypto.randomBytes(4).toString("hex");

      // Check if the code is unique in the database
      const existingClass = await prisma.class.findUnique({
        where: { code: newJoinCode },
      });

      if (!existingClass) {
        isUnique = true;
      }
    }

    return newJoinCode;
  }

  // Function to regenerate the join code for a class
  static async regenerateJoinCode(
    classId: number,
    teacherId: number
  ): Promise<string> {
    await this.verifyClassAndTeacher(classId, teacherId);

    // Generate a unique join code
    const newJoinCode = await this.generateUniqueCode();

    // Update class with the new join code
    const updatedClass = await prisma.class.update({
      where: { id: classId },
      data: { code: newJoinCode },
    });

    return updatedClass.code;
  }

  // Get all classes from the same teacher
  static async getAllClassesByTeacher(teacherId: number): Promise<Class[]> {
    // Fetch all classes taught by the same teacher
    return prisma.class.findMany({
      where: {
        ClassTeacher: {
          some: {
            teacherId,
          },
        },
      },
    });
  }
}


===== Bestand: ../dwengo_backend/services/referenceValidationService.ts =====
import { PrismaClient } from "@prisma/client";
import { dwengoAPI } from "../config/dwengoAPI";

const prisma = new PrismaClient();

/**
 * ReferenceValidationService:
 *  - Voor LOCAL => check in eigen DB (prisma)
 *  - Voor EXTERN => check bij Dwengo API (met hruid/language/version)
 */
export default class ReferenceValidationService {
  /**
   *  ===========================
   *  LEEROBJECT VALIDATIE
   *  ===========================
   */
  static async validateLocalLearningObject(localId: string): Promise<void> {
    const lo = await prisma.learningObject.findUnique({
      where: { id: localId },
    });
    if (!lo) {
      throw new Error(`Lokaal leerobject '${localId}' niet gevonden.`);
    }
  }

  static async validateDwengoLearningObject(
    hruid: string,
    language: string,
    version: number
  ): Promise<void> {
    // Dwengo: GET /api/learningObject/getMetadata?hruid=xxx&language=xxx&version=xxx
    try {
      const resp = await dwengoAPI.get(
        `/api/learningObject/getMetadata?hruid=${hruid}&language=${language}&version=${version}`
      );
      if (!resp.data) {
        throw new Error(
          `Dwengo leerobject hruid=${hruid},language=${language},version=${version} => geen data ontvangen.`
        );
      }
    } catch (err: any) {
      if (err.response?.status === 404) {
        throw new Error(
          `Dwengo leerobject hruid=${hruid},language=${language},version=${version} niet gevonden (404).`
        );
      }
      throw new Error(`Fout bij Dwengo-check: ${err.message}`);
    }
  }

  /**
   * Als je maar Ã©Ã©n functie wilt om "either local or external object" te checken,
   * kun je deze wrapper schrijven:
   */
  static async validateLearningObject(
    isExternal: boolean,
    localId?: string,
    hruid?: string,
    language?: string,
    version?: number
  ): Promise<void> {
    if (isExternal) {
      if (!hruid || !language || version == null) {
        throw new Error("Missing Dwengo leerobject referenties (hruid/language/version)");
      }
      await this.validateDwengoLearningObject(hruid, language, version);
    } else {
      if (!localId) {
        throw new Error("Missing localId voor niet-externe leerobjectvalidatie");
      }
      await this.validateLocalLearningObject(localId);
    }
  }

  /**
   *  ===========================
   *  LEERPAD VALIDATIE
   *  ===========================
   */
  static async validateLocalLearningPath(localId: string): Promise<void> {
    const lp = await prisma.learningPath.findUnique({
      where: { id: localId },
    });
    if (!lp) {
      throw new Error(`Lokaal leerpad '${localId}' niet gevonden.`);
    }
  }

  static async validateDwengoLearningPath(hruid: string, language: string): Promise<void> {
    // Dwengo: /api/learningPath/search?hruid=...&language=...
    // (versie voor paden is meestal niet gedefinieerd in Dwengo)
    try {
      const resp = await dwengoAPI.get(
        `/api/learningPath/search?hruid=${hruid}&language=${language}`
      );
      if (!resp.data || !Array.isArray(resp.data) || resp.data.length === 0) {
        throw new Error(
          `Dwengo leerpad (hruid=${hruid}, language=${language}) niet gevonden (lege array).`
        );
      }
      // Eventueel checken of we exact 1 match hebben
    } catch (err: any) {
      throw new Error(`Fout bij Dwengo-check leerpad: ${err.message}`);
    }
  }

  /**
   * Wrapper als je "externe vs lokaal" in Ã©Ã©n functie wilt:
   */
  static async validateLearningPath(
    isExternal: boolean,
    localId?: string,
    hruid?: string,
    language?: string
  ): Promise<void> {
    if (isExternal) {
      if (!hruid || !language) {
        throw new Error("Missing Dwengo leerpad referenties (hruid/language)");
      }
      await this.validateDwengoLearningPath(hruid, language);
    } else {
      if (!localId) {
        throw new Error("Missing localId voor niet-externe leerpadvalidatie");
      }
      await this.validateLocalLearningPath(localId);
    }
  }
}


===== Bestand: ../dwengo_backend/index.ts =====
import express, { Request, Response, NextFunction, Express } from "express";
import dotenv from "dotenv";
import errorHandler from "./middleware/errorMiddleware";
import teacherAuthRoutes from "./routes/teacher/teacherAuthRoutes";
import studentAuthRoutes from "./routes/student/studentAuthRoutes";
import learningObjectRoutes from "./routes/learningObject/learningObjectRoutes";
import QuestionRoutes from "./routes/question/questionRoutes";
import learningPathRoutes from "./routes/learningPath/learningPathRoutes";
import teacherLocalLearningObjectRoutes from "./routes/teacher/teacherLocalLearningObjectRoutes";

import assignmentRoutes from "./routes/assignmentRoutes";
import teacherAssignmentRoutes from "./routes/teacher/teacherAssignmentRoutes";
import studentTeamRoutes from "./routes/student/studentTeamRoutes";
import progressRoutes from "./routes/progressRoutes";
import teacherClassRoutes from "./routes/teacher/teacherClassRoutes";
import studentAssignmentRoutes from "./routes/student/studentAssignmentRoutes";
import feedbackRoutes from "./routes/teacher/feedbackRoutes";
import studentClassRoutes from "./routes/student/studentClassRoutes";
import teacherSubmissionRoute from "./routes/teacher/teacherSubmissionRoute";
import studentSubmissionRoute from "./routes/student/studentSubmissionRoute";
import teacherLocalLearningPathRoutes from "./routes/teacher/teacherLocalLearningPathRoutes";
import teacherLocalLearningPathNodesRoutes from "./routes/teacher/teacherLocalLearningPathNodesRoutes";

import swaggerUi from "swagger-ui-express";
import YAML from "yamljs";
import teacherTeamsRoutes from "./routes/teacher/teacherTeamsRoutes";

dotenv.config();

const app: Express = express();
const swaggerDocument: any = YAML.load("./openapi3_0.yaml");

// Stel CORS-headers in
app.use((req: Request, res: Response, next: NextFunction): void => {
  const allowedOrigins: string[] = [
    "https://dwengo.org",
    "http://localhost:5173",
    "http://localhost:5000",
  ];
  const origin: string | undefined = req.headers.origin;
  if (origin && allowedOrigins.includes(origin)) {
    res.setHeader("Access-Control-Allow-Origin", origin);
  }
  res.setHeader(
    "Access-Control-Allow-Methods",
    "GET, POST, PUT, DELETE, OPTIONS, PATCH"
  );
  res.setHeader(
    "Access-Control-Allow-Headers",
    "X-Requested-With, Content-Type, Authorization"
  );
  next();
});
app.options("*", (req, res) => {
  res.sendStatus(200);
});

app.options("*", (req, res) => {
  res.sendStatus(200);
});

// JSON-parser middleware
app.use(express.json());

// Routes voor Teacher (Classes)
app.use("/teacher/classes", teacherClassRoutes);

// Routes voor student (Classes)
app.use("/student/classes", studentClassRoutes);

// Routes voor Teacher (Auth)
app.use("/teacher/auth", teacherAuthRoutes);
app.use("/teacher/learningObjects", teacherLocalLearningObjectRoutes);
app.use("/teacher/learningPaths", teacherLocalLearningPathRoutes);
app.use("/teacher/learningPaths", teacherLocalLearningPathNodesRoutes);

// Routes voor Teacher (Teams)
app.use("/teacher/assignments/:assignmentId/team", teacherTeamsRoutes);

// Routes voor Student (Auth)
app.use("/student/auth", studentAuthRoutes);

// Routes voor de Assignments
app.use("/assignments", assignmentRoutes);

// Routes voor de aanpassingen op Assignments door teachers
app.use("/teacher/assignments", teacherAssignmentRoutes);
// Routes voor het opvragen van de Assignments door students
app.use("/student/assignments", studentAssignmentRoutes);

// Routes om feedback te geven
app.use("/teacher/feedback", feedbackRoutes);

// Nieuwe routes voor leerobjecten
app.use("/learningObjects", learningObjectRoutes);

app.use("/question", QuestionRoutes);

app.use("/learningPaths", learningPathRoutes);

app.use("/student/teams", studentTeamRoutes);

app.use("/progress", progressRoutes);
app.use("/api-docs", swaggerUi.serve, swaggerUi.setup(swaggerDocument));

// Routes voor indieningen
app.use("/teacher/submissions", teacherSubmissionRoute);
app.use("/student/submissions", studentSubmissionRoute);

// Error Handler
app.use(errorHandler);

if (process.env.NODE_ENV !== "test") {
  console.log(process.env.NODE_ENV);
  const PORT: string | number = process.env.PORT || 5000;
  app.listen(PORT, (): void => console.log(`Server draait op poort ${PORT}`));
}

export default app;


===== Bestand: ../dwengo_backend/controllers/joinrequest/joinRequestController.ts =====
import { Request, Response } from "express";
import joinRequestService from "../../services/joinRequestService";
import { JoinRequest } from "@prisma/client";
import { AuthenticatedRequest } from "../../interfaces/extendedTypeInterfaces";
import { AppError } from "../../errors/errors";
import { getUserFromAuthRequest } from "../../helpers/getUserFromAuthRequest";

// Higher-order function to handle errors and reduce duplication
const handleRequest =
  (handler: (_req: Request, _res: Response) => Promise<void>) =>
  async (req: Request, res: Response): Promise<void> => {
    try {
      await handler(req, res);
    } catch (error) {
      const message: string =
        error instanceof Error ? error.message : "An unknown error occurred";
      res
        .status(error instanceof AppError ? error.statusCode : 400)
        .json({ error: message });
    }
  };

/**
 * Creates a join request for a student to join a class (class code in request body)
 * @route POST /student/classes/join
 * returns the created join request in the response body
 */
export const createJoinRequest = handleRequest(
  async (req: AuthenticatedRequest, res: Response): Promise<void> => {
    const joinCode = req.body.joinCode || (req.query.joinCode as string);
    const studentId: number = getUserFromAuthRequest(req).id;
    const joinRequest: JoinRequest | undefined =
      await joinRequestService.createValidJoinRequest(studentId, joinCode);
    res.status(201).json({ joinRequest });
  },
);

/**
 * Updates the status of a join request (approve or deny)
 * @route PATCH /teacher/classes/:classId/join-requests/:requestId
 * @param classId - id of the class for which the join request was sent
 * @param requestId - id of the join request to be updated
 * returns the updated join request in the response body
 */
export const updateJoinRequestStatus = handleRequest(
  async (req: AuthenticatedRequest, res: Response): Promise<void> => {
    const classId: number = parseInt(req.params.classId);
    const requestId: number = parseInt(req.params.requestId);
    const { action }: { action: string } = req.body; // 'approve' or 'deny' from the request body
    const teacherId: number = getUserFromAuthRequest(req).id;

    if (!action || (action !== "approve" && action !== "deny")) {
      res.status(400).json({ error: "Action must be 'approve' or 'deny'" });
    }

    if (action === "approve") {
      const joinRequest: JoinRequest =
        await joinRequestService.approveRequestAndAddStudentToClass(
          requestId,
          teacherId,
          classId,
        );
      res.status(200).json({ joinRequest, message: "Join request approved." });
    } else if (action === "deny") {
      const joinRequest: JoinRequest = await joinRequestService.denyJoinRequest(
        requestId,
        teacherId,
        classId,
      );
      res.status(200).json({ joinRequest, message: "Join request denied." });
    }
  },
);

/**
 * @route GET /teacher/classes/:classId/join-requests
 * @param classId - id of the class for which the join requests are fetched
 * returns a list of all join requests for the class in the response body
 */
export const getJoinRequestsByClass = handleRequest(
  async (req: AuthenticatedRequest, res: Response): Promise<void> => {
    const classId: number = parseInt(req.params.classId);
    const teacherId: number = getUserFromAuthRequest(req).id;
    const joinRequests: JoinRequest[] =
      await joinRequestService.getJoinRequestsByClass(teacherId, classId);
    res.status(200).json({ joinRequests });
  },
);


===== Bestand: ../dwengo_backend/controllers/teacher/teacherAssignmentController.ts =====
import { Response } from "express";
import { AuthenticatedRequest } from "../../interfaces/extendedTypeInterfaces";
import teacherAssignmentService from "../../services/teacherServices/teacherAssignmentService";
import { getUserFromAuthRequest } from "../../helpers/getUserFromAuthRequest";

export class AssignmentTeacherController {
  createAssignmentForClass = async (
    req: AuthenticatedRequest,
    res: Response
  ): Promise<void> => {
    try {
      const teacherId: number = getUserFromAuthRequest(req).id;
      const {
        classId,
        pathRef,
        pathLanguage,
        isExternal,
        deadline,
        title,
        description,
      }: {
        classId: number;
        pathRef: string;
        pathLanguage: string;
        isExternal: boolean;
        deadline: string;
        title: string;
        description: string;
      } = req.body;

      const parsedDeadline = new Date(deadline);

      const assignment =
        await teacherAssignmentService.createAssignmentForClass(
          teacherId,
          classId,
          pathRef,
          pathLanguage,
          isExternal,
          parsedDeadline,
          title,
          description
        );
      res.status(201).json(assignment);
    } catch (error) {
      res.status(500).json({ error: "Failed to create assignment" });
    }
  };

  getAssignmentsByClass = async (
    req: AuthenticatedRequest,
    res: Response
  ): Promise<void> => {
    try {
      const classId: number = parseInt(req.params.classId);
      const teacherId: number = getUserFromAuthRequest(req).id;
      const assignments = await teacherAssignmentService.getAssignmentsByClass(
        classId,
        teacherId
      );
      res.status(200).json(assignments);
    } catch (error) {
      res.status(500).json({ error: "Failed to retrieve assignments" });
    }
  };

  updateAssignment = async (
    req: AuthenticatedRequest,
    res: Response
  ): Promise<void> => {
    try {
      const assignmentId: number = parseInt(req.params.assignmentId);
      const { pathRef, isExternal, title, description } = req.body;
      const teacherId: number = getUserFromAuthRequest(req).id;

      const updatedAssignment = await teacherAssignmentService.updateAssignment(
        assignmentId,
        pathRef,
        isExternal,
        teacherId,
        title,
        description
      );
      res.json(updatedAssignment);
    } catch (error) {
      res.status(500).json({ error: "Failed to update assignment" });
    }
  };

  deleteAssignment = async (
    req: AuthenticatedRequest,
    res: Response
  ): Promise<void> => {
    try {
      const assignmentId: number = parseInt(req.params.assignmentId);
      const teacherId: number = getUserFromAuthRequest(req).id;
      await teacherAssignmentService.deleteAssignment(assignmentId, teacherId);
      res.status(204).send();
    } catch (error) {
      res.status(500).json({ error: "Failed to delete assignment" });
    }
  };
}


===== Bestand: ../dwengo_backend/controllers/teacher/teacherTeamsController.ts =====
import { Response } from "express";
import {
    createTeamsInAssignment,
    getTeamsThatHaveAssignment,
    updateTeamsForAssignment,
    deleteTeam
} from "../../services/teacherTeamsService";
import {Team} from "@prisma/client";
import {AuthenticatedRequest} from "../../interfaces/extendedTypeInterfaces";

export const createTeamInAssignment = async (req: AuthenticatedRequest, res: Response): Promise<void> => {
    try {
        // This is guaranteed to be possible by "makeAssignmentIdParamValid" in middleware/teamValidationMiddleware.ts
        const assignmentId: number = Number(req.params.assignmentId);
        const classId: number = Number(req.params.classId);
        const { teams } = req.body;

        const createdTeams: Team[] = await createTeamsInAssignment(assignmentId, classId, teams);
        res.status(201).json({ createdTeams });
    } catch (error) {
        res.status(500).json({ error: "Error creating teams in assignment." });
    }
};

export const getTeamsInAssignment = async (req: AuthenticatedRequest, res: Response): Promise<void> => {
    try {
        const assignmentId: number = Number(req.params.assignmentId);
        const teams: Team[] = await getTeamsThatHaveAssignment(assignmentId);
        res.status(200).json(teams);
    } catch (error) {
        res.status(500).json({ error: "Error fetching teams for assignment." });
    }
};

export const updateTeamsInAssignment = async (req: AuthenticatedRequest, res: Response): Promise<void> => {
    try {
        const assignmentId: number = Number(req.params.assignmentId);
        const { teams } = req.body;

        const updatedTeams: Team[] = await updateTeamsForAssignment(assignmentId, teams);
        res.status(200).json(updatedTeams);
    } catch (error) {
        res.status(500).json({ error: "Error updating teams for assignment." });
    }
};

export const deleteTeamInAssignment = async (req: AuthenticatedRequest, res: Response): Promise<void> => {
    try {
        // This is guaranteed to be possible by "makeTeamIdParamValid" in middleware/teamValidationMiddleware.ts
        const teamId: number = Number(req.params.teamId);

        await deleteTeam(teamId);
        res.status(200).json({ message: "Team successfully deleted." });
    } catch (error) {
        res.status(500).json({ error: "Error deleting team from assignment." });
    }
};


===== Bestand: ../dwengo_backend/controllers/teacher/teacherClassController.ts =====
import asyncHandler from "express-async-handler";
import { Response } from "express";
import { AuthenticatedRequest } from "../../middleware/teacherAuthMiddleware";
import classService from "../../services/classService";
import { Student } from "@prisma/client";
import { getUserFromAuthRequest } from "../../helpers/getUserFromAuthRequest";
import { BadRequestError } from "../../errors/errors";

const APP_URL = process.env.APP_URL || "http://localhost:5000";

export const isTeacherValid = (
  req: AuthenticatedRequest,
  res: Response
): boolean => {
  const teacherId = req.user?.id;
  if (!teacherId) {
    res.status(400).json({ message: "Geen toegang" });
    return false; // Teacher is not authorized
  }
  return true; // Teacher is authorized
};

export const isNameValid = (
  req: AuthenticatedRequest,
  res: Response
): boolean => {
  const { name } = req.body;
  if (!name || typeof name !== "string" || name.trim() === "") {
    res.status(400).json({ message: "Vul een geldige klasnaam in" });
    return false;
  }
  return true;
};

/**
 * Get all classes that a teacher manages
 * @route GET /teacher/classes
 * returns a list of all classes in the response body
 */
export const getTeacherClasses = asyncHandler(
  async (req: AuthenticatedRequest, res: Response): Promise<void> => {
    const teacherId: number = getUserFromAuthRequest(req).id;
    const classes = await classService.getClassesByTeacher(teacherId);
    res.status(200).json({ classes });
  }
);

/**
 * Create classroom
 * @route POST /teacher/classes
 * returns the created class in the response body
 */
export const createClassroom = asyncHandler(
  async (req: AuthenticatedRequest, res: Response): Promise<void> => {
    const { name } = req.body;
    const teacherId: number = getUserFromAuthRequest(req).id;

    isNameValid(req, res); // if invalid, an error is thrown

    const classroom = await classService.createClass(name, teacherId);
    res.status(201).json({ message: "Klas aangemaakt", classroom });
  }
);

// Delete classroom
export const deleteClassroom = asyncHandler(
  async (req: AuthenticatedRequest, res: Response): Promise<void> => {
    const { classId } = req.params;
    const teacherId = req.user?.id;

    if (!isTeacherValid(req, res)) return;

    await classService.deleteClass(Number(classId), Number(teacherId));
    res.json({ message: "Klas verwijderd" });
  }
);

// Get join link
export const getJoinLink = asyncHandler(
  async (req: AuthenticatedRequest, res: Response): Promise<void> => {
    const { classId } = req.params;
    const teacherId = req.user?.id as number;

    if (!isTeacherValid(req, res)) return;

    const joinCode = await classService.getJoinCode(Number(classId), teacherId);

    const joinLink = `${APP_URL}/student/classes/join?joinCode=${joinCode}`;
    res.status(200).json({ joinLink });
  }
);

// Regenerate join link
export const regenerateJoinLink = asyncHandler(
  async (req: AuthenticatedRequest, res: Response): Promise<void> => {
    const { classId } = req.params;
    const teacherId = req.user?.id as number;

    if (!isTeacherValid(req, res)) return;

    try {
      const newJoinCode = await classService.regenerateJoinCode(
        Number(classId),
        teacherId
      );
      const joinLink = `${APP_URL}/student/classes/join?joinCode=${newJoinCode}`;
      res.json({ joinLink });
    } catch (error) {
      res.status(403).json({ message: "Failed to regenerate joinLink" });
      return;
    }
  }
);

// Get classroom students
export const getClassroomStudents = asyncHandler(
  async (req: AuthenticatedRequest, res: Response): Promise<void> => {
    const { classId } = req.params;
    const teacherId = req.user?.id as number;

    if (!isTeacherValid(req, res)) return;

    const students: Student[] = await classService.getStudentsByClass(
      Number(classId),
      teacherId
    );

    if (!students) {
      res.status(403).json({ message: "Toegang geweigerd" });
      return;
    }

    res.json({ students });
  }
);

/**
 * Get all classrooms
 * @route GET /teacher/classes
 * returns a list of all classes for the authenticated teacher in the response body
 */
export const getAllClassrooms = asyncHandler(
  async (req: AuthenticatedRequest, res: Response): Promise<void> => {
    const teacherId: number = getUserFromAuthRequest(req).id;
    const classrooms = await classService.getAllClassesByTeacher(teacherId);
    res.status(200).json({ classrooms });
  }
);

/**
 * Get classroom by ID
 * @route GET /teacher/classes/:classId
 * @param classId - id of the class to be fetched
 * returns the class details in the response body
 */
export const getClassByIdAndTeacherId = asyncHandler(
  async (req: AuthenticatedRequest, res: Response): Promise<void> => {
    const classId: number = parseInt(req.params.classId);
    const teacherId: number = getUserFromAuthRequest(req).id;

    const classroom = await classService.getClassByIdAndTeacherId(
      classId,
      teacherId
    );
    if (!classroom) {
      throw new BadRequestError(`Klas met id ${classId} niet gevonden`);
    }

    res.status(200).json({ classroom });
  }
);


===== Bestand: ../dwengo_backend/controllers/teacher/teacherSubmissionController.ts =====
import {Response} from "express";
import service from "../../services/submissionService";
import {AuthenticatedRequest} from "../../interfaces/extendedTypeInterfaces";
import {Submission} from "@prisma/client";
import {getUserFromAuthRequest} from "../../helpers/getUserFromAuthRequest";

export default class TeacherSubmissionController {
    static async getSubmissionsForStudent(req: AuthenticatedRequest, res: Response): Promise<void> {
        const studentId: number = Number(req.params.studentId);
        const teacherId: number = getUserFromAuthRequest(req).id;

        const submissions: Submission[] = await service.teacherGetSubmissionsForStudent(studentId, teacherId);

        res.status(200).json(submissions);
    }

    static async getSubmissionsForTeam(req: AuthenticatedRequest, res: Response): Promise<void> {
        const teamId: number = Number(req.params.teamId);
        const teacherId: number = getUserFromAuthRequest(req).id;

        const submissions: Submission[] = await service.teacherGetSubmissionsForTeam(teamId, teacherId);

        res.status(200).json(submissions);
    }

    static async getAssignmentSubmissionsForStudent(req: AuthenticatedRequest, res: Response): Promise<void> {
        const {studentId, assignmentId} = req.params;
        const teacherId: number = getUserFromAuthRequest(req).id;

        const submissions: Submission[] = await service.teacherGetSubmissionsForStudent(Number(studentId), teacherId, Number(assignmentId));

        res.status(200).json(submissions);
    }

    static async getAssignmentSubmissionsForTeam(req: AuthenticatedRequest, res: Response): Promise<void> {
        const {teamId, assignmentId} = req.params;
        const teacherId: number = getUserFromAuthRequest(req).id;

        const submissions: Submission[] = await service.teacherGetSubmissionsForTeam(Number(teamId), teacherId, Number(assignmentId));

        res.status(200).json(submissions);
    }
}

===== Bestand: ../dwengo_backend/controllers/teacher/teacherLocalLearningObjectController.ts =====
import { Response } from "express";
import asyncHandler from "express-async-handler";
import LocalLearningObjectService, {
  LocalLearningObjectData,
} from "../../services/localLearningObjectService";
import { AuthenticatedRequest } from "../../interfaces/extendedTypeInterfaces";

/**
 * Maak een nieuw leerobject.
 * POST /teacher/learningObjects
 */
export const createLocalLearningObject = asyncHandler(
  async (req: AuthenticatedRequest, res: Response) => {
    const teacherId = req.user?.id;
    if (!teacherId) {
      res.status(401);
      throw new Error("Geen geldige teacher-gebruiker.");
    }

    const data: LocalLearningObjectData = req.body;
    // Eventuele extra validatie (bv. velden checken) kan hier

    const createdLO = await LocalLearningObjectService.createLearningObject(
      teacherId,
      data,
    );
    res.status(201).json({
      message: "Leerobject aangemaakt",
      learningObject: createdLO,
    });
  },
);

/**
 * Haal alle leerobjecten op van deze teacher.
 * GET /teacher/learningObjects
 */
export const getLocalLearningObjects = asyncHandler(
  async (req: AuthenticatedRequest, res: Response) => {
    const teacherId = req.user?.id;
    if (!teacherId) {
      res.status(401);
      throw new Error("Geen geldige teacher-gebruiker.");
    }

    const objects =
      await LocalLearningObjectService.getAllLearningObjectsByTeacher(
        teacherId,
      );
    res.json(objects);
  },
);

/**
 * Haal Ã©Ã©n leerobject op.
 * GET /teacher/learningObjects/:id
 */
export const getLocalLearningObjectById = asyncHandler(
  async (req: AuthenticatedRequest, res: Response) => {
    const teacherId = req.user?.id;
    if (!teacherId) {
      res.status(401);
      throw new Error("Geen geldige teacher-gebruiker.");
    }

    const { id } = req.params;
    const found = await LocalLearningObjectService.getLearningObjectById(id);

    if (!found) {
      res.status(404);
      throw new Error("Leerobject niet gevonden");
    }

    // Check of deze teacher de eigenaar is
    if (found.creatorId !== teacherId) {
      res.status(403);
      throw new Error("Je bent niet de eigenaar van dit leerobject");
    }

    res.json(found);
  },
);

/**
 * Update een leerobject.
 * PUT /teacher/learningObjects/:id
 */
export const updateLocalLearningObject = asyncHandler(
  async (req: AuthenticatedRequest, res: Response) => {
    const teacherId = req.user?.id;
    if (!teacherId) {
      res.status(401);
      throw new Error("Geen geldige teacher-gebruiker.");
    }

    const { id } = req.params;
    const data: Partial<LocalLearningObjectData> = req.body;

    // Check of leerobject bestaat en van deze teacher is
    const existing = await LocalLearningObjectService.getLearningObjectById(id);
    if (!existing) {
      res.status(404);
      throw new Error("Leerobject niet gevonden");
    }
    if (existing.creatorId !== teacherId) {
      res.status(403);
      throw new Error("Je bent niet de eigenaar van dit leerobject");
    }

    const updated = await LocalLearningObjectService.updateLearningObject(
      id,
      data,
    );
    res.json({
      message: "Leerobject bijgewerkt",
      learningObject: updated,
    });
  },
);

/**
 * Verwijder een leerobject.
 * DELETE /teacher/learningObjects/:id
 */
export const deleteLocalLearningObject = asyncHandler(
  async (req: AuthenticatedRequest, res: Response) => {
    const teacherId = req.user?.id;
    if (!teacherId) {
      res.status(401);
      throw new Error("Geen geldige teacher-gebruiker.");
    }

    const { id } = req.params;
    const existing = await LocalLearningObjectService.getLearningObjectById(id);
    if (!existing) {
      res.status(404);
      throw new Error("Leerobject niet gevonden");
    }
    if (existing.creatorId !== teacherId) {
      res.status(403);
      throw new Error("Je bent niet de eigenaar van dit leerobject");
    }

    await LocalLearningObjectService.deleteLearningObject(id);
    res.json({ message: "Leerobject verwijderd" });
  },
);


===== Bestand: ../dwengo_backend/controllers/teacher/teacherAuthController.ts =====
import { Teacher, User } from "@prisma/client";
import asyncHandler from "express-async-handler";
import bcrypt from "bcryptjs";
import { Request, Response } from "express";
import UserService from "../../services/userService";
import TeacherService from "../../services/teacherService";
import { generateToken } from "../../helpers/generateToken";

interface LoginTeacherBody {
  email: string;
  password: string;
}

// @desc    Inloggen van een leerkracht
// @route   POST /teacher/auth/login
// @access  Public

export const loginTeacher = asyncHandler(
  async (req: Request, res: Response): Promise<void> => {
    const { email, password } = req.body as LoginTeacherBody;

    // Basisvalidatie voor e-mail
    if (!/\S+@\S+\.\S+/.test(email)) {
      res.status(400);
      throw new Error("Voer een geldig e-mailadres in");
    }

    // Zoek eerst de gebruiker
    const user: User = await UserService.findUserByEmail(email);
    if (!user || user.role !== "TEACHER") {
      res.status(401);
      throw new Error("Ongeldige gebruiker");
    }

    // Haal het gekoppelde Teacher-record op
    // Hier geen type aan proberen geven, zorgt enkel voor problemen
    const teacher: Teacher & { user: User } =
      await TeacherService.findTeacherById(user.id);

    if (!teacher.user) {
      res.status(401);
      throw new Error("Ongeldige gebruiker");
    }

    // Vergelijk het opgegeven wachtwoord met de opgeslagen hash
    const passwordMatches: boolean = await bcrypt.compare(
      password,
      teacher.user.password
    );
    if (!passwordMatches) {
      res.status(401);
      throw new Error("Ongeldig wachtwoord");
    }

    res.json({
      message: "Succesvol ingelogd",
      firstName: user.firstName,
      lastName: user.lastName,
      token: generateToken(teacher.userId),
    });
  }
);


===== Bestand: ../dwengo_backend/controllers/teacher/inviteController.ts =====
import { Response } from "express";
import asyncHandler from 'express-async-handler';
import { Invite } from "@prisma/client";
import inviteService from "../../services/inviteService";
import { AuthenticatedRequest } from "../../interfaces/extendedTypeInterfaces";
import { getUserFromAuthRequest } from "../../helpers/getUserFromAuthRequest";

/**
 * Create an invite for a teacher to join a class
 * @route POST /teacher/classes/:classId/invites
 * @param classId - id of the class to which the teacher is getting invited
 * returns the created invite in the response body
 */
export const createInvite = asyncHandler(async (req: AuthenticatedRequest, res: Response): Promise<void> => {
    const classId: number = parseInt(req.params.classId);
    const { otherTeacherEmail }: { otherTeacherEmail: string } = req.body;
    const classTeacherId: number = getUserFromAuthRequest(req).id;
  
    const invite: Invite = await inviteService.createInvite(classTeacherId, otherTeacherEmail, classId);
    res.status(201).json({ invite });
  });



/**
 * Get all pending invites for a class
 * @route GET /teacher/classes/:classId/invites
 * @param classId - id of the class for which the invites are fetched
 * returns a list of all invites for the class in the response body
 */
export const getPendingInvitesForClass = asyncHandler(async (req: AuthenticatedRequest, res: Response): Promise<void> => {
    const classId: number = parseInt(req.params.classId);
    const classTeacherId: number = getUserFromAuthRequest(req).id;

    const invites: Invite[] = await inviteService.getPendingInvitesForClass(classTeacherId, classId);
    res.status(200).json({ invites });
});


/**
 * Get all pending invites for a teacher
 * @route GET /teacher/classes/invites
 * returns a list of all invites for the teacher in the response body
 */
export const getPendingInvitesForTeacher = asyncHandler(async (req: AuthenticatedRequest, res: Response): Promise<void> => {
    const teacherId: number = getUserFromAuthRequest(req).id;

    const invites: Invite[] = await inviteService.getPendingInvitesForTeacher(teacherId);
    res.status(200).json({ invites });
});


/**
 * Update the status of an invite
 * @route PATCH /teacher/classes/invites/:inviteId
 * @param inviteId - id of the invite to be updated
 * returns the updated invite in the response body
 */
export const updateInviteStatus = asyncHandler(async (req: AuthenticatedRequest, res: Response): Promise<void> => {
    const inviteId: number = parseInt(req.params.inviteId);
    const { action }: { action: string } = req.body;
    const teacherId: number = getUserFromAuthRequest(req).id;

    if (action == "accept") {
        const invite: Invite = await inviteService.acceptInviteAndJoinClass(teacherId, inviteId);
        res.status(200).json({ invite });
    } else { // action == "decline" (ensured by validation middleware)
        const invite: Invite = await inviteService.declineInvite(teacherId, inviteId);
        res.status(200).json({ invite });
    } 
});


/**
 * Delete an invite
 * @route DELETE /teacher/classes/:classId/invites/:inviteId
 * @param classId - id of the class for which the invite is deleted 
 * @param inviteId - id of the invite to be deleted
 * returns the deleted invite in the response body
 * 
 * Any teacher of the class can delete the invite (not just the teacher who created the invite).
 */
export const deleteInvite = asyncHandler(async (req: AuthenticatedRequest, res: Response): Promise<void> => {
    const inviteId: number = parseInt(req.params.inviteId);
    const classId: number = parseInt(req.params.classId);
    const classTeacherId: number = getUserFromAuthRequest(req).id;

    const invite: Invite = await inviteService.deleteInvite(classTeacherId, inviteId, classId);
    res.status(200).json({ invite: invite, message: "invite was succesfully deleted" });
});


===== Bestand: ../dwengo_backend/controllers/teacher/feedbackController.ts =====
import { Response } from "express";
import service from "../../services/feedbackService";
import { Feedback } from "@prisma/client";
import { AuthenticatedRequest } from "../../interfaces/extendedTypeInterfaces";
import { getUserFromAuthRequest } from "../../helpers/getUserFromAuthRequest";

export default class FeedbackController {
  // route: "/teacher/feedback/assignment/:assignmentId/evaluation/:evaluationId"
  // http-command: GET
  static async getAllFeedbackForEvaluation(
    req: AuthenticatedRequest,
    res: Response,
  ): Promise<void> {
    try {
      const { assignmentId, evaluationId } = req.params;
      const teacherId: number = getUserFromAuthRequest(req).id;

      const feedback: Feedback[] = await service.getAllFeedbackForEvaluation(
        Number(assignmentId),
        evaluationId,
        teacherId,
      );
      res.status(200).json(feedback);
    } catch (_error) {
      res.status(500).json({ error: "Failed to retrieve feedback" });
    }
  }

  // route: "/teacher/feedback/submission/:submissionId"
  // http-command: POST
  static async createFeedback(
    req: AuthenticatedRequest,
    res: Response,
  ): Promise<void> {
    try {
      const teacherId: number = getUserFromAuthRequest(req).id;
      const submissionId: number = Number(req.params.submissionId);

      const description: string = req.body.description;

      const feedback: Feedback = await service.createFeedback(
        submissionId,
        teacherId,
        description,
      );
      res.status(201).json(feedback);
    } catch (_error) {
      res.status(500).json({ error: "Failed to create feedback" });
    }
  }

  // route: "/teacher/feedback/submission/:submissionId"
  // http-command: GET
  static async getFeedbackForSubmission(
    req: AuthenticatedRequest,
    res: Response,
  ): Promise<void> {
    try {
      const submissionId: number = Number(req.params.submissionId);
      const teacherId: number = getUserFromAuthRequest(req).id;

      const feedback: Feedback | null = await service.getFeedbackForSubmission(
        submissionId,
        teacherId,
      );
      if (feedback) {
        res.status(200).json(feedback);
      } else {
        res.status(404).json({ error: "Feedback not found" });
      }
    } catch (_error) {
      res.status(500).json({ error: "Failed to retrieve feedback" });
    }
  }

  // route: /teacher/feedback/submission/:submissionId
  // http-command: PATCH
  static async updateFeedbackForSubmission(
    req: AuthenticatedRequest,
    res: Response,
  ): Promise<void> {
    try {
      const submissionId: number = Number(req.params.submissionId);
      const teacherId: number = getUserFromAuthRequest(req).id;

      const { description }: { description: string } = req.body;
      const feedback: Feedback = await service.updateFeedbackForSubmission(
        submissionId,
        description,
        teacherId,
      );
      res.json(feedback);
    } catch (_error) {
      res.status(500).json({ error: "Failed to update feedback" });
    }
  }

  // route: /teacher/feedback/submission/:submissionId
  // http-command: DELETE
  static async deleteFeedbackForSubmission(
    req: AuthenticatedRequest,
    res: Response,
  ): Promise<void> {
    try {
      const submissionId: number = Number(req.params.submissionId);
      const teacherId: number = getUserFromAuthRequest(req).id;

      await service.deleteFeedbackForSubmission(submissionId, teacherId);
      // Status 204: successful deletion but no json body returned (no content).
      res.status(204).end();
    } catch (_error) {
      res.status(500).json({ error: "Failed to delete feedback" });
    }
  }
}


===== Bestand: ../dwengo_backend/controllers/teacher/teacherLocalLearningPathController.ts =====
import { Response } from "express";
import asyncHandler from "express-async-handler";
import { AuthenticatedRequest } from "../../interfaces/extendedTypeInterfaces";
import LocalLearningPathService from "../../services/localLearningPathService";

// Een interface om je body te structureren.
// Je kunt er bijvoorbeeld nog meer velden in opnemen, afhankelijk van je noden.
interface PathMetadata {
  title: string;
  language: string;
  description?: string;
  image?: string | null;
}

/**
 * POST /teacher/learningPaths
 *   -> nieuw leerpad (zonder nodes)
 */
export const createLocalLearningPath = asyncHandler(
  async (req: AuthenticatedRequest, res: Response) => {
    // Door protectTeacher in de routes weten we: role=TEACHER
    const teacherId = req.user!.id; // null-check niet nodig

    const { title, language, description, image } = req.body as PathMetadata;
    if (!title || !language) {
      res.status(400);
      throw new Error(
        "Vereiste velden: title, language (optioneel: description, image).",
      );
    }

    const newPath = await LocalLearningPathService.createLearningPath(
      teacherId,
      {
        title,
        language,
        description: description || "",
        image: image || null,
      },
    );

    res.status(201).json({
      message: "Leerpad aangemaakt",
      learningPath: newPath,
    });
  },
);

/**
 * GET /teacher/learningPaths
 *   -> haal alle leerpaden op van de ingelogde teacher
 */
export const getLocalLearningPaths = asyncHandler(
  async (req: AuthenticatedRequest, res: Response) => {
    const teacherId = req.user!.id;

    const paths =
      await LocalLearningPathService.getAllLearningPathsByTeacher(teacherId);
    res.json(paths);
  },
);

/**
 * GET /teacher/learningPaths/:pathId
 *   -> haal Ã©Ã©n leerpad op
 */
export const getLocalLearningPathById = asyncHandler(
  async (req: AuthenticatedRequest, res: Response) => {
    const teacherId = req.user!.id;

    const { pathId } = req.params;
    const path = await LocalLearningPathService.getLearningPathById(pathId);
    if (!path) {
      res.status(404);
      throw new Error("Leerpad niet gevonden");
    }
    // Domein-check: Is dit path van deze teacher?
    if (path.creatorId !== teacherId) {
      res.status(403);
      throw new Error("Je bent niet de eigenaar van dit leerpad.");
    }

    res.json(path);
  },
);

/**
 * PATCH /teacher/learningPaths/:pathId
 *   -> Update (gedeeltelijk) een leerpad
 */
export const updateLocalLearningPath = asyncHandler(
  async (req: AuthenticatedRequest, res: Response) => {
    const teacherId = req.user!.id;

    const { pathId } = req.params;
    const existingPath =
      await LocalLearningPathService.getLearningPathById(pathId);
    if (!existingPath) {
      res.status(404);
      throw new Error("Leerpad niet gevonden");
    }
    if (existingPath.creatorId !== teacherId) {
      res.status(403);
      throw new Error("Je bent niet de eigenaar van dit leerpad.");
    }

    // Hier kun je gedeeltelijk updaten
    const { title, language, description, image } =
      req.body as Partial<PathMetadata>;

    const updatedPath = await LocalLearningPathService.updateLearningPath(
      pathId,
      {
        title: title !== undefined ? title : existingPath.title,
        language: language !== undefined ? language : existingPath.language,
        description:
          description !== undefined ? description : existingPath.description,
        image: image !== undefined ? image : existingPath.image || null,
      },
    );

    res.json({
      message: "Leerpad bijgewerkt",
      learningPath: updatedPath,
    });
  },
);

/**
 * DELETE /teacher/learningPaths/:pathId
 */
export const deleteLocalLearningPath = asyncHandler(
  async (req: AuthenticatedRequest, res: Response) => {
    const teacherId = req.user!.id;

    const { pathId } = req.params;
    const existingPath =
      await LocalLearningPathService.getLearningPathById(pathId);
    if (!existingPath) {
      res.status(404);
      throw new Error("Leerpad niet gevonden");
    }
    if (existingPath.creatorId !== teacherId) {
      res.status(403);
      throw new Error("Je bent niet de eigenaar van dit leerpad.");
    }

    await LocalLearningPathService.deleteLearningPath(pathId);
    res.json({ message: "Leerpad verwijderd" });
  },
);


===== Bestand: ../dwengo_backend/controllers/teacher/teacherLocalLearningPathNodesController.ts =====
import { Response } from "express";
import asyncHandler from "express-async-handler";
import { AuthenticatedRequest } from "../../interfaces/extendedTypeInterfaces";
import localLearningPathNodeService from "../../services/localLearningPathNodeService";

// Interface voor node-updates
export interface NodeMetadata {
  isExternal: boolean;  
  localLearningObjectId?: string;
  dwengoHruid?: string;
  dwengoLanguage?: string;
  dwengoVersion?: number;
  start_node?: boolean;
}

/**
 * GET /teacher/learningPaths/:pathId/nodes
 */
export const getNodesForPath = asyncHandler(
  async (req: AuthenticatedRequest, res: Response) => {
    const teacherId = req.user!.id; // we weten: TEACHER
    const { pathId } = req.params;

    const nodes = await localLearningPathNodeService.getAllNodesForPath(
      teacherId,
      pathId
    );
    res.json(nodes);
  }
);

/**
 * POST /teacher/learningPaths/:pathId/nodes
 * Body: NodeMetadata (zie interface), minimal required fields
 */
export const createNodeForPath = asyncHandler(
  async (req: AuthenticatedRequest, res: Response) => {
    const teacherId = req.user!.id;
    const { pathId } = req.params;
    const body: NodeMetadata = req.body;

    const newNode = await localLearningPathNodeService.createNodeForPath(
      teacherId,
      pathId,
      {
        isExternal: !!body.isExternal,
        localLearningObjectId: body.localLearningObjectId,
        dwengoHruid: body.dwengoHruid,
        dwengoLanguage: body.dwengoLanguage,
        dwengoVersion: body.dwengoVersion,
        start_node: !!body.start_node,
      }
    );

    res.status(201).json({
      message: "Node aangemaakt",
      node: newNode,
    });
  }
);

/**
 * PATCH /teacher/learningPaths/:pathId/nodes/:nodeId
 * -> partial update of node
 */
export const updateNodeForPath = asyncHandler(
  async (req: AuthenticatedRequest, res: Response) => {
    const teacherId = req.user!.id;
    const { pathId, nodeId } = req.params;
    const body: NodeMetadata = req.body;

    const updatedNode = await localLearningPathNodeService.updateNodeForPath(
      teacherId,
      pathId,
      nodeId,
      {
        isExternal: body.isExternal,
        localLearningObjectId: body.localLearningObjectId,
        dwengoHruid: body.dwengoHruid,
        dwengoLanguage: body.dwengoLanguage,
        dwengoVersion: body.dwengoVersion,
        start_node: body.start_node,
      }
    );

    res.json({
      message: "Node bijgewerkt",
      node: updatedNode,
    });
  }
);

/**
 * DELETE /teacher/learningPaths/:pathId/nodes/:nodeId
 */
export const deleteNodeFromPath = asyncHandler(
  async (req: AuthenticatedRequest, res: Response) => {
    const teacherId = req.user!.id;
    const { pathId, nodeId } = req.params;

    await localLearningPathNodeService.deleteNodeFromPath(teacherId, pathId, nodeId);
    res.json({ message: "Node verwijderd uit leerpad" });
  }
);


===== Bestand: ../dwengo_backend/controllers/assignmentController.ts =====
import { Request, Response } from "express";
import assignmentService from "../services/assignmentService";
import { Assignment } from "@prisma/client";

export class AssignmentController {
  async getAssignmentsById(req: Request, res: Response): Promise<void> {
    try {
      // 1) Validatie param
      if (!req.params.assignmentId || isNaN(parseInt(req.params.assignmentId))) {
        res.status(400).json({ error: "Invalid assignment ID" });
        return;
      }

      const assignmentId: number = parseInt(req.params.assignmentId);

      // 2) Opvragen assignment
      const assignment: Assignment | null = await assignmentService.getAssignmentById(assignmentId);

      // 3) Bestaat het wel?
      if (!assignment) {
        res.status(404).json({ error: "Assignment not found" });
        return;
      }

      // 4) OK â 200 + assignment
      res.status(200).json(assignment);

    } catch (error) {
      res.status(500).json({ error: "Failed to retrieve assignment" });
    }
  }
}





===== Bestand: ../dwengo_backend/controllers/learningPath/learningPathController.ts =====
import { Request, Response } from "express";
import { searchLearningPaths, getLearningPathByIdOrHruid, LearningPathDto } from "../../services/learningPathService";

interface LearningPathFilters {
  language?: string;
  hruid?: string;
  title?: string;
  description?: string;
  all?: string;
}

/**
 * Zoekt leerpaden via Dwengo-API.
 * Mogelijke queryparams:
 *  ?language=nl
 *  ?hruid=...
 *  ?title=...
 *  ?description=...
 *  ?all=  (leeg om alles op te halen)
 */
export const searchLearningPathsController = async (req: Request, res: Response): Promise<void> => {
  try {
    const filters: LearningPathFilters = {
      language: req.query.language?.toString(),
      hruid: req.query.hruid?.toString(),
      title: req.query.title?.toString(),
      description: req.query.description?.toString(),
      all: req.query.all?.toString(),
    };

    const results: LearningPathDto[] = await searchLearningPaths(filters);
    res.json(results);
  } catch (error) {
    console.error(error);
    res.status(500).json({ error: "Fout bij zoeken naar leerpaden" });
  }
};

/**
 * Haalt 1 leerpad op (op basis van _id of hruid).
 * We gebruiken de service getLearningPathByIdOrHruid voor 'idOrHruid'
 */
export const getLearningPathByIdController = async (req: Request, res: Response): Promise<void> => {
  try {
    const { pathId } = req.params; // pathId is een string
    const path: LearningPathDto | null = await getLearningPathByIdOrHruid(pathId);

    if (!path) {
      res.status(404).json({ error: "Leerpad niet gevonden" });
      return;
    }

    res.json(path);
  } catch (error) {
    console.error(error);
    res.status(500).json({ error: "Fout bij ophalen leerpad" });
  }
};


===== Bestand: ../dwengo_backend/controllers/question/questionController.ts =====
import { Response } from "express";
import QuestionService from "../../services/questionsService";
import { AuthenticatedRequest } from "../../interfaces/extendedTypeInterfaces";
import { BadRequestError } from "../../errors/errors";
import { Role } from "@prisma/client";

const handleRequest = (
  handler: (req: AuthenticatedRequest, res: Response) => Promise<void>
) => async (req: AuthenticatedRequest, res: Response): Promise<void> => {
  try {
    await handler(req, res);
  } catch (err: any) {
    const msg = err.message || "Unknown error";
    const status = err.statusCode || 400;
    res.status(status).json({ error: msg });
  }
};

// CREATE SPECIFIC
export const createQuestionSpecific = handleRequest(async (req, res) => {
  const { assignmentId } = req.params;
  const {
    teamId,
    title,
    text,
    isExternal,
    localLearningObjectId,
    dwengoHruid,
    dwengoLanguage,
    dwengoVersion,
    isPrivate
  } = req.body;

  if (!assignmentId || !teamId || !title || !text) {
    throw new BadRequestError("Missing required fields (assignmentId, teamId, title, text).");
  }
  const userId = req.user!.id;
  const role: Role = req.user!.role || Role.STUDENT;

  const questionSpec = await QuestionService.createQuestionSpecific(
    Number(assignmentId),
    Number(teamId),
    userId,
    role,
    title,
    text,
    !!isExternal,
    !!isPrivate,
    localLearningObjectId,
    dwengoHruid,
    dwengoLanguage,
    dwengoVersion ? Number(dwengoVersion) : undefined
  );

  res.status(201).json(questionSpec);
});

// CREATE GENERAL
export const createQuestionGeneral = handleRequest(async (req, res) => {
  const { assignmentId } = req.params;
  const {
    teamId,
    title,
    text,
    isExternal,
    pathRef,
    dwengoLanguage,
    isPrivate
  } = req.body;

  if (!assignmentId || !teamId || !title || !text || !pathRef) {
    throw new BadRequestError("Missing required fields (assignmentId, teamId, title, text, pathRef).");
  }
  const userId = req.user!.id;
  const role: Role = req.user!.role || Role.STUDENT;

  const questionGen = await QuestionService.createQuestionGeneral(
    Number(assignmentId),
    Number(teamId),
    userId,
    role,
    title,
    text,
    !!isExternal,
    !!isPrivate,
    pathRef,
    dwengoLanguage
  );

  res.status(201).json(questionGen);
});

// CREATE message
export const createQuestionMessage = handleRequest(async (req, res) => {
  const { questionId } = req.params;
  const { text } = req.body;

  if (!questionId || !text) {
    throw new BadRequestError("Missing questionId or text");
  }
  const userId = req.user!.id;

  const msg = await QuestionService.createQuestionMessage(Number(questionId), userId, text);
  res.status(201).json(msg);
});

// UPDATE question
export const updateQuestion = handleRequest(async (req, res) => {
  const { questionId } = req.params;
  const { title } = req.body;
  if (!title) {
    throw new BadRequestError("Missing title");
  }
  const updated = await QuestionService.updateQuestion(Number(questionId), title);
  res.status(200).json(updated);
});

// UPDATE message
export const updateQuestionMessage = handleRequest(async (req, res) => {
  const { questionMessageId } = req.params;
  const { text } = req.body;

  if (!text) {
    throw new BadRequestError("Missing text for question message update.");
  }
  const updatedMsg = await QuestionService.updateQuestionMessage(Number(questionMessageId), text);
  res.status(200).json(updatedMsg);
});

// GET question
export const getQuestion = handleRequest(async (req, res) => {
  const { questionId } = req.params;
  const q = await QuestionService.getQuestion(Number(questionId));
  res.json(q);
});

// GET questions by team
export const getQuestionsTeam = handleRequest(async (req, res) => {
  const { teamId } = req.params;
  const questions = await QuestionService.getQuestionsForTeam(
    Number(teamId),
    req.user! // pass user => filtering
  );
  res.json(questions);
});

// GET questions by class
export const getQuestionsClass = handleRequest(async (req, res) => {
  const { classId } = req.params;
  const questions = await QuestionService.getQuestionsForClass(
    Number(classId),
    req.user!
  );
  res.json(questions);
});

// GET questions for assignment + class
export const getQuestionsAssignment = handleRequest(async (req, res) => {
  const { assignmentId, classId } = req.params;
  const questions = await QuestionService.getQuestionsForAssignment(
    Number(assignmentId),
    Number(classId),
    req.user!
  );
  res.json(questions);
});

// GET question messages
export const getQuestionMessages = handleRequest(async (req, res) => {
  const { questionId } = req.params;
  const msgs = await QuestionService.getQuestionMessages(Number(questionId));
  res.json(msgs);
});

// DELETE question
export const deleteQuestion = handleRequest(async (req, res) => {
  const { questionId } = req.params;
  await QuestionService.deleteQuestion(Number(questionId));
  res.status(204).end();
});

// DELETE message
export const deleteQuestionMessage = handleRequest(async (req, res) => {
  const { questionMessageId } = req.params;
  await QuestionService.deleteQuestionMessage(Number(questionMessageId));
  res.status(204).end();
});



===== Bestand: ../dwengo_backend/controllers/progressController.ts =====
import { Response } from "express";
import { LearningObjectProgress, PrismaClient } from "@prisma/client";
import { AuthenticatedRequest } from "../interfaces/extendedTypeInterfaces";
import { getUserFromAuthRequest } from "../helpers/getUserFromAuthRequest";

const prisma = new PrismaClient();

/**
 * CreÃ«ert een nieuw progressie-record voor een student bij een (lokaal) leerobject.
 * Dit gebeurt wanneer een student een leerobject start (alleen lokaal).
 */
export const createProgress = async (
  req: AuthenticatedRequest,
  res: Response,
): Promise<void> => {
  try {
    const studentId: number = getUserFromAuthRequest(req).id;
    const learningObjectId: string = req.params.learningObjectId; // ID van het LOCAL learningObject

    // Atomaire transactie
    const result = await prisma.$transaction(async (transactionPrisma) => {
      // Maak een nieuw progressie-record (aanvankelijk niet voltooid)
      const progress: LearningObjectProgress =
        await transactionPrisma.learningObjectProgress.create({
          data: {
            learningObjectId,
            done: false,
          },
        });

      // Koppel de progressie aan de ingelogde student
      await transactionPrisma.studentProgress.create({
        data: {
          studentId: studentId,
          progressId: progress.id,
        },
      });

      return { progress };
    });

    res
      .status(201)
      .json({ message: "Progressie aangemaakt.", progress: result.progress });
    return;
  } catch (error) {
    console.error(error);
    res
      .status(500)
      .json({ error: "Er is iets misgegaan bij het aanmaken van progressie." });
  }
};

/**
 * Haalt het progressie-record (done/ niet-done) van een student voor een specifiek lokaal leerobject.
 */
export const getStudentProgress = async (
  req: AuthenticatedRequest,
  res: Response,
): Promise<void> => {
  try {
    const studentId: number = getUserFromAuthRequest(req).id;
    const { learningObjectId } = req.params; // local ID

    const studentProgress = await prisma.studentProgress.findFirst({
      where: {
        studentId: studentId,
        progress: { learningObjectId },
      },
      include: { progress: true },
    });

    if (!studentProgress) {
      res.status(404).json({ error: "Progressie niet gevonden." });
      return;
    }

    res.status(200).json(studentProgress.progress);
  } catch (error) {
    console.error(error);
    res.status(500).json({ error: "Fout bij ophalen van progressie." });
  }
};

/**
 * Update het progressie-record van een student voor een *lokaal* leerobject (bv. done = true).
 */
export const updateProgress = async (
  req: AuthenticatedRequest,
  res: Response,
): Promise<void> => {
  try {
    const studentId: number = getUserFromAuthRequest(req).id;
    const { learningObjectId } = req.params; // local ID

    // Zoek de StudentProgress
    const studentProgress = await prisma.studentProgress.findFirst({
      where: {
        studentId: studentId,
        progress: { learningObjectId },
      },
      include: { progress: true },
    });

    if (!studentProgress) {
      res.status(404).json({ error: "Progressie niet gevonden." });
      return;
    }

    // Markeer als done
    const updatedProgress = await prisma.learningObjectProgress.update({
      where: { id: studentProgress.progress.id },
      data: { done: true },
    });

    res
      .status(200)
      .json({ message: "Progressie bijgewerkt.", progress: updatedProgress });
  } catch (error) {
    console.error(error);
    res.status(500).json({ error: "Fout bij bijwerken van progressie." });
  }
};

/**
 * (Voor STUDENT) Bepaal de team-voortgang.
 */
export const getTeamProgressStudent = async (
  req: AuthenticatedRequest,
  res: Response,
): Promise<void> => {
  try {
    if (!req.user) {
      res.status(401).json({ error: "Niet ingelogd." });
      return;
    }

    const teamId: number = parseInt(req.params.teamid, 10);
    if (isNaN(teamId)) {
      res.status(400).json({ error: "Ongeldig team ID." });
      return;
    }

    // Haal team + assignment
    const team = await prisma.team.findUnique({
      where: { id: teamId },
      include: {
        students: true,
        teamAssignment: true, // => assignmentId
      },
    });
    if (!team) {
      res.status(404).json({ error: "Team niet gevonden." });
      return;
    }
    const ta = team.teamAssignment;
    if (!ta) {
      res
        .status(404)
        .json({ error: "Geen assignment gekoppeld aan dit team." });
      return;
    }

    // Haal assignment
    const assignment = await prisma.assignment.findUnique({
      where: { id: ta.assignmentId },
    });
    if (!assignment) {
      res.status(404).json({ error: "Opdracht niet gevonden." });
      return;
    }

    // Bepaal of assignment isExternal of niet
    if (assignment.isExternal) {
      // -> geen local path, geen nodes => 0% of skip
      res.json({ teamProgress: 0 });
      return;
    }
    // Als 'isExternal = false', dan is assignment.pathRef de local learningPath ID
    const localPathId = assignment.pathRef;

    // Tel nodes in dat local learning path
    const totalNodes: number = await prisma.learningPathNode.count({
      where: { learningPathId: localPathId },
    });
    if (totalNodes === 0) {
      res.status(404).json({ error: "Geen leerpadnodes gevonden." });
      return;
    }

    // Haal alle *lokaal* object-IDs uit de nodes
    // (we gaan ervan uit dat isExternal = false => localLearningObjectId != null)
    const nodes = await prisma.learningPathNode.findMany({
      where: { learningPathId: localPathId, isExternal: false },
      select: { localLearningObjectId: true },
    });
    const objectIds = nodes
      .filter((n) => n.localLearningObjectId !== null)
      .map((n) => n.localLearningObjectId!);

    let maxPercentage = 0;

    // Voor elke student
    for (const s of team.students) {
      const doneCount = await prisma.studentProgress.count({
        where: {
          studentId: s.userId,
          progress: {
            done: true,
            learningObjectId: { in: objectIds },
          },
        },
      });
      const percentage = (doneCount / totalNodes) * 100;
      if (percentage > maxPercentage) maxPercentage = percentage;
    }

    res.status(200).json({ teamProgress: maxPercentage });
  } catch (error) {
    console.error(error);
    res
      .status(500)
      .json({ error: "Fout bij ophalen van team progressie (studentversie)." });
  }
};

/**
 * (Voor STUDENT) Hoe ver staat de student met deze assignment?
 */
export const getStudentAssignmentProgress = async (
  req: AuthenticatedRequest,
  res: Response,
): Promise<void> => {
  try {
    const studentId: number = getUserFromAuthRequest(req).id;
    const assignmentId: number = parseInt(req.params.assignmentId, 10);
    if (isNaN(assignmentId)) {
      res.status(400).json({ error: "Ongeldig assignment ID." });
      return;
    }

    const assignment = await prisma.assignment.findUnique({
      where: { id: assignmentId },
    });
    if (!assignment) {
      res.status(404).json({ error: "Opdracht niet gevonden." });
      return;
    }

    // Als isExternal -> Dwengo => 0%
    if (assignment.isExternal) {
      res.json({ assignmentProgress: 0 });
      return;
    }
    const localPathId = assignment.pathRef;

    // Tel nodes
    const totalNodes = await prisma.learningPathNode.count({
      where: { learningPathId: localPathId },
    });
    if (totalNodes === 0) {
      res.status(404).json({ error: "Geen leerpad nodes gevonden." });
      return;
    }

    // Haal local objects
    const nodes = await prisma.learningPathNode.findMany({
      where: { learningPathId: localPathId, isExternal: false },
      select: { localLearningObjectId: true },
    });
    const objectIds = nodes
      .filter((n) => n.localLearningObjectId)
      .map((n) => n.localLearningObjectId!);

    // Hoeveel done?
    const doneCount = await prisma.studentProgress.count({
      where: {
        studentId,
        progress: { done: true, learningObjectId: { in: objectIds } },
      },
    });

    const percentage = (doneCount / totalNodes) * 100;
    res.status(200).json({ assignmentProgress: percentage });
  } catch (error) {
    console.error(error);
    res
      .status(500)
      .json({ error: "Fout bij ophalen van opdracht-voortgang (student)." });
  }
};

/**
 * Student: hoe ver staat hij/zij met *een volledig (lokaal) leerpad*
 * (niet per se via assignment).
 */
export const getStudentLearningPathProgress = async (
  req: AuthenticatedRequest,
  res: Response,
): Promise<void> => {
  try {
    const studentId: number = getUserFromAuthRequest(req).id;
    const { learningPathId } = req.params;
    if (!learningPathId) {
      res.status(400).json({ error: "Ongeldig leerpad ID." });
      return;
    }

    // Tel local nodes
    const totalNodes: number = await prisma.learningPathNode.count({
      where: { learningPathId, isExternal: false },
    });
    if (totalNodes === 0) {
      res
        .status(404)
        .json({ error: "Geen (lokale) nodes gevonden voor dit leerpad." });
      return;
    }

    // local object IDs
    const nodes = await prisma.learningPathNode.findMany({
      where: { learningPathId, isExternal: false },
      select: { localLearningObjectId: true },
    });
    const objectIds = nodes
      .filter((n) => n.localLearningObjectId)
      .map((n) => n.localLearningObjectId!);

    // Hoeveel done?
    const doneCount = await prisma.studentProgress.count({
      where: {
        studentId,
        progress: {
          done: true,
          learningObjectId: { in: objectIds },
        },
      },
    });

    const percentage = (doneCount / totalNodes) * 100;
    res.status(200).json({ learningPathProgress: percentage });
  } catch (error) {
    console.error(error);
    res
      .status(500)
      .json({ error: "Fout bij ophalen van leerpadvoortgang (student)." });
  }
};

/**
 * (Voor TEACHER) De teamvoortgang.
 */
export const getTeamProgressTeacher = async (
  req: AuthenticatedRequest,
  res: Response,
): Promise<void> => {
  try {
    if (!req.user) {
      res.status(401).json({ error: "Niet ingelogd." });
      return;
    }
    const teamId: number = parseInt(req.params.teamid, 10);
    if (isNaN(teamId)) {
      res.status(400).json({ error: "Ongeldig team ID." });
      return;
    }

    const team = await prisma.team.findUnique({
      where: { id: teamId },
      include: {
        students: true,
        teamAssignment: true,
      },
    });
    if (!team) {
      res.status(404).json({ error: "Team niet gevonden." });
      return;
    }
    if (!team.teamAssignment) {
      res
        .status(404)
        .json({ error: "Geen assignment gekoppeld aan dit team." });
      return;
    }

    const assignment = await prisma.assignment.findUnique({
      where: { id: team.teamAssignment.assignmentId },
    });
    if (!assignment) {
      res.status(404).json({ error: "Opdracht niet gevonden." });
      return;
    }
    // als extern => 0
    if (assignment.isExternal) {
      res.json({ teamProgress: 0 });
      return;
    }
    const localPathId = assignment.pathRef;

    // tel nodes
    const totalNodes = await prisma.learningPathNode.count({
      where: { learningPathId: localPathId, isExternal: false },
    });
    if (totalNodes === 0) {
      res
        .status(404)
        .json({ error: "Geen (lokale) nodes gevonden in dit leerpad." });
      return;
    }

    // local objects
    const nodes = await prisma.learningPathNode.findMany({
      where: { learningPathId: localPathId, isExternal: false },
      select: { localLearningObjectId: true },
    });
    const objectIds = nodes
      .filter((n) => n.localLearningObjectId)
      .map((n) => n.localLearningObjectId!);

    let maxPercentage = 0;
    for (const student of team.students) {
      const doneCount = await prisma.studentProgress.count({
        where: {
          studentId: student.userId,
          progress: { done: true, learningObjectId: { in: objectIds } },
        },
      });
      const perc = (doneCount / totalNodes) * 100;
      if (perc > maxPercentage) {
        maxPercentage = perc;
      }
    }
    res.status(200).json({ teamProgress: maxPercentage });
  } catch (error) {
    console.error(error);
    res
      .status(500)
      .json({ error: "Fout bij ophalen van teamprogressie (teacherversie)." });
  }
};

/**
 * (Voor TEACHER) Gemiddelde voortgang van een klas.
 */
export const getAssignmentAverageProgress = async (
  req: AuthenticatedRequest,
  res: Response,
): Promise<void> => {
  try {
    if (!req.user) {
      res.status(401).json({ error: "Niet ingelogd." });
      return;
    }
    const assignmentId = parseInt(req.params.assignmentId, 10);
    if (isNaN(assignmentId)) {
      res.status(400).json({ error: "Ongeldig assignment ID." });
      return;
    }

    const assignment = await prisma.assignment.findUnique({
      where: { id: assignmentId },
    });
    if (!assignment) {
      res.status(404).json({ error: "Opdracht niet gevonden." });
      return;
    }
    if (assignment.isExternal) {
      res.json({ averageProgress: 0 });
      return;
    }
    const localPathId = assignment.pathRef;

    // tel local nodes
    const totalNodes = await prisma.learningPathNode.count({
      where: { learningPathId: localPathId, isExternal: false },
    });
    if (totalNodes === 0) {
      res
        .status(404)
        .json({ error: "Geen lokale nodes gevonden voor dit leerpad." });
      return;
    }

    // local objects
    const nodes = await prisma.learningPathNode.findMany({
      where: { learningPathId: localPathId, isExternal: false },
      select: { localLearningObjectId: true },
    });
    const objectIds = nodes
      .filter((n) => n.localLearningObjectId)
      .map((n) => n.localLearningObjectId!);

    // alle teams
    const teamAssignments = await prisma.teamAssignment.findMany({
      where: { assignmentId },
      include: { team: { include: { students: true } } },
    });
    if (teamAssignments.length === 0) {
      res
        .status(404)
        .json({ error: "Geen teams gevonden voor deze opdracht." });
      return;
    }

    let totalProgress = 0;
    let teamCount = 0;

    for (const ta of teamAssignments) {
      const team = ta.team;
      let teamMax = 0;
      for (const student of team.students) {
        const doneCount = await prisma.studentProgress.count({
          where: {
            studentId: student.userId,
            progress: { done: true, learningObjectId: { in: objectIds } },
          },
        });
        const percentage = (doneCount / totalNodes) * 100;
        if (percentage > teamMax) {
          teamMax = percentage;
        }
      }
      totalProgress += teamMax;
      teamCount++;
    }

    const averageProgress = teamCount > 0 ? totalProgress / teamCount : 0;
    res.status(200).json({ averageProgress });
  } catch (error) {
    console.error(error);
    res
      .status(500)
      .json({ error: "Fout bij berekenen van gemiddelde voortgang." });
  }
};


===== Bestand: ../dwengo_backend/controllers/student/studentAssignmentController.ts =====
import { Response } from "express";
import { getAssignmentsForStudent } from "../../services/studentAssignmentService";
import { Assignment } from "@prisma/client";
import { AuthenticatedRequest } from "../../interfaces/extendedTypeInterfaces";
import { getUserFromAuthRequest } from "../../helpers/getUserFromAuthRequest";

const allowedSortFields: string[] = ["deadline", "createdAt", "updatedAt"];

function extractSortableFields(input: string): string[] {
  return (
    input?.split(",").filter((field: string): boolean => allowedSortFields.includes(field)) || [
      "deadline",
    ]
  );
}

export const getStudentAssignments = async (
  req: AuthenticatedRequest,
  res: Response
): Promise<void> => {
  try {
    const studentId: number = getUserFromAuthRequest(req).id;
    // Een URL van volgend formaat wordt verwacht
    // GET /assignments?sort=deadline&order=desc&limit=5

    // Sorteer standaard de deadline, extra velden kunnen meegegeven worden
    const sortFields: string[] = extractSortableFields(req.query.sort as string);
    const order: "desc" | "asc" = req.query.order === "desc" ? "desc" : "asc";
    // Sorteer standaard ascending, descending kan ook
    const limit: number = Number(req.query.limit) || 5;
    // Haal standaard 5 assignments op, andere hoeveelheden kunnen ook

    if (isNaN(limit) || limit <= 0) {
      res.status(400).json({ error: "Limit wasn't a valid number" });
      return;
    }

    const assignments: Assignment[] = await getAssignmentsForStudent(
      studentId,
      sortFields,
      order,
      limit
    );
    res.status(200).json(assignments);
  } catch (error) {
    res
      .status(500)
      .json({ error: "Something went wrong while requesting the assignments" });
  }
};


===== Bestand: ../dwengo_backend/controllers/student/studentAuthController.ts =====
import { Student, User } from "@prisma/client";
import asyncHandler from "express-async-handler";
import bcrypt from "bcryptjs";
import { Request, Response } from "express";
import { generateToken } from "../../helpers/generateToken";
import UserService from "../../services/userService";
import StudentService from "../../services/studentService";

interface LoginStudentBody {
  email: string;
  password: string;
}

// @desc    Inloggen van een leerling
// @route   POST /student/auth/login
// @access  Public

export const loginStudent = asyncHandler(
  async (req: Request, res: Response): Promise<void> => {
    const { email, password } = req.body as LoginStudentBody;

    // Basisvalidatie voor e-mail
    if (!/\S+@\S+\.\S+/.test(email)) {
      res.status(400);
      throw new Error("Voer een geldig e-mailadres in");
    }

    // Zoek eerst de gebruiker
    const user: User = await UserService.findUserByEmail(email);
    if (!user || user.role !== "STUDENT") {
      res.status(401);
      throw new Error("Ongeldige gebruiker");
    }

    // Haal het gekoppelde Student-record op
    // Hier geen type aan proberen koppelen, zorgt enkel voor problemen
    const student: Student & { user: User } =
      await StudentService.findStudentById(user.id);

    if (!student || !student.user) {
      res.status(401);
      throw new Error("Ongeldige gebruiker");
    }

    // Vergelijk het opgegeven wachtwoord met de opgeslagen hash
    const passwordMatches: boolean = await bcrypt.compare(
      password,
      student.user.password
    );
    if (!passwordMatches) {
      res.status(401);
      throw new Error("Ongeldig wachtwoord");
    }

    res.json({
      message: "Succesvol ingelogd",
      firstName: user.firstName,
      lastName: user.lastName,
      token: generateToken(student.userId),
    });
  }
);


===== Bestand: ../dwengo_backend/controllers/student/studentClassController.ts =====
import { Response } from "express";
import asyncHandler from "express-async-handler";
import classService from "../../services/classService";
import { AuthenticatedRequest } from "../../interfaces/extendedTypeInterfaces";
import { getUserFromAuthRequest } from "../../helpers/getUserFromAuthRequest";

/**
 * Get all classes that a student is partaking in
 * @route GET /student/classes
 * returns a list of all classes the student is partaking in in the response body
 */
export const getStudentClasses = asyncHandler(
    async (req: AuthenticatedRequest, res: Response): Promise<void> => {
        const studentId: number = getUserFromAuthRequest(req).id;
        const classes = await classService.getClassesByStudent(studentId);
        res.status(200).json({ classes });
    }
);


===== Bestand: ../dwengo_backend/controllers/student/studentTeamController.ts =====
import { Response } from "express";
import { Team } from "@prisma/client";
import { AuthenticatedRequest } from "../../interfaces/extendedTypeInterfaces";
import { getUserFromAuthRequest } from "../../helpers/getUserFromAuthRequest";
import StudentTeamService from "../../services/studentTeamService";

/**
 * Haalt alle teams op waarin de ingelogde student zit.
 */
export const getStudentTeams = async (req: AuthenticatedRequest, res: Response): Promise<void> => {
  try {
    const studentId: number = getUserFromAuthRequest(req).id;

    const teams: Team[] = await StudentTeamService.getStudentTeams(studentId);

    res.status(200).json(teams);
  } catch (error) {
    console.error(error);
    res.status(500).json({ error: "Er is iets misgegaan bij het ophalen van de teams." });
  }
};

/**
 * Haalt het team op dat gekoppeld is aan een specifieke opdracht.
 */
export const getTeamByAssignment = async (req: AuthenticatedRequest, res: Response): Promise<void> => {
  try {
    const studentId: number = getUserFromAuthRequest(req).id;
    const assignmentId: number = parseInt(req.params.assignmentId, 10);

    if (isNaN(assignmentId)) {
      res.status(400).json({ error: "Invalid assignment ID" });
      return;
    }

    const team = await StudentTeamService.getTeam(studentId, assignmentId);

    if (!team) {
      res.status(404).json({ error: "Geen team gevonden voor deze opdracht." });
      return;
    }

    res.status(200).json(team);
  } catch (error) {
    console.error(error);
    res.status(500).json({ error: "Er is iets misgegaan bij het ophalen van het team." });
  }
};

/**
 * Haalt alle teamleden op van een specifiek team.
 */
export const getTeamMembers = async (req: AuthenticatedRequest, res: Response): Promise<void> => {
  try {
    if (!req.user) {
      res.status(401).json({ error: "Unauthorized: No user found" });
      return;
    }

    const teamId: number = parseInt(req.params.teamId, 10);

    if (isNaN(teamId)) {
      res.status(400).json({ error: "Invalid team ID" });
      return;
    }

    const team = await StudentTeamService.getTeamById(teamId);

    if (!team) {
      res.status(404).json({ error: "Team niet gevonden." });
      return;
    }

    res.status(200).json(team.students);
  } catch (error) {
    console.error(error);
    res.status(500).json({ error: "Er is iets misgegaan bij het ophalen van de teamleden." });
  }
};


===== Bestand: ../dwengo_backend/controllers/student/studentSubmissionController.ts =====
import {NextFunction, Response} from "express";
import service from "../../services/submissionService";
import {Submission} from "@prisma/client";
import {AuthenticatedRequest} from "../../interfaces/extendedTypeInterfaces";
import {getUserFromAuthRequest} from "../../helpers/getUserFromAuthRequest";

export default class StudentSubmissionController {
    static async createSubmission(req: AuthenticatedRequest, res: Response, next: NextFunction): Promise<void> {
        // Hier is het noodzakelijk om de error aan next door te geven, anders vangt onze errorhandler deze nooit op.
        try {
            const { assignmentId, evaluationId } = req.params;
            const studentId: number = getUserFromAuthRequest(req).id;

            const submission: Submission = await service.createSubmission(studentId, evaluationId, Number(assignmentId));
            res.status(201).json(submission);
        } catch (err) {
            // Pass the error to the next middleware (our error handler)
            next(err);
        }
    }

    static async getSubmissionsForAssignment(req: AuthenticatedRequest, res: Response): Promise<void> {
        const assignmentId: number = Number(req.params.assignmentId);
        const studentId: number = getUserFromAuthRequest(req).id;

        const submissions: Submission[] = await service.getSubmissionsForAssignment(assignmentId, studentId);

        res.status(200).json(submissions);
    }

    static async getSubmissionsForEvaluation(req: AuthenticatedRequest, res: Response): Promise<void> {
        const {assignmentId, evaluationId} = req.params;
        const studentId: number = getUserFromAuthRequest(req).id;

        const submissions: Submission[] = await service.getSubmissionsForEvaluation(Number(assignmentId), evaluationId, studentId);

        res.status(200).json(submissions);
    }
}

===== Bestand: ../dwengo_backend/controllers/userController.ts =====
import asyncHandler from "express-async-handler";
import { Role, User } from "@prisma/client";
import UserService from "../services/userService";
import bcrypt from "bcryptjs";
import { AuthenticatedRequest } from "../interfaces/extendedTypeInterfaces";
import { Response } from "express";
import { z, ZodIssue } from "zod";

const RegisterUserSchema = z.object({
  firstName: z.string().min(1, "First name is required"),
  lastName: z.string().min(1, "Last name is required"),
  email: z.string().email("Invalid email address"),
  password: z.string().min(6, "Password must be at least 6 characters"),
});

const registerUser = async (
  req: AuthenticatedRequest,
  res: Response,
  role: Role,
): Promise<void> => {
  // Validate the request body
  try {
    // This will throw if the body doesn't match the RegisterUserSchema
    RegisterUserSchema.parse(req.body);
  } catch (error) {
    // If the error is a ZodError
    if (error instanceof z.ZodError) {
      res.status(400).json({
        message: error.errors
          .map((err: ZodIssue): string => err.message)
          .join(", "),
      });
      return;
    } else {
      // This shouldn't happen
      res.status(500).json({ message: "An unexpected error occurred" });
      return;
    }
  }

  const { firstName, lastName, email, password } = req.body;

  // Controleer of gebruiker al bestaat
  const existingUser: User | null = await UserService.findUser(email);
  if (existingUser) {
    res.status(400);
    throw new Error("Gebruiker bestaat al");
  }

  // Hash het wachtwoord
  const hashedPassword: string = await bcrypt.hash(password, 10);

  // Maak de gebruiker aan met de juiste rol
  await UserService.createUser(
    firstName,
    lastName,
    email,
    hashedPassword,
    role,
  );

  res.status(201).json({
    message: `${
      role === Role.TEACHER ? "Leerkracht" : "Leerling"
    } succesvol geregistreerd`,
  });
};

// @desc    Registreer een nieuwe leerling
// @route   POST /teacher/auth/register
// @access  Public
export const registerTeacher = asyncHandler(
  async (req: AuthenticatedRequest, res: Response): Promise<void> => {
    await registerUser(req, res, Role.TEACHER);
  },
);

// @desc    Registreer een nieuwe leerling
// @route   POST /student/auth/register
// @access  Public
export const registerStudent = asyncHandler(
  async (req: AuthenticatedRequest, res: Response): Promise<void> => {
    await registerUser(req, res, Role.STUDENT);
  },
);


===== Bestand: ../dwengo_backend/controllers/learningObject/learningObjectController.ts =====
import {Response} from "express";
import {
  getAllLearningObjects,
  getLearningObjectByHruidLangVersion,
  getLearningObjectById,
  getLearningObjectsForPath,
  searchLearningObjects,
} from "../../services/combinedLearningObjectService";
import {LearningObjectDto} from "../../services/dwengoLearningObjectService";
import {getUserFromAuthRequest} from "../../helpers/getUserFromAuthRequest";
import {AuthenticatedRequest} from "../../interfaces/extendedTypeInterfaces";

function userIsTeacherOrAdmin(req: AuthenticatedRequest): boolean {
  const role: string | undefined = getUserFromAuthRequest(req).role;
  return role === "TEACHER" || role === "ADMIN";
}

// Haal alle leerobjecten (Dwengo + lokaal)
export const getAllLearningObjectsController = async (
  req: AuthenticatedRequest,
  res: Response
): Promise<void> => {
  try {
    const isTeacher: boolean = userIsTeacherOrAdmin(req);
    const objects: LearningObjectDto[] = await getAllLearningObjects(isTeacher);
    res.json(objects);
  } catch (error) {
    console.error(error);
    res.status(500).json({ error: "Fout bij ophalen leerobjecten (combi Dwengo + local)" });
  }
};

// Haal Ã©Ã©n leerobject op (via :id)
export const getLearningObjectController = async (
  req: AuthenticatedRequest,
  res: Response
): Promise<void> => {
  try {
    const { id } = req.params;
    const isTeacher: boolean = userIsTeacherOrAdmin(req);
    const lo: LearningObjectDto | null = await getLearningObjectById(id, isTeacher);
    if (!lo) {
      res.status(404).json({ error: "Leerobject niet gevonden of geen toegang" });
      return;
    }
    res.json(lo);
  } catch (error) {
    console.error(error);
    res.status(500).json({ error: "Fout bij ophalen leerobject (combi Dwengo + local)" });
  }
};

// Zoeken naar leerobjecten (Dwengo + lokaal)
export const searchLearningObjectsController = async (
  req: AuthenticatedRequest,
  res: Response
): Promise<void> => {
  try {
    const searchTerm: string = req.query.q?.toString() || "";
    const isTeacher: boolean = userIsTeacherOrAdmin(req);
    const results: LearningObjectDto[] = await searchLearningObjects(isTeacher, searchTerm);
    res.json(results);
  } catch (error) {
    console.error(error);
    res.status(500).json({ error: "Fout bij zoeken naar leerobjecten (combi Dwengo + local)" });
  }
};

// Haal alle leerobjecten op die horen bij een specifiek leerpad (op basis van pathId)
export const getLearningObjectsForPathController = async (
  req: AuthenticatedRequest,
  res: Response
): Promise<void> => {
  try {
    const { pathId } = req.params;
    const isTeacher: boolean = userIsTeacherOrAdmin(req);
    const objects: LearningObjectDto[] = await getLearningObjectsForPath(pathId, isTeacher);
    res.json(objects);
  } catch (error) {
    console.error(error);
    res.status(500).json({ error: "Fout bij ophalen leerobjecten voor leerpad (Dwengo)" });
  }
};

// [NIEUW] Haal Ã©Ã©n leerobject op basis van hruid + language + version
export const getLearningObjectByHruidLangVersionController = async (
  req: AuthenticatedRequest,
  res: Response
): Promise<void> => {
  
  try {
    const { hruid, language, version } = req.query;
    if (!hruid || !language || !version) {
      res.status(400).json({
        error: "Geef hruid, language en version op als queryparameters, bv. ?hruid=xxx&language=nl&version=2",
      });
      return;
    }

    const isTeacher: boolean = userIsTeacherOrAdmin(req);
    const verNum = parseInt(version.toString(), 10);
    if (isNaN(verNum)) {
      res.status(400).json({ error: "Version moet een getal zijn." });
      return;
    }

    // Servicecall
    const lo = await getLearningObjectByHruidLangVersion(
      hruid.toString(),
      language.toString(),
      verNum,
      isTeacher
    );

    if (!lo) {
      res.status(404).json({
        error: "Geen leerobject gevonden (of je hebt geen toegang) met deze hruid-language-version",
      });
      return;
    }

    res.json(lo);
  } catch (error) {
    console.error(error);
    res.status(500).json({ error: "Fout bij ophalen leerobject op basis van hruid-language-version" });
  }
};


===== Bestand: ../dwengo_backend/config/dwengoAPI.ts =====
import axios, { AxiosInstance } from "axios";

export const dwengoAPI: AxiosInstance = axios.create({
  baseURL: process.env.DWENGO_BASE_URL || "https://dwengo.org/backend",
  headers: {
    "Content-Type": "application/json",
    Accept: "application/json",
  },
  timeout: 5000,
});


===== Bestand: ../dwengo_backend/helpers/getUserFromAuthRequest.ts =====
import { UnauthorizedError } from "../errors/errors";
import {AuthenticatedRequest, AuthenticatedUser} from "../interfaces/extendedTypeInterfaces";
import { z } from 'zod';
import {Role} from "@prisma/client";

const RoleSchema = z.enum([Role.ADMIN, Role.TEACHER, Role.STUDENT]);

const AuthenticatedUserSchema = z.object({
    id: z.number(),
    role: RoleSchema.optional(),
    // z.any() zorgt er voor dat ik niet heel de databank opnieuw moeten herdefiniÃ«ren maar dan in Zod
    teacher: z.any().optional(),
    student: z.any().optional(),
    email: z.string().email(),
});

// since the user property in AuthenticatedRequest could be undefined, use this function to extract it safely
export function getUserFromAuthRequest(req: AuthenticatedRequest): AuthenticatedUser {
    // check that user is set
    if (!req.user) {
        throw new UnauthorizedError("Authentication required");
    }

    // check that user object has correct structure
    try {
        return AuthenticatedUserSchema.parse(req.user);
    } catch (error) {
        if (error instanceof z.ZodError) {
            throw new UnauthorizedError("Invalid user object in request");
        }
        throw error;
    }
}


===== Bestand: ../dwengo_backend/helpers/generateToken.ts =====
// Functie om een JWT-token te genereren
import jwt from "jsonwebtoken";

export const generateToken: (id: number | string) => string = (id: number | string): string => {
    if (!process.env.JWT_SECRET) {
        throw new Error("JWT_SECRET is niet gedefinieerd in de omgevingsvariabelen");
    }
    return jwt.sign({ id }, process.env.JWT_SECRET, { expiresIn: "7d" });
};

===== Bestand: ../dwengo_backend/.env =====
JWT_SECRET="1e44718d5240dfb0a668f3f2ee048da0516c0f0c0d1998652c7791f47b26e230"
PORT="5000"

POSTGRES_PASSWORD=passwor
DATABASE_URL="postgresql://selab2:passwor@localhost:2002/selab2?schema=public"

===== Bestand: ../dwengo_backend/middleware/errorMiddleware.ts =====
import { Request, Response, NextFunction } from "express";
import { AppError } from "../errors/errors";
import { PrismaClientKnownRequestError } from "@prisma/client/runtime/library";

const errorHandler = (
  err: Error,
  req: Request,
  res: Response,
  next: NextFunction
): void => {
  if (err instanceof AppError) {
    res.status(err.statusCode);
  } else {
    const statusCode = res.statusCode === 200 ? 500 : res.statusCode;
    res.status(statusCode);
  }

  if (err instanceof PrismaClientKnownRequestError) {
    if (err.code == "P2025") {
      res.status(404).json({ error: "Resource not found", details: err.meta });
    } else {
      // TODO: figure out how to handle other PrismaClientKnownRequestErrors (add more cases as needed)
      res
        .status(500)
        .json({ error: "a database error occured", details: err.meta });
    }
  }

  res.json({
    message: err.message,
    // Alleen de stack weergeven als je niet in productie bent:
    stack: process.env.NODE_ENV === "production" ? undefined : err.stack,
  });
};

export default errorHandler;


===== Bestand: ../dwengo_backend/middleware/studentAuthMiddleware.ts =====
import jwt from 'jsonwebtoken';
import asyncHandler from 'express-async-handler';
import { PrismaClient } from '@prisma/client';
import { Request, Response, NextFunction } from 'express';

const prisma = new PrismaClient();

interface AuthenticatedRequest extends Request {
  user?: {
    id: number;
    email: string;
  };
}

interface JwtPayload {
  id: number;
}

export const protectStudent = asyncHandler(
  async (req: AuthenticatedRequest, res: Response, next: NextFunction): Promise<void> => {
    let token: string | undefined;

    if (
      req.headers.authorization &&
      req.headers.authorization.startsWith("Bearer")
    ) {
      try {
        token = req.headers.authorization.split(" ")[1];

        const decoded = jwt.verify(
          token,
          process.env.JWT_SECRET as string
        ) as JwtPayload;

        // Zoek de gebruiker (Student) en stel deze in op req.user
        const student = await prisma.student.findUnique({
          where: { userId: decoded.id },  // Finding the student by userId
          include: { user: { select: { id: true, email: true } } } // Fetching user details
        });

        if (!student) {
          res.status(401).json({ error: "Student niet gevonden." });
          return; // Ensure no further execution after sending the response
        }

        req.user = { id: student.userId, email: student.user.email };
        next();
      } catch (error) {
        console.error(error);
        res.status(401).json({ error: "Niet geautoriseerd, token mislukt." });
        return; // Ensure no further execution after sending the response
      }
    } else {
      res.status(401).json({ error: "Geen token, niet geautoriseerd." });
      return; // Ensure no further execution after sending the response
    }
  }
);

===== Bestand: ../dwengo_backend/middleware/teacherAuthMiddleware.ts =====
import jwt from 'jsonwebtoken';
import asyncHandler from 'express-async-handler';
import { PrismaClient } from '@prisma/client';
import { Response, NextFunction } from 'express';
import { AuthenticatedRequest } from "../interfaces/extendedTypeInterfaces";

const prisma = new PrismaClient();

interface JwtPayload {
  id: number;
}

export const isTeacher = async (req: AuthenticatedRequest, res: Response, next: NextFunction): Promise<void> => {
  const userId = req.user?.id;
  if (!userId) {
    res.status(401).json({ error: "Unauthorized" });
    return; // Ensure the function exits after sending a response
  }

  const teacher = await prisma.teacher.findUnique({ where: { userId } });
  if (!teacher) {
    res.status(403).json({ error: "Access denied. Only teachers can perform this action." });
    return; // Prevent next() from running
  }

  next(); // Ensure next() is only called when valid
};

export const protectTeacher = asyncHandler(
  async (req: AuthenticatedRequest, res: Response, next: NextFunction): Promise<void> => {
    let token: string | undefined;

    if (
      req.headers.authorization &&
      req.headers.authorization.startsWith("Bearer")
    ) {
      try {
        token = req.headers.authorization.split(" ")[1];
        const decoded = jwt.verify(token, process.env.JWT_SECRET as string) as JwtPayload;

        // Zoek de gebruiker (Teacher) en stel deze in op req.user
        const teacher = await prisma.teacher.findUnique({
          where: { userId: decoded.id },
          include: { user: { select: { id: true, email: true } } } // Exclude password
        });

        if (!teacher) {
          // Directly return the error response instead of throwingcd
          res.status(401).json({ error: "Leerkracht niet gevonden." });
          return;
        }

        req.user = { id: teacher.userId, email: teacher.user.email, role: 'TEACHER' };
        next();
      } catch (error) {
        console.error(error);
        // Return the error response directly
        res.status(401).json({ error: "Niet geautoriseerd, token mislukt." });
        return;
      }
    } else {
      // Return the error response directly
      res.status(401).json({ error: "Geen token, niet geautoriseerd." });
      return;
    }
  }
);

export { AuthenticatedRequest };


===== Bestand: ../dwengo_backend/middleware/questionsAuthMiddleware.ts =====
import { NextFunction, Response } from "express";
import asyncHandler from "express-async-handler";
import { PrismaClient } from "@prisma/client";
import { AuthenticatedRequest } from "../interfaces/extendedTypeInterfaces";
import { NotFoundError, AccesDeniedError } from "../errors/errors";

const prisma = new PrismaClient();

/**
 * authorizeQuestion:
 *  - Haalt question op
 *  - Als isPrivate = true -> alleen createdBy of teacher/admin
 *  - Als isPrivate = false -> teamleden + teacher/admin
 */
export const authorizeQuestion = asyncHandler(
  async (req: AuthenticatedRequest, res: Response, next: NextFunction) => {
    const { questionId } = req.params;
    const user = req.user;
    if (!user) {
      throw new AccesDeniedError("Not logged in");
    }

    const question = await prisma.question.findUnique({
      where: { id: Number(questionId) },
      include: {
        team: {
          include: {
            students: true,
            class: {
              include: {
                ClassTeacher: true
              }
            }
          }
        }
      }
    });
    if (!question) {
      throw new NotFoundError("Question not found");
    }

    // check teacher
    const isTeacherInClass = question.team.class.ClassTeacher.some(
      ct => ct.teacherId === user.id
    );
    // check student in team
    const isStudentInTeam = question.team.students.some(s => s.userId === user.id);

    // check admin
    const isAdmin = user.role === "ADMIN";

    if (question.isPrivate) {
      // private => alleen question.createdBy of teacher/admin
      const isCreator = question.createdBy === user.id;
      if (!isCreator && !isTeacherInClass && !isAdmin) {
        throw new AccesDeniedError("Question is private: no access");
      }
    } else {
      // not private => teamleden of teacher/admin
      if (!isStudentInTeam && !isTeacherInClass && !isAdmin) {
        throw new AccesDeniedError("No access to question");
      }
    }

    next();
  }
);


/**
 * authorizeQuestionUpdate:
 *  - Alleen de *owner* (question.createdBy)  of *admin* mag de vraagtitel updaten.
 *  - Dit is strenger dan authorizeQuestion (zien). 
 */
export const authorizeQuestionUpdate = asyncHandler(
  async (req: AuthenticatedRequest, res: Response, next: NextFunction) => {
    const { questionId } = req.params;
    const user = req.user;
    if (!user) {
      throw new AccesDeniedError("Not logged in");
    }

    const question = await prisma.question.findUnique({
      where: { id: Number(questionId) },
      include: {
        team: {
          include: {
            class: {
              include: {
                ClassTeacher: true
              }
            }
          }
        }
      }
    });
    if (!question) {
      throw new NotFoundError("Question not found");
    }

    // Is user the owner?
    const isOwner = (question.createdBy === user.id);

    

    // Is user admin?
    const isAdmin = (user.role === "ADMIN");

    if (!isOwner  && !isAdmin) {
      throw new AccesDeniedError("Only the question owner, or admin can update this question.");
    }

    next();
  }
);

/**
 * authorizeMessageUpdate:
 *  - Alleen de eigenaar (message.userId) of admin mag de tekst updaten
 */
export const authorizeMessageUpdate = asyncHandler(
  async (req: AuthenticatedRequest, res: Response, next: NextFunction) => {
    const { questionMessageId } = req.params;
    const user = req.user;
    if (!user) {
      throw new AccesDeniedError("Not logged in");
    }

    const message = await prisma.questionMessage.findUnique({
      where: { id: Number(questionMessageId) }
    });
    if (!message) {
      throw new NotFoundError("QuestionMessage not found");
    }

    const isOwner = (message.userId === user.id);
    const isAdmin = (user.role === "ADMIN");

    if (!isOwner && !isAdmin) {
      throw new AccesDeniedError("Only the owner or admin can update this message");
    }

    // OK
    next();
  }
);

/**
 * authorizeMessageDelete:
 *  - De eigenaar (student/teacher), *teacher in klas*, of admin mag deleten
 */
export const authorizeMessageDelete = asyncHandler(
  async (req: AuthenticatedRequest, res: Response, next: NextFunction) => {
    const { questionId, questionMessageId } = req.params;
    const user = req.user;
    if (!user) {
      throw new AccesDeniedError("Not logged in");
    }

    // 1) Vind de message
    const message = await prisma.questionMessage.findUnique({
      where: { id: Number(questionMessageId) }
    });
    if (!message) {
      throw new NotFoundError("QuestionMessage not found");
    }

    // 2) Ben je de owner?
    if (message.userId === user.id) {
      return next();
    }

    // 3) of ben je teacher in de bijbehorende class? of admin?
    const question = await prisma.question.findUnique({
      where: { id: Number(questionId) },
      include: {
        team: {
          include: {
            class: {
              include: {
                ClassTeacher: true
              }
            }
          }
        }
      }
    });
    if (!question) {
      throw new NotFoundError("Question not found for this message");
    }

    const isTeacherInClass = question.team.class.ClassTeacher.some(ct => ct.teacherId === user.id);
    const isAdmin = (user.role === "ADMIN");

    if (!isTeacherInClass && !isAdmin) {
      throw new AccesDeniedError("Only owner, teacher, or admin can delete this message");
    }

    next();
  }
);


===== Bestand: ../dwengo_backend/middleware/validateRequest.ts =====
import { Response, NextFunction } from "express";
import { z } from "zod";
import { AuthenticatedRequest } from "./teacherAuthMiddleware";

const formatZodErrors = (error: z.ZodError, source: string) => {
  return error.issues.map((issue) => ({
    field: issue.path.join("."),
    message: issue.message,
    source: source, // body, params or query
  }));
};

/**
 * use before controller to validate request body and params
 * all arguments can be undefined as not every route has a body, params, or query
 * if a schema is provided, it will be validated against the request object
 * @param customErrorMessage a custom error message for in the response
 * @param bodySchema a zod schema for the request body
 * @param paramsSchema a zod schema for the request params
 * @param querySchema a zod schema for the request query
 */
export const validateRequest =
  (
    customErrorMessage?: string,
    bodySchema?: z.AnyZodObject | z.ZodOptional<z.AnyZodObject>,
    paramsSchema?: z.AnyZodObject | z.ZodOptional<z.AnyZodObject>,
    querySchema?: z.AnyZodObject | z.ZodOptional<z.AnyZodObject>
  ) =>
  (req: AuthenticatedRequest, res: Response, next: NextFunction) => {
    const error_details: Array<{
      field: string;
      message: string;
      source: string;
    }> = [];
    if (bodySchema) {
      const bodyResult = bodySchema.safeParse(req.body);
      if (!bodyResult.success) {
        error_details.push(...formatZodErrors(bodyResult.error, "body"));
      }
    }

    if (paramsSchema) {
      const paramsResult = paramsSchema.safeParse(req.params);
      if (!paramsResult.success) {
        error_details.push(...formatZodErrors(paramsResult.error, "params"));
      }
    }

    if (querySchema) {
      const queryResult = querySchema.safeParse(req.query);
      if (!queryResult.success) {
        error_details.push(...formatZodErrors(queryResult.error, "query"));
      }
    }

    if (error_details.length > 0) {
      res.status(400).json({
        error: "validation error",
        message: customErrorMessage || "invalid request body/params/query",
        details: error_details,
      });
      return;
    }

    next();
  };


===== Bestand: ../dwengo_backend/middleware/authAnyUserMiddleware.ts =====
import { Response, NextFunction } from "express";
import asyncHandler from "express-async-handler";
import jwt from "jsonwebtoken";
import { PrismaClient, Teacher, Student, User } from "@prisma/client";
import {
  AuthenticatedRequest,
  AuthenticatedUser,
} from "../interfaces/extendedTypeInterfaces";
const prisma = new PrismaClient();

interface JwtPayload {
  id: number;
}

export const protectAnyUser = asyncHandler(
  async (req: AuthenticatedRequest, res: Response, next: NextFunction) => {
    let token: string | undefined;
    if (
      req.headers.authorization &&
      req.headers.authorization.startsWith("Bearer")
    ) {
      try {
        token = req.headers.authorization.split(" ")[1];
        const decoded = jwt.verify(
          token,
          process.env.JWT_SECRET as string,
        ) as JwtPayload;

        // Zoek de gebruiker in de database
        const user: User | null = await prisma.user.findUnique({
          where: { id: decoded.id },
        });
        if (!user) {
          res.status(401).json({ error: "Gebruiker niet gevonden." });
          return;
        }

        // Bouw het authUser object op met basisgegevens
        const authUser: AuthenticatedUser = {
          id: user.id,
          role: user.role,
          email: user.email,
        };

        // Als de gebruiker een teacher is, haal dan de teacher-specifieke data op
        if (user.role === "TEACHER") {
          const teacher: Teacher | null = await prisma.teacher.findUnique({
            where: { userId: user.id },
            include: {
              teacherFeedbacks: true,
              invite: true,
              createdLearningPaths: true,
              createdLearningObjects: true,
              teaches: true,
            },
          });
          if (teacher) {
            authUser.teacher = teacher;
          }
        }
        // Als de gebruiker een student is, haal dan de student-specifieke data op
        else if (user.role === "STUDENT") {
          const student: Student | null = await prisma.student.findUnique({
            where: { userId: user.id },
            include: {
              progress: true,
              joinRequests: true,
              classes: true,
            },
          });
          if (student) {
            authUser.student = student;
          }
        }

        req.user = authUser;
        next();
      } catch (error) {
        console.error(error);
        res.status(401).json({ error: "Niet geautoriseerd, token mislukt." });
      }
    } else {
      res.status(401).json({ error: "Geen token, niet geautoriseerd." });
    }
  },
);


===== Bestand: ../dwengo_backend/middleware/teamValidationMiddleware.ts =====
import { Response, NextFunction } from 'express';
import {AuthenticatedRequest} from "../interfaces/extendedTypeInterfaces";
import asyncHandler from 'express-async-handler';
import {z} from "zod";

// Checks if the AssignmentId parameter from "/teacher/:assignmentId" is a valid Number
export const makeAssignmentIdParamValid = asyncHandler(async (req: AuthenticatedRequest, res: Response, next: NextFunction): Promise<void> => {
    const assignmentId: number = Number(req.params.assignmentId);

    if (isNaN(assignmentId)) {
        res.status(400).json({ error: "Invalid assignment ID. It must be a number." });
        return;
    }

    next();
});

// Checks if the TeamId parameter from "/teacher/:assignmentId/:teamId" is a valid Number
export const makeTeamIdParamValid = asyncHandler(async (req: AuthenticatedRequest, res: Response, next: NextFunction): Promise<void> => {
    const teamIdNumber: number = Number(req.params.teamId);

    if (isNaN(teamIdNumber)) {
        res.status(400).json({ error: "Invalid team ID. It must be a number." });
        return;
    }

    next();
});

const TeamDivisionSchema = z.object({
    teamName: z.string().min(1, { message: "Team name cannot be empty" }),
    studentIds: z.array(
        z.number().int().positive()
    ).nonempty({ message: "Each team must have at least one student" }),
});

const IdentifiableTeamDivisionSchema = TeamDivisionSchema.extend({
    teamId: z.number().int().positive(),
});

/*
* Check if the parameter teams conforms to the TeamDivision interface.
* This is nothing more than an interface specifying how a class of students gets divided into teams.
* */
export const ensureTeamsParamValidTeamDivision = asyncHandler(
    async (req: AuthenticatedRequest, res: Response, next: NextFunction): Promise<void> => {
        const { teams } = req.body;

        const result = z.array(TeamDivisionSchema).safeParse(teams);
        if (!result.success) {
            res.status(400).json({ error: result.error.errors });
            return;
        }

        req.body.teams = result.data;
        next();
    }
);

/*
* Check if the parameter teams conforms to the IdentifiableTeamDivision interface
* An IdentifiableTeamDivision is the same as a TeamDivision but with a ID for the team
* The reason for these interfaces is that when you are creating a team for the first time, it does not yet have
* an ID. Meaning that when you are creating, TeamDivision is all the info you need.
* On an update however, you need to somehow find the team, which is why IdentifiableTeamDivision exists.
* */
export const ensureTeamParamValidIdentifiableTeamDivision = asyncHandler(
    async (req: AuthenticatedRequest, res: Response, next: NextFunction): Promise<void> => {
        const { teams } = req.body;

        const result = z.array(IdentifiableTeamDivisionSchema).safeParse(teams);
        if (!result.success) {
            res.status(400).json({ error: result.error.errors });
            return;
        }

        req.body.teams = result.data;
        next();
    }
);


===== Bestand: ../dwengo_backend/routes/teacher/teacherSubmissionRoute.ts =====
import express, {Router} from "express";
import controller from "../../controllers/teacher/teacherSubmissionController";
import {protectTeacher} from "../../middleware/teacherAuthMiddleware";

const router: Router = express.Router();

router.use(protectTeacher);

router.get('/student/:studentId', controller.getSubmissionsForStudent);
router.get('/team/:teamId', controller.getSubmissionsForTeam);

router.get('/assignment/:assignmentId/student/:studentId', controller.getAssignmentSubmissionsForStudent);
router.get('/assignment/:assignmentId/team/:teamId', controller.getAssignmentSubmissionsForTeam);


export default router;


===== Bestand: ../dwengo_backend/routes/teacher/teacherLocalLearningPathNodesRoutes.ts =====
import { Router } from "express";
import { protectTeacher } from "../../middleware/teacherAuthMiddleware";
import {
  getNodesForPath,
  createNodeForPath,
  updateNodeForPath,
  deleteNodeFromPath,
} from "../../controllers/teacher/teacherLocalLearningPathNodesController";

const router = Router();
router.use(protectTeacher);

/**
 * GET /teacher/learningPaths/:pathId/nodes
 *   -> haal alle nodes op voor dat leerpad
 */
router.get("/:pathId/nodes", getNodesForPath);

/**
 * POST /teacher/learningPaths/:pathId/nodes
 *   -> maak een nieuwe node in dit leerpad
 */
router.post("/:pathId/nodes", createNodeForPath);

/**
 * PATCH /teacher/learningPaths/:pathId/nodes/:nodeId
 *   -> update de node
 */
router.patch("/:pathId/nodes/:nodeId", updateNodeForPath);

/**
 * DELETE /teacher/learningPaths/:pathId/nodes/:nodeId
 *   -> verwijder de node
 */
router.delete("/:pathId/nodes/:nodeId", deleteNodeFromPath);

export default router;


===== Bestand: ../dwengo_backend/routes/teacher/teacherAssignmentRoutes.ts =====
import express, {Router} from 'express';
import { AssignmentTeacherController } from "../../controllers/teacher/teacherAssignmentController";
import {protectTeacher} from "../../middleware/teacherAuthMiddleware";

const router: Router = express.Router();
const controller = new AssignmentTeacherController();

router.post("/", protectTeacher, controller.createAssignmentForClass);
router.get("/class/:classId", protectTeacher, controller.getAssignmentsByClass);
router.patch("/:assignmentId", protectTeacher, controller.updateAssignment);
router.delete("/:assignmentId", protectTeacher, controller.deleteAssignment);

export default router;


===== Bestand: ../dwengo_backend/routes/teacher/feedbackRoutes.ts =====
import express, {Router} from "express";
import controller from "../../controllers/teacher/feedbackController";
import {protectTeacher} from "../../middleware/teacherAuthMiddleware";

const router: Router = express.Router();

// Route prefix: "/teacher/feedback"
router.get('/assignment/:assignmentId/evaluation/:evaluationId', protectTeacher, controller.getAllFeedbackForEvaluation);
router.get('/submission/:submissionId', protectTeacher, controller.getFeedbackForSubmission);
router.patch('/submission/:submissionId', protectTeacher, controller.updateFeedbackForSubmission);
router.delete('/submission/:submissionId', protectTeacher, controller.deleteFeedbackForSubmission);

router.post('/submission/:submissionId', protectTeacher, controller.createFeedback);


export default router;


===== Bestand: ../dwengo_backend/routes/teacher/teacherClassRoutes.ts =====
import express from "express";
import { protectTeacher } from "../../middleware/teacherAuthMiddleware";
import {
  createClassroom,
  deleteClassroom,
  getJoinLink,
  regenerateJoinLink,
  getClassroomStudents,
  getAllClassrooms,
  getClassByIdAndTeacherId,
} from "../../controllers/teacher/teacherClassController";
import {
  createInvite,
  getPendingInvitesForClass,
  getPendingInvitesForTeacher,
  updateInviteStatus,
  deleteInvite,
} from "../../controllers/teacher/inviteController";
import {
  getJoinRequestsByClass,
  updateJoinRequestStatus,
} from "../../controllers/joinrequest/joinRequestController";
import { validateRequest } from "../../middleware/validateRequest";
import {
  createInviteBodySchema,
  createInviteParamsSchema,
  deleteInviteParamsSchema,
  getClassInvitesParamsSchema,
  updateInviteBodySchema,
  updateInviteParamsSchema,
} from "../../zodSchemas/inviteSchemas";
const router = express.Router();

// Alleen leerkrachten mogen deze routes gebruiken
router.use(protectTeacher);

// routes for classes
router.get("/", protectTeacher, getAllClassrooms);
router.post("/", protectTeacher, createClassroom);
router.delete("/:classId", protectTeacher, deleteClassroom);
router.get("/:classId", protectTeacher, getClassByIdAndTeacherId);
router.get("/:classId/join-link", protectTeacher, getJoinLink);
router.post(
  "/:classId/regenerate-join-link",
  protectTeacher,
  regenerateJoinLink
);
router.get("/:classId/students", protectTeacher, getClassroomStudents);

// routes for invites
router.post(
  "/:classId/invites",
  validateRequest(
    "invalid request for invite creation",
    createInviteBodySchema,
    createInviteParamsSchema
  ),
  createInvite
);
router.get(
  "/:classId/invites",
  validateRequest(
    "invalid request params",
    undefined,
    getClassInvitesParamsSchema
  ),
  getPendingInvitesForClass
);
router.delete(
  "/:classId/invites/:inviteId",
  validateRequest(
    "invalid request params",
    undefined,
    deleteInviteParamsSchema
  ),
  deleteInvite
);
router.patch(
  "/invites/:inviteId",
  validateRequest(
    "invalid request for invite update",
    updateInviteBodySchema,
    updateInviteParamsSchema
  ),
  updateInviteStatus
);
router.get("/invites", getPendingInvitesForTeacher);

// routes for invites
router.post(
  "/:classId/invites",
  validateRequest(
    "invalid request for invite creation",
    createInviteBodySchema,
    createInviteParamsSchema
  ),
  createInvite
);
router.get(
  "/:classId/invites",
  validateRequest(
    "invalid request params",
    undefined,
    getClassInvitesParamsSchema
  ),
  getPendingInvitesForClass
);
router.delete(
  "/:classId/invites/:inviteId",
  validateRequest(
    "invalid request params",
    undefined,
    deleteInviteParamsSchema
  ),
  deleteInvite
);
router.patch(
  "/invites/:inviteId",
  validateRequest(
    "invalid request for invite update",
    updateInviteBodySchema,
    updateInviteParamsSchema
  ),
  updateInviteStatus
);
router.get("/invites", getPendingInvitesForTeacher);
router.patch("/invites/:inviteId", updateInviteStatus);

// routes for join requests
router.get("/:classId/join-requests", getJoinRequestsByClass);
router.patch("/:classId/join-requests/:requestId", updateJoinRequestStatus);

export default router;


===== Bestand: ../dwengo_backend/routes/teacher/teacherLocalLearningObjectRoutes.ts =====
import express from "express";
import {
  createLocalLearningObject,
  getLocalLearningObjects,
  getLocalLearningObjectById,
  updateLocalLearningObject,
  deleteLocalLearningObject,
} from "../../controllers/teacher/teacherLocalLearningObjectController";
import { protectTeacher } from "../../middleware/teacherAuthMiddleware";

const router = express.Router();

// Alle routes hier alleen toegankelijk voor geauthenticeerde teachers
router.use(protectTeacher);

/**
 * POST /teacher/learningObjects -> nieuw leerobject aanmaken
 * GET  /teacher/learningObjects -> alle leerobjecten van deze teacher
 */
router
  .route("/")
  .post(createLocalLearningObject)
  .get(getLocalLearningObjects);

/**
 * GET    /teacher/learningObjects/:id -> 1 leerobject ophalen
 * PATCh   /teacher/learningObjects/:id -> updaten (gedeeltelijk)
 * DELETE /teacher/learningObjects/:id -> verwijderen
 */
router
  .route("/:id")
  .get(getLocalLearningObjectById)
  .patch(updateLocalLearningObject)
  .delete(deleteLocalLearningObject);

export default router;


===== Bestand: ../dwengo_backend/routes/teacher/teacherAuthRoutes.ts =====
import express, {Router} from 'express';
import { loginTeacher } from '../../controllers/teacher/teacherAuthController';
import { registerTeacher } from "../../controllers/userController";

const router: Router = express.Router();

// Route voor registratie van een leerkracht
router.post("/register", registerTeacher);

// Route voor inloggen van een leerkracht
router.post("/login", loginTeacher);

export default router;



===== Bestand: ../dwengo_backend/routes/teacher/teacherTeamsRoutes.ts =====
import express, { Router } from "express";
import {
  createTeamInAssignment,
  getTeamsInAssignment,
  updateTeamsInAssignment,
  deleteTeamInAssignment,
} from "../../controllers/teacher/teacherTeamsController";
import {
  makeAssignmentIdParamValid,
  makeTeamIdParamValid,
  ensureTeamsParamValidTeamDivision,
  ensureTeamParamValidIdentifiableTeamDivision,
} from "../../middleware/teamValidationMiddleware";
import { protectTeacher } from "../../middleware/teacherAuthMiddleware";

const router: Router = express.Router();

// Prefix voor deze routes:
// "/teacher/assignments/:assignmentId/team"

// Route to create teams in an assignment
router.post(
  "/class/:classId",
  protectTeacher,
  makeAssignmentIdParamValid,
  ensureTeamsParamValidTeamDivision,
  createTeamInAssignment
);

// Route to get all teams in an assignment
router.get(
  "/",
  protectTeacher,
  makeAssignmentIdParamValid,
  getTeamsInAssignment
);

// Route to update teams in an assignment
router.patch(
  "/",
  protectTeacher,
  makeAssignmentIdParamValid,
  ensureTeamParamValidIdentifiableTeamDivision,
  updateTeamsInAssignment
);

// Route to delete a team in an assignment
router.delete(
  "/:teamId",
  protectTeacher,
  makeTeamIdParamValid,
  deleteTeamInAssignment
);

export default router;


===== Bestand: ../dwengo_backend/routes/teacher/teacherLocalLearningPathRoutes.ts =====
import { Router } from "express";
import { protectTeacher } from "../../middleware/teacherAuthMiddleware";
import {
  createLocalLearningPath,
  getLocalLearningPaths,
  getLocalLearningPathById,
  updateLocalLearningPath,
  deleteLocalLearningPath,
} from "../../controllers/teacher/teacherLocalLearningPathController";

const router = Router();

// Zorg dat alleen ingelogde gebruikers (teachers/admin) toegang hebben
router.use(protectTeacher);

/**
 * POST /teacher/learningPaths
 *   -> maak een nieuw leerpad aan (standaard zonder nodes)
 */
router.post("/", createLocalLearningPath);

/**
 * GET /teacher/learningPaths
 *   -> haal alle leerpaden op van de ingelogde teacher
 */
router.get("/", getLocalLearningPaths);

/**
 * GET /teacher/learningPaths/:pathId
 *   -> haal Ã©Ã©n leerpad op (mits je eigenaar bent)
 */
router.get("/:pathId", getLocalLearningPathById);

/**
 * PATCH /teacher/learningPaths/:pathId
 *   -> update een leerpad
 */
router.patch("/:pathId", updateLocalLearningPath);

/**
 * DELETE /teacher/learningPaths/:pathId
 *   -> verwijder een leerpad
 */
router.delete("/:pathId", deleteLocalLearningPath);

export default router;


===== Bestand: ../dwengo_backend/routes/learningPath/learningPathRoutes.ts =====
import express, { Router } from "express";
import { 
  searchLearningPathsController, 
  getLearningPathByIdController 
} from "../../controllers/learningPath/learningPathController";
import { protectAnyUser } from "../../middleware/authAnyUserMiddleware";

const router: Router = express.Router();

// Bescherm alle endpoints zodat een user (met role) aanwezig is.
router.use(protectAnyUser);

// GET /learningPaths?language=nl&hruid=...&title=...&description=...&all=
router.get("/", searchLearningPathsController);

// GET /learningPaths/:pathId
router.get("/:pathId", getLearningPathByIdController);

export default router;


===== Bestand: ../dwengo_backend/routes/question/questionRoutes.ts =====

import express from "express";
import {
  createQuestionGeneral,
  createQuestionSpecific,
  createQuestionMessage,
  updateQuestion,
  updateQuestionMessage,
  getQuestion,
  getQuestionsTeam,
  getQuestionsClass,
  getQuestionsAssignment,
  getQuestionMessages,
  deleteQuestion,
  deleteQuestionMessage
} from "../../controllers/question/questionController";

import { protectAnyUser } from "../../middleware/authAnyUserMiddleware";
import {
  authorizeQuestion,
  authorizeMessageUpdate,
  authorizeMessageDelete,
  authorizeQuestionUpdate
} from "../../middleware/questionsAuthMiddleware";

const router = express.Router();

// Gebruiker moet ingelogd zijn
router.use(protectAnyUser);

// CREATE SPECIFIC question
router.post("/specific/assignment/:assignmentId", createQuestionSpecific);

// CREATE GENERAL question
router.post("/general/assignment/:assignmentId", createQuestionGeneral);

// CREATE message
router.post("/:questionId/message", authorizeQuestion, createQuestionMessage);

// UPDATE question (titel)
router.patch("/:questionId", authorizeQuestionUpdate, updateQuestion);
// UPDATE message
router.patch("/:questionId/message/:questionMessageId", authorizeMessageUpdate, updateQuestionMessage);

// GET question
router.get("/:questionId", authorizeQuestion, getQuestion);

// GET messages
router.get("/:questionId/messages", authorizeQuestion, getQuestionMessages);

// GET questions by team
router.get("/team/:teamId", getQuestionsTeam);

// GET questions by class
router.get("/class/:classId", getQuestionsClass);

// GET questions for assignment + class
router.get("/assignment/:assignmentId/class/:classId", getQuestionsAssignment);

// DELETE question
router.delete("/:questionId", authorizeQuestion, deleteQuestion);

// DELETE message
router.delete("/:questionId/message/:questionMessageId", authorizeMessageDelete, deleteQuestionMessage);

export default router;


===== Bestand: ../dwengo_backend/routes/progressRoutes.ts =====
import express, { Router } from "express";
import {
  createProgress,
  getStudentProgress,
  updateProgress,
  getTeamProgressStudent,
  getStudentAssignmentProgress,
  getTeamProgressTeacher,
  getAssignmentAverageProgress, getStudentLearningPathProgress,
} from "../controllers/progressController";
import { protectStudent } from "../middleware/studentAuthMiddleware";
import { protectTeacher } from "../middleware/teacherAuthMiddleware";

const router: Router = express.Router();

/**
 * ===========================
 *          STUDENT
 * ===========================
 */

/**
 * @route   POST /progress/student/:learningObjectId
 * @desc    Een nieuwe progressie aanmaken voor een student bij een leerobject.
 *          Dit wordt gebruikt wanneer een student een nieuw leerobject start.
 * @access  Protected
 */
router.post("/student/:learningObjectId", protectStudent, createProgress);

/**
 * @route   GET /progress/student/:learningObjectId
 * @desc    Haal de huidige progressie op van een student voor een specifiek leerobject.
 *          Dit toont of de student het leerobject heeft voltooid of niet.
 * @access  Protected
 */
router.get("/student/:learningObjectId", protectStudent, getStudentProgress);

/**
 * @route   PATCH /progress/student/:learningObjectId
 * @desc    Werk de progressie van een student bij voor een leerobject.
 *          Bijvoorbeeld: markeer een leerobject als voltooid.
 * @access  Protected
 */
router.patch("/student/:learningObjectId", protectStudent, updateProgress);

/**
 * @route   GET /progress/student/:teamid
 * @desc    Haal de voortgang van een team op voor een specifieke opdracht.
 *          Dit betekent dat je de progressie van alle teamleden bekijkt en bepaalt
 *          wat de verste vooruitgang is die iemand binnen het team heeft bereikt. 
 *          Geeft een percentage terug van het verste dat iemand binnen een team is geraakt.
 *          Je rekent het percentage uit van het verste leerobject dat is bereikt binnen het leerpad van alle leerobjecten binnen dat leerpad
 * @access  Protected
 */
router.get("/student/:teamid", protectStudent, getTeamProgressStudent);

/**
 * @route   GET /progress/student/assignment/:assignmentId
 * @desc    Haal de voortgang op van de student bij een specifieke opdracht.
 *          Dit toont hoe ver de student zelf is gekomen in het leerpad van deze opdracht.
 *          Geeft een percentage terug van hoeveel leerobjecten binnen het leerpad de student heeft voltooid.
 * @access  Protected
 */
router.get("/student/assignment/:assignmentId", protectStudent, getStudentAssignmentProgress);

/**
 * @route   PATCH /progress/student/:learningPathId
 * @desc    Haal de voortgang op van de student bij een specifiek leerpad.
 *          Dit toont hoe ver de student zelf is gekomen in het leerpad.
 *          Geeft een percentage terug van hoeveel leerobjecten binnen het leerpad de student heeft voltooid.
 * @access  Protected
 */
router.get("/student/:learningPathId/", protectStudent, getStudentLearningPathProgress);
/**
 * ===========================
 *          TEACHER
 * ===========================
 */

/**
 * @route   GET /progress/teacher/:teamid
 * @desc    Haal de voortgang van een team op voor een specifieke opdracht.
 *          Dit betekent dat je de progressie van alle teamleden bekijkt en bepaalt
 *          wat de verste vooruitgang is die iemand binnen het team heeft bereikt. 
 *          Geeft een percentage terug van het verste dat iemand binnen een team is geraakt.
 *          Je rekent het percentage uit van het verste leerobject dat is bereikt binnen het leerpad van alle leerobjecten binnen dat leerpad
 * @access  Protected
 */
router.get("/teacher/:teamid", protectTeacher, getTeamProgressTeacher);

/**
 * @route   GET /progress/teacher/:assignmentId/average
 * @desc    Bereken de gemiddelde voortgang van een klas bij een opdracht.
 *          De verste vooruitgang van elk team of student wordt verzameld en
 *          er wordt een gemiddelde berekend.
 * @access  Protected
 */
router.get("/teacher/:assignmentId/average", protectTeacher, getAssignmentAverageProgress);

export default router;


===== Bestand: ../dwengo_backend/routes/student/studentSubmissionRoute.ts =====
import express, {Router} from "express";
import controller from "../../controllers/student/studentSubmissionController";
import {protectStudent} from "../../middleware/studentAuthMiddleware";

const router: Router = express.Router();

router.use(protectStudent);

router.get('/assignment/:assignmentId/', controller.getSubmissionsForAssignment)

router.post('/assignment/:assignmentId/evaluation/:evaluationId', controller.createSubmission)
router.get('/assignment/:assignmentId/evaluation/:evaluationId', controller.getSubmissionsForEvaluation)

export default router;


===== Bestand: ../dwengo_backend/routes/student/studentClassRoutes.ts =====
import express from "express";
import { protectStudent } from "../../middleware/studentAuthMiddleware";
import { createJoinRequest } from "../../controllers/joinrequest/joinRequestController";
import { getStudentClasses } from "../../controllers/student/studentClassController";

const router = express.Router();

// Alleen studenten mogen deze route gebruiken
router.use(protectStudent);

router.post("/join", createJoinRequest);
router.get("/", getStudentClasses);

export default router;


===== Bestand: ../dwengo_backend/routes/student/studentTeamRoutes.ts =====
import express, { Router } from "express";
import { 
    getStudentTeams, 
    getTeamByAssignment, 
    getTeamMembers 
} from "../../controllers/student/studentTeamController";
import { protectStudent } from "../../middleware/studentAuthMiddleware";

const router: Router = express.Router();

// Haal alle teams op waarin de ingelogde student zit
router.get("/", protectStudent, getStudentTeams);

// Haal een specifiek team op aan de hand van assignmentId
router.get("/:assignmentId", protectStudent, getTeamByAssignment);

// Haal alle teamleden op van een specifiek team
router.get("/:teamId/members", protectStudent, getTeamMembers);

export default router;


===== Bestand: ../dwengo_backend/routes/student/studentAssignmentRoutes.ts =====
import express, { Router } from "express";
import { getStudentAssignments } from "../../controllers/student/studentAssignmentController";
import { protectStudent } from "../../middleware/studentAuthMiddleware";

const router: Router = express.Router();

router.get("/", protectStudent, getStudentAssignments);

export default router;


===== Bestand: ../dwengo_backend/routes/student/studentAuthRoutes.ts =====
import express, {Router} from 'express';
import { loginStudent } from '../../controllers/student/studentAuthController';
import { registerStudent } from '../../controllers/userController';

const router: Router = express.Router();

// Registreren van een leerling
router.post("/register", registerStudent);

// Inloggen van een leerling
router.post("/login", loginStudent);

export default router;



===== Bestand: ../dwengo_backend/routes/assignmentRoutes.ts =====
import express, {Router} from 'express';
import {AssignmentController} from "../controllers/assignmentController";

const router: Router = express.Router();
const controller = new AssignmentController();

// Geen protectTeacher nodig want teacherId is niet verwacht, iedereen mag de assignments opvragen
router.get("/:assignmentId", controller.getAssignmentsById);

export default router;


===== Bestand: ../dwengo_backend/routes/learningObject/learningObjectRoutes.ts =====
import express from "express";
import {
  getAllLearningObjectsController,
  getLearningObjectController,
  searchLearningObjectsController,
  getLearningObjectsForPathController,
  // [NIEUW] importeer de extra controller-functie:
  getLearningObjectByHruidLangVersionController,
} from "../../controllers/learningObject/learningObjectController";
import { protectAnyUser } from "../../middleware/authAnyUserMiddleware";

const router = express.Router();

// Bescherm alle endpoints, user moet ingelogd zijn (student/teacher/admin)
router.use(protectAnyUser);

router.get("/", getAllLearningObjectsController);
router.get("/search", searchLearningObjectsController);
router.get("/path/:pathId", getLearningObjectsForPathController);
// [NIEUW] Extra endpoint om op hruid+language+version te zoeken
// Voorbeeld:
//   GET /learningObjects/lookup?hruid=opdracht_leds&language=nl&version=2
router.get("/lookup", getLearningObjectByHruidLangVersionController);

router.get("/:id", getLearningObjectController);



export default router;


===== Bestand: ../dwengo_backend/zodSchemas/inviteSchemas.ts =====
import { z } from "zod";

/**
 * schemas for invite creation route (POST /teacher/classes/:classId/invites)
 */
export const createInviteBodySchema = z.object({
  otherTeacherId: z.number().int().positive(),
});
export const createInviteParamsSchema = z.object({
  classId: z.coerce
    .number({ message: "classId should be a number" })
    .int({ message: "classId should be an integer" })
    .positive({ message: "classId should be a positive integer" }),
});

/**
 * schema for get invites for a class route (GET /teacher/classes/:classId/invites)
 */
export const getClassInvitesParamsSchema = createInviteParamsSchema; // also just classId

/**
 * schemas for update invite route (PATCH /teacher/classes/invites/:inviteId)
 */
export const updateInviteBodySchema = z.object({
  action: z.enum(["accept", "decline"]),
});
export const updateInviteParamsSchema = z.object({
  inviteId: z.coerce
    .number({ message: "inviteId should be a number" })
    .int({ message: "inviteId should be an integer" })
    .positive({ message: "inviteId should be a positive integer" }),
});

/**
 * schema for delete invite route (DELETE /teacher/classes/:classId/invites/:inviteId)
 */
export const deleteInviteParamsSchema = createInviteParamsSchema.merge(
  updateInviteParamsSchema
); // classId and inviteId


===== Bestand: ../dwengo_backend/coverage/prettify.css =====
.pln{color:#000}@media screen{.str{color:#080}.kwd{color:#008}.com{color:#800}.typ{color:#606}.lit{color:#066}.pun,.opn,.clo{color:#660}.tag{color:#008}.atn{color:#606}.atv{color:#080}.dec,.var{color:#606}.fun{color:red}}@media print,projection{.str{color:#060}.kwd{color:#006;font-weight:bold}.com{color:#600;font-style:italic}.typ{color:#404;font-weight:bold}.lit{color:#044}.pun,.opn,.clo{color:#440}.tag{color:#006;font-weight:bold}.atn{color:#404}.atv{color:#060}}pre.prettyprint{padding:2px;border:1px solid #888}ol.linenums{margin-top:0;margin-bottom:0}li.L0,li.L1,li.L2,li.L3,li.L5,li.L6,li.L7,li.L8{list-style-type:none}li.L1,li.L3,li.L5,li.L7,li.L9{background:#eee}


===== Bestand: ../dwengo_backend/coverage/block-navigation.js =====
/* eslint-disable */
var jumpToCode = (function init() {
    // Classes of code we would like to highlight in the file view
    var missingCoverageClasses = ['.cbranch-no', '.cstat-no', '.fstat-no'];

    // Elements to highlight in the file listing view
    var fileListingElements = ['td.pct.low'];

    // We don't want to select elements that are direct descendants of another match
    var notSelector = ':not(' + missingCoverageClasses.join('):not(') + ') > '; // becomes `:not(a):not(b) > `

    // Selecter that finds elements on the page to which we can jump
    var selector =
        fileListingElements.join(', ') +
        ', ' +
        notSelector +
        missingCoverageClasses.join(', ' + notSelector); // becomes `:not(a):not(b) > a, :not(a):not(b) > b`

    // The NodeList of matching elements
    var missingCoverageElements = document.querySelectorAll(selector);

    var currentIndex;

    function toggleClass(index) {
        missingCoverageElements
            .item(currentIndex)
            .classList.remove('highlighted');
        missingCoverageElements.item(index).classList.add('highlighted');
    }

    function makeCurrent(index) {
        toggleClass(index);
        currentIndex = index;
        missingCoverageElements.item(index).scrollIntoView({
            behavior: 'smooth',
            block: 'center',
            inline: 'center'
        });
    }

    function goToPrevious() {
        var nextIndex = 0;
        if (typeof currentIndex !== 'number' || currentIndex === 0) {
            nextIndex = missingCoverageElements.length - 1;
        } else if (missingCoverageElements.length > 1) {
            nextIndex = currentIndex - 1;
        }

        makeCurrent(nextIndex);
    }

    function goToNext() {
        var nextIndex = 0;

        if (
            typeof currentIndex === 'number' &&
            currentIndex < missingCoverageElements.length - 1
        ) {
            nextIndex = currentIndex + 1;
        }

        makeCurrent(nextIndex);
    }

    return function jump(event) {
        if (
            document.getElementById('fileSearch') === document.activeElement &&
            document.activeElement != null
        ) {
            // if we're currently focused on the search input, we don't want to navigate
            return;
        }

        switch (event.which) {
            case 78: // n
            case 74: // j
                goToNext();
                break;
            case 66: // b
            case 75: // k
            case 80: // p
                goToPrevious();
                break;
        }
    };
})();
window.addEventListener('keydown', jumpToCode);


===== Bestand: ../dwengo_backend/coverage/favicon.png =====
ï¿½PNG

   
IHDR         ï¿½ï¿½h6  ï¿½IDATxï¿½ï¿½ï¿½Aï¿½pfTï¿½6ï¿½ï¿½vï¿½ï¿½qï¿½8Uï¿½ï¿½ï¿½F\Û¶m[ï¿½ï¿½ï¿½:ï¿½C\ï¿½ï¿½Dï¿½,ï¿½yï¿½ï¿½ï¿½/ bï¿½LIï¿½B>s1ï¿½/8z: oï¿½K.\ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½I>|Ê¯ï¿½ï¿½Oï¿½bï¿½'ï¿½ï¿½ï¿½+ï¿½ï¿½ .W"!~ï¿½ï¿½Pï¿½ï¿½ï¿½ï¿½ï¿½ï¿½J	ï¿½ï¿½Iï¿½ï¿½Iï¿½ï¿½hï¿½ï¿½3ï¿½^ï¿½rsï¿½{ï¿½3pï¿½3ï¿½ï¿½ï¿½Ö½ï¿½ï¿½-ï¿½ï¿½ï¿½>!ï¿½ï¿½+ï¿½rï¿½Ãï¿½Mï¿½ï¿½-\ï¿½ï¿½t=ï¿½w4Þ¾&ï¿½DÍï¿½aï¿½ï¿½ï¿½ï¿½ï¿½ï¿½%ë¼UÕ¼ï¿½*;Jï¿½ï¿½gï¿½ï¿½ï¿½fzï¿½ï¿½kï¿½ Kï¿½JMZï¿½ï¿½ï¿½ï¿½}ï¿½%2ï¿½Qï¿½ï¿½ï¿½ï¿½Uï¿½Xï¿½liEï¿½!ï¿½ï¿½dï¿½Pï¿½ï¿½h\Oï¿½Iï¿½ï¿½ï¿½>ï¿½ï¿½fJï¿½ï¿½Oiï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½( B|uï¿½`iï¿½zï¿½ï¿½|ï¿½ï¿½ï¿½ï¿½!fDï¿½PVï¿½ï¿½"%ï¿½ï¿½ï¿½ï¿½kI"ï¿½ï¿½gï¿½ï¿½%ï¿½ï¿½ï¿½ ï¿½ï¿½ï¿½ï¿½hï¿½Hï¿½cï¿½Q`Fï¿½ï¿½ï¿½;ï¿½ï¿½ ?ï¿½ï¿½E    IENDï¿½B`ï¿½

===== Bestand: ../dwengo_backend/coverage/coverage-final.json =====
{"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/index.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/index.ts","all":false,"statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":74}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":28}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":56}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":67}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":67}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":80}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":62}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":74}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":97}},"10":{"start":{"line":11,"column":0},"end":{"line":11,"column":57}},"11":{"start":{"line":12,"column":0},"end":{"line":12,"column":79}},"12":{"start":{"line":13,"column":0},"end":{"line":13,"column":67}},"13":{"start":{"line":14,"column":0},"end":{"line":14,"column":53}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":69}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":79}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":61}},"17":{"start":{"line":18,"column":0},"end":{"line":18,"column":69}},"18":{"start":{"line":19,"column":0},"end":{"line":19,"column":77}},"19":{"start":{"line":20,"column":0},"end":{"line":20,"column":77}},"20":{"start":{"line":21,"column":0},"end":{"line":21,"column":93}},"21":{"start":{"line":22,"column":0},"end":{"line":22,"column":103}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":43}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":26}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":69}},"27":{"start":{"line":28,"column":0},"end":{"line":28,"column":16}},"29":{"start":{"line":30,"column":0},"end":{"line":30,"column":31}},"30":{"start":{"line":31,"column":0},"end":{"line":31,"column":60}},"33":{"start":{"line":34,"column":0},"end":{"line":34,"column":68}},"34":{"start":{"line":35,"column":0},"end":{"line":35,"column":36}},"35":{"start":{"line":36,"column":0},"end":{"line":36,"column":25}},"36":{"start":{"line":37,"column":0},"end":{"line":37,"column":28}},"37":{"start":{"line":38,"column":0},"end":{"line":38,"column":4}},"38":{"start":{"line":39,"column":0},"end":{"line":39,"column":56}},"39":{"start":{"line":40,"column":0},"end":{"line":40,"column":50}},"40":{"start":{"line":41,"column":0},"end":{"line":41,"column":57}},"41":{"start":{"line":42,"column":0},"end":{"line":42,"column":3}},"42":{"start":{"line":43,"column":0},"end":{"line":43,"column":16}},"43":{"start":{"line":44,"column":0},"end":{"line":44,"column":35}},"44":{"start":{"line":45,"column":0},"end":{"line":45,"column":37}},"45":{"start":{"line":46,"column":0},"end":{"line":46,"column":4}},"46":{"start":{"line":47,"column":0},"end":{"line":47,"column":16}},"47":{"start":{"line":48,"column":0},"end":{"line":48,"column":35}},"48":{"start":{"line":49,"column":0},"end":{"line":49,"column":51}},"49":{"start":{"line":50,"column":0},"end":{"line":50,"column":4}},"50":{"start":{"line":51,"column":0},"end":{"line":51,"column":9}},"51":{"start":{"line":52,"column":0},"end":{"line":52,"column":3}},"53":{"start":{"line":54,"column":0},"end":{"line":54,"column":32}},"54":{"start":{"line":55,"column":0},"end":{"line":55,"column":22}},"55":{"start":{"line":56,"column":0},"end":{"line":56,"column":3}},"58":{"start":{"line":59,"column":0},"end":{"line":59,"column":24}},"61":{"start":{"line":62,"column":0},"end":{"line":62,"column":48}},"64":{"start":{"line":65,"column":0},"end":{"line":65,"column":48}},"67":{"start":{"line":68,"column":0},"end":{"line":68,"column":44}},"68":{"start":{"line":69,"column":0},"end":{"line":69,"column":70}},"69":{"start":{"line":70,"column":0},"end":{"line":70,"column":66}},"70":{"start":{"line":71,"column":0},"end":{"line":71,"column":71}},"73":{"start":{"line":74,"column":0},"end":{"line":74,"column":71}},"76":{"start":{"line":77,"column":0},"end":{"line":77,"column":44}},"79":{"start":{"line":80,"column":0},"end":{"line":80,"column":42}},"82":{"start":{"line":83,"column":0},"end":{"line":83,"column":57}},"84":{"start":{"line":85,"column":0},"end":{"line":85,"column":57}},"87":{"start":{"line":88,"column":0},"end":{"line":88,"column":45}},"90":{"start":{"line":91,"column":0},"end":{"line":91,"column":50}},"92":{"start":{"line":93,"column":0},"end":{"line":93,"column":37}},"94":{"start":{"line":95,"column":0},"end":{"line":95,"column":46}},"96":{"start":{"line":97,"column":0},"end":{"line":97,"column":45}},"98":{"start":{"line":99,"column":0},"end":{"line":99,"column":37}},"99":{"start":{"line":100,"column":0},"end":{"line":100,"column":72}},"102":{"start":{"line":103,"column":0},"end":{"line":103,"column":56}},"103":{"start":{"line":104,"column":0},"end":{"line":104,"column":56}},"106":{"start":{"line":107,"column":0},"end":{"line":107,"column":22}},"108":{"start":{"line":109,"column":0},"end":{"line":109,"column":38}},"109":{"start":{"line":110,"column":0},"end":{"line":110,"column":36}},"110":{"start":{"line":111,"column":0},"end":{"line":111,"column":57}},"111":{"start":{"line":112,"column":0},"end":{"line":112,"column":78}},"112":{"start":{"line":113,"column":0},"end":{"line":113,"column":1}},"114":{"start":{"line":115,"column":0},"end":{"line":115,"column":19}}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"23":1,"24":1,"25":1,"27":1,"29":1,"30":1,"33":1,"34":94,"35":94,"36":94,"37":94,"38":94,"39":94,"40":0,"41":0,"42":94,"43":94,"44":94,"45":94,"46":94,"47":94,"48":94,"49":94,"50":94,"51":94,"53":1,"54":0,"55":0,"58":1,"61":1,"64":1,"67":1,"68":1,"69":1,"70":1,"73":1,"76":1,"79":1,"82":1,"84":1,"87":1,"90":1,"92":1,"94":1,"96":1,"98":1,"99":1,"102":1,"103":1,"106":1,"108":1,"109":0,"110":0,"111":0,"112":0,"114":1},"branchMap":{"0":{"type":"branch","line":109,"loc":{"start":{"line":109,"column":37},"end":{"line":113,"column":1}},"locations":[{"start":{"line":109,"column":37},"end":{"line":113,"column":1}}]},"1":{"type":"branch","line":34,"loc":{"start":{"line":34,"column":8},"end":{"line":52,"column":3}},"locations":[{"start":{"line":34,"column":8},"end":{"line":52,"column":3}}]},"2":{"type":"branch","line":40,"loc":{"start":{"line":40,"column":6},"end":{"line":40,"column":49}},"locations":[{"start":{"line":40,"column":6},"end":{"line":40,"column":49}}]},"3":{"type":"branch","line":40,"loc":{"start":{"line":40,"column":49},"end":{"line":42,"column":3}},"locations":[{"start":{"line":40,"column":49},"end":{"line":42,"column":3}}]}},"b":{"0":[0],"1":[94],"2":[0],"3":[0]},"fnMap":{},"f":{}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/config/dwengoAPI.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/config/dwengoAPI.ts","all":false,"statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":45}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":54}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":71}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":12}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":39}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":31}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":4}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":16}},"9":{"start":{"line":10,"column":0},"end":{"line":10,"column":3}}},"s":{"0":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1},"branchMap":{},"b":{},"fnMap":{},"f":{}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/assignmentController.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/assignmentController.ts","all":false,"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":35}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":72}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":9}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":81}},"9":{"start":{"line":10,"column":0},"end":{"line":10,"column":65}},"10":{"start":{"line":11,"column":0},"end":{"line":11,"column":15}},"11":{"start":{"line":12,"column":0},"end":{"line":12,"column":7}},"13":{"start":{"line":14,"column":0},"end":{"line":14,"column":69}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":100}},"19":{"start":{"line":20,"column":0},"end":{"line":20,"column":24}},"20":{"start":{"line":21,"column":0},"end":{"line":21,"column":64}},"21":{"start":{"line":22,"column":0},"end":{"line":22,"column":15}},"22":{"start":{"line":23,"column":0},"end":{"line":23,"column":7}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":39}},"27":{"start":{"line":28,"column":0},"end":{"line":28,"column":21}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":71}},"29":{"start":{"line":30,"column":0},"end":{"line":30,"column":5}},"30":{"start":{"line":31,"column":0},"end":{"line":31,"column":3}},"31":{"start":{"line":32,"column":0},"end":{"line":32,"column":1}}},"s":{"1":1,"4":1,"5":1,"6":1,"8":1,"9":0,"10":0,"11":0,"13":1,"16":1,"19":1,"20":1,"21":1,"22":1,"25":0,"27":0,"28":0,"29":0,"30":1,"31":1},"branchMap":{"0":{"type":"branch","line":6,"loc":{"start":{"line":6,"column":2},"end":{"line":31,"column":3}},"locations":[{"start":{"line":6,"column":2},"end":{"line":31,"column":3}}]},"1":{"type":"branch","line":9,"loc":{"start":{"line":9,"column":80},"end":{"line":12,"column":7}},"locations":[{"start":{"line":9,"column":80},"end":{"line":12,"column":7}}]},"2":{"type":"branch","line":23,"loc":{"start":{"line":23,"column":6},"end":{"line":30,"column":5}},"locations":[{"start":{"line":23,"column":6},"end":{"line":30,"column":5}}]}},"b":{"0":[1],"1":[0],"2":[0]},"fnMap":{"0":{"name":"getAssignmentsById","decl":{"start":{"line":6,"column":2},"end":{"line":31,"column":3}},"loc":{"start":{"line":6,"column":2},"end":{"line":31,"column":3}},"line":6}},"f":{"0":1}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/progressController.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/progressController.ts","all":false,"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":82}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":75}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":34}},"11":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}},"12":{"start":{"line":13,"column":0},"end":{"line":13,"column":28}},"13":{"start":{"line":14,"column":0},"end":{"line":14,"column":15}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":21}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":7}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":61}},"17":{"start":{"line":18,"column":0},"end":{"line":18,"column":100}},"20":{"start":{"line":21,"column":0},"end":{"line":21,"column":75}},"22":{"start":{"line":23,"column":0},"end":{"line":23,"column":46}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":63}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":17}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":29}},"26":{"start":{"line":27,"column":0},"end":{"line":27,"column":24}},"27":{"start":{"line":28,"column":0},"end":{"line":28,"column":12}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":11}},"31":{"start":{"line":32,"column":0},"end":{"line":32,"column":54}},"32":{"start":{"line":33,"column":0},"end":{"line":33,"column":15}},"33":{"start":{"line":34,"column":0},"end":{"line":34,"column":31}},"34":{"start":{"line":35,"column":0},"end":{"line":35,"column":34}},"35":{"start":{"line":36,"column":0},"end":{"line":36,"column":10}},"36":{"start":{"line":37,"column":0},"end":{"line":37,"column":9}},"38":{"start":{"line":39,"column":0},"end":{"line":39,"column":26}},"39":{"start":{"line":40,"column":0},"end":{"line":40,"column":7}},"41":{"start":{"line":42,"column":0},"end":{"line":42,"column":91}},"42":{"start":{"line":43,"column":0},"end":{"line":43,"column":11}},"43":{"start":{"line":44,"column":0},"end":{"line":44,"column":19}},"44":{"start":{"line":45,"column":0},"end":{"line":45,"column":25}},"45":{"start":{"line":46,"column":0},"end":{"line":46,"column":7}},"46":{"start":{"line":47,"column":0},"end":{"line":47,"column":18}},"47":{"start":{"line":48,"column":0},"end":{"line":48,"column":80}},"48":{"start":{"line":49,"column":0},"end":{"line":49,"column":3}},"49":{"start":{"line":50,"column":0},"end":{"line":50,"column":2}},"54":{"start":{"line":55,"column":0},"end":{"line":55,"column":41}},"55":{"start":{"line":56,"column":0},"end":{"line":56,"column":28}},"56":{"start":{"line":57,"column":0},"end":{"line":57,"column":15}},"57":{"start":{"line":58,"column":0},"end":{"line":58,"column":21}},"58":{"start":{"line":59,"column":0},"end":{"line":59,"column":7}},"59":{"start":{"line":60,"column":0},"end":{"line":60,"column":61}},"60":{"start":{"line":61,"column":0},"end":{"line":61,"column":56}},"62":{"start":{"line":63,"column":0},"end":{"line":63,"column":68}},"63":{"start":{"line":64,"column":0},"end":{"line":64,"column":14}},"64":{"start":{"line":65,"column":0},"end":{"line":65,"column":29}},"65":{"start":{"line":66,"column":0},"end":{"line":66,"column":39}},"66":{"start":{"line":67,"column":0},"end":{"line":67,"column":8}},"67":{"start":{"line":68,"column":0},"end":{"line":68,"column":34}},"68":{"start":{"line":69,"column":0},"end":{"line":69,"column":7}},"70":{"start":{"line":71,"column":0},"end":{"line":71,"column":27}},"71":{"start":{"line":72,"column":0},"end":{"line":72,"column":67}},"72":{"start":{"line":73,"column":0},"end":{"line":73,"column":13}},"73":{"start":{"line":74,"column":0},"end":{"line":74,"column":5}},"75":{"start":{"line":76,"column":0},"end":{"line":76,"column":51}},"76":{"start":{"line":77,"column":0},"end":{"line":77,"column":19}},"77":{"start":{"line":78,"column":0},"end":{"line":78,"column":25}},"78":{"start":{"line":79,"column":0},"end":{"line":79,"column":72}},"79":{"start":{"line":80,"column":0},"end":{"line":80,"column":3}},"80":{"start":{"line":81,"column":0},"end":{"line":81,"column":2}},"85":{"start":{"line":86,"column":0},"end":{"line":86,"column":37}},"86":{"start":{"line":87,"column":0},"end":{"line":87,"column":28}},"87":{"start":{"line":88,"column":0},"end":{"line":88,"column":15}},"88":{"start":{"line":89,"column":0},"end":{"line":89,"column":21}},"89":{"start":{"line":90,"column":0},"end":{"line":90,"column":7}},"90":{"start":{"line":91,"column":0},"end":{"line":91,"column":61}},"91":{"start":{"line":92,"column":0},"end":{"line":92,"column":56}},"94":{"start":{"line":95,"column":0},"end":{"line":95,"column":68}},"95":{"start":{"line":96,"column":0},"end":{"line":96,"column":14}},"96":{"start":{"line":97,"column":0},"end":{"line":97,"column":29}},"97":{"start":{"line":98,"column":0},"end":{"line":98,"column":39}},"98":{"start":{"line":99,"column":0},"end":{"line":99,"column":8}},"99":{"start":{"line":100,"column":0},"end":{"line":100,"column":34}},"100":{"start":{"line":101,"column":0},"end":{"line":101,"column":7}},"102":{"start":{"line":103,"column":0},"end":{"line":103,"column":27}},"103":{"start":{"line":104,"column":0},"end":{"line":104,"column":67}},"104":{"start":{"line":105,"column":0},"end":{"line":105,"column":13}},"105":{"start":{"line":106,"column":0},"end":{"line":106,"column":5}},"108":{"start":{"line":109,"column":0},"end":{"line":109,"column":72}},"109":{"start":{"line":110,"column":0},"end":{"line":110,"column":49}},"110":{"start":{"line":111,"column":0},"end":{"line":111,"column":27}},"111":{"start":{"line":112,"column":0},"end":{"line":112,"column":7}},"113":{"start":{"line":114,"column":0},"end":{"line":114,"column":7}},"114":{"start":{"line":115,"column":0},"end":{"line":115,"column":18}},"115":{"start":{"line":116,"column":0},"end":{"line":116,"column":78}},"116":{"start":{"line":117,"column":0},"end":{"line":117,"column":19}},"117":{"start":{"line":118,"column":0},"end":{"line":118,"column":25}},"118":{"start":{"line":119,"column":0},"end":{"line":119,"column":74}},"119":{"start":{"line":120,"column":0},"end":{"line":120,"column":3}},"120":{"start":{"line":121,"column":0},"end":{"line":121,"column":2}},"125":{"start":{"line":126,"column":0},"end":{"line":126,"column":45}},"126":{"start":{"line":127,"column":0},"end":{"line":127,"column":28}},"127":{"start":{"line":128,"column":0},"end":{"line":128,"column":15}},"128":{"start":{"line":129,"column":0},"end":{"line":129,"column":21}},"129":{"start":{"line":130,"column":0},"end":{"line":130,"column":7}},"130":{"start":{"line":131,"column":0},"end":{"line":131,"column":20}},"131":{"start":{"line":132,"column":0},"end":{"line":132,"column":56}},"132":{"start":{"line":133,"column":0},"end":{"line":133,"column":13}},"133":{"start":{"line":134,"column":0},"end":{"line":134,"column":5}},"135":{"start":{"line":136,"column":0},"end":{"line":136,"column":59}},"136":{"start":{"line":137,"column":0},"end":{"line":137,"column":24}},"137":{"start":{"line":138,"column":0},"end":{"line":138,"column":59}},"138":{"start":{"line":139,"column":0},"end":{"line":139,"column":13}},"139":{"start":{"line":140,"column":0},"end":{"line":140,"column":5}},"142":{"start":{"line":143,"column":0},"end":{"line":143,"column":47}},"143":{"start":{"line":144,"column":0},"end":{"line":144,"column":28}},"144":{"start":{"line":145,"column":0},"end":{"line":145,"column":16}},"145":{"start":{"line":146,"column":0},"end":{"line":146,"column":23}},"146":{"start":{"line":147,"column":0},"end":{"line":147,"column":48}},"147":{"start":{"line":148,"column":0},"end":{"line":148,"column":8}},"148":{"start":{"line":149,"column":0},"end":{"line":149,"column":7}},"149":{"start":{"line":150,"column":0},"end":{"line":150,"column":16}},"150":{"start":{"line":151,"column":0},"end":{"line":151,"column":61}},"151":{"start":{"line":152,"column":0},"end":{"line":152,"column":13}},"152":{"start":{"line":153,"column":0},"end":{"line":153,"column":5}},"153":{"start":{"line":154,"column":0},"end":{"line":154,"column":35}},"154":{"start":{"line":155,"column":0},"end":{"line":155,"column":14}},"155":{"start":{"line":156,"column":0},"end":{"line":156,"column":81}},"156":{"start":{"line":157,"column":0},"end":{"line":157,"column":13}},"157":{"start":{"line":158,"column":0},"end":{"line":158,"column":5}},"160":{"start":{"line":161,"column":0},"end":{"line":161,"column":59}},"161":{"start":{"line":162,"column":0},"end":{"line":162,"column":37}},"162":{"start":{"line":163,"column":0},"end":{"line":163,"column":7}},"163":{"start":{"line":164,"column":0},"end":{"line":164,"column":22}},"164":{"start":{"line":165,"column":0},"end":{"line":165,"column":65}},"165":{"start":{"line":166,"column":0},"end":{"line":166,"column":13}},"166":{"start":{"line":167,"column":0},"end":{"line":167,"column":5}},"169":{"start":{"line":170,"column":0},"end":{"line":170,"column":32}},"171":{"start":{"line":172,"column":0},"end":{"line":172,"column":36}},"172":{"start":{"line":173,"column":0},"end":{"line":173,"column":13}},"173":{"start":{"line":174,"column":0},"end":{"line":174,"column":5}},"175":{"start":{"line":176,"column":0},"end":{"line":176,"column":43}},"178":{"start":{"line":179,"column":0},"end":{"line":179,"column":68}},"179":{"start":{"line":180,"column":0},"end":{"line":180,"column":45}},"180":{"start":{"line":181,"column":0},"end":{"line":181,"column":7}},"181":{"start":{"line":182,"column":0},"end":{"line":182,"column":27}},"182":{"start":{"line":183,"column":0},"end":{"line":183,"column":69}},"183":{"start":{"line":184,"column":0},"end":{"line":184,"column":13}},"184":{"start":{"line":185,"column":0},"end":{"line":185,"column":5}},"188":{"start":{"line":189,"column":0},"end":{"line":189,"column":58}},"189":{"start":{"line":190,"column":0},"end":{"line":190,"column":64}},"190":{"start":{"line":191,"column":0},"end":{"line":191,"column":46}},"191":{"start":{"line":192,"column":0},"end":{"line":192,"column":7}},"192":{"start":{"line":193,"column":0},"end":{"line":193,"column":27}},"193":{"start":{"line":194,"column":0},"end":{"line":194,"column":54}},"194":{"start":{"line":195,"column":0},"end":{"line":195,"column":45}},"196":{"start":{"line":197,"column":0},"end":{"line":197,"column":26}},"199":{"start":{"line":200,"column":0},"end":{"line":200,"column":36}},"200":{"start":{"line":201,"column":0},"end":{"line":201,"column":60}},"201":{"start":{"line":202,"column":0},"end":{"line":202,"column":16}},"202":{"start":{"line":203,"column":0},"end":{"line":203,"column":30}},"203":{"start":{"line":204,"column":0},"end":{"line":204,"column":21}},"204":{"start":{"line":205,"column":0},"end":{"line":205,"column":23}},"205":{"start":{"line":206,"column":0},"end":{"line":206,"column":48}},"206":{"start":{"line":207,"column":0},"end":{"line":207,"column":12}},"207":{"start":{"line":208,"column":0},"end":{"line":208,"column":10}},"208":{"start":{"line":209,"column":0},"end":{"line":209,"column":9}},"209":{"start":{"line":210,"column":0},"end":{"line":210,"column":56}},"210":{"start":{"line":211,"column":0},"end":{"line":211,"column":65}},"211":{"start":{"line":212,"column":0},"end":{"line":212,"column":5}},"213":{"start":{"line":214,"column":0},"end":{"line":214,"column":58}},"214":{"start":{"line":215,"column":0},"end":{"line":215,"column":19}},"215":{"start":{"line":216,"column":0},"end":{"line":216,"column":25}},"216":{"start":{"line":217,"column":0},"end":{"line":217,"column":93}},"217":{"start":{"line":218,"column":0},"end":{"line":218,"column":3}},"218":{"start":{"line":219,"column":0},"end":{"line":219,"column":2}},"223":{"start":{"line":224,"column":0},"end":{"line":224,"column":51}},"224":{"start":{"line":225,"column":0},"end":{"line":225,"column":28}},"225":{"start":{"line":226,"column":0},"end":{"line":226,"column":15}},"226":{"start":{"line":227,"column":0},"end":{"line":227,"column":21}},"227":{"start":{"line":228,"column":0},"end":{"line":228,"column":7}},"228":{"start":{"line":229,"column":0},"end":{"line":229,"column":61}},"229":{"start":{"line":230,"column":0},"end":{"line":230,"column":71}},"230":{"start":{"line":231,"column":0},"end":{"line":231,"column":30}},"231":{"start":{"line":232,"column":0},"end":{"line":232,"column":65}},"232":{"start":{"line":233,"column":0},"end":{"line":233,"column":13}},"233":{"start":{"line":234,"column":0},"end":{"line":234,"column":5}},"235":{"start":{"line":236,"column":0},"end":{"line":236,"column":59}},"236":{"start":{"line":237,"column":0},"end":{"line":237,"column":34}},"237":{"start":{"line":238,"column":0},"end":{"line":238,"column":7}},"238":{"start":{"line":239,"column":0},"end":{"line":239,"column":22}},"239":{"start":{"line":240,"column":0},"end":{"line":240,"column":65}},"240":{"start":{"line":241,"column":0},"end":{"line":241,"column":13}},"241":{"start":{"line":242,"column":0},"end":{"line":242,"column":5}},"244":{"start":{"line":245,"column":0},"end":{"line":245,"column":32}},"245":{"start":{"line":246,"column":0},"end":{"line":246,"column":42}},"246":{"start":{"line":247,"column":0},"end":{"line":247,"column":13}},"247":{"start":{"line":248,"column":0},"end":{"line":248,"column":5}},"248":{"start":{"line":249,"column":0},"end":{"line":249,"column":43}},"251":{"start":{"line":252,"column":0},"end":{"line":252,"column":60}},"252":{"start":{"line":253,"column":0},"end":{"line":253,"column":45}},"253":{"start":{"line":254,"column":0},"end":{"line":254,"column":7}},"254":{"start":{"line":255,"column":0},"end":{"line":255,"column":27}},"255":{"start":{"line":256,"column":0},"end":{"line":256,"column":70}},"256":{"start":{"line":257,"column":0},"end":{"line":257,"column":13}},"257":{"start":{"line":258,"column":0},"end":{"line":258,"column":5}},"260":{"start":{"line":261,"column":0},"end":{"line":261,"column":58}},"261":{"start":{"line":262,"column":0},"end":{"line":262,"column":64}},"262":{"start":{"line":263,"column":0},"end":{"line":263,"column":46}},"263":{"start":{"line":264,"column":0},"end":{"line":264,"column":7}},"264":{"start":{"line":265,"column":0},"end":{"line":265,"column":27}},"265":{"start":{"line":266,"column":0},"end":{"line":266,"column":45}},"266":{"start":{"line":267,"column":0},"end":{"line":267,"column":45}},"269":{"start":{"line":270,"column":0},"end":{"line":270,"column":58}},"270":{"start":{"line":271,"column":0},"end":{"line":271,"column":14}},"271":{"start":{"line":272,"column":0},"end":{"line":272,"column":18}},"272":{"start":{"line":273,"column":0},"end":{"line":273,"column":70}},"273":{"start":{"line":274,"column":0},"end":{"line":274,"column":8}},"274":{"start":{"line":275,"column":0},"end":{"line":275,"column":7}},"276":{"start":{"line":277,"column":0},"end":{"line":277,"column":54}},"277":{"start":{"line":278,"column":0},"end":{"line":278,"column":61}},"278":{"start":{"line":279,"column":0},"end":{"line":279,"column":19}},"279":{"start":{"line":280,"column":0},"end":{"line":280,"column":25}},"280":{"start":{"line":281,"column":0},"end":{"line":281,"column":90}},"281":{"start":{"line":282,"column":0},"end":{"line":282,"column":3}},"282":{"start":{"line":283,"column":0},"end":{"line":283,"column":2}},"288":{"start":{"line":289,"column":0},"end":{"line":289,"column":53}},"289":{"start":{"line":290,"column":0},"end":{"line":290,"column":28}},"290":{"start":{"line":291,"column":0},"end":{"line":291,"column":15}},"291":{"start":{"line":292,"column":0},"end":{"line":292,"column":21}},"292":{"start":{"line":293,"column":0},"end":{"line":293,"column":7}},"293":{"start":{"line":294,"column":0},"end":{"line":294,"column":61}},"294":{"start":{"line":295,"column":0},"end":{"line":295,"column":42}},"295":{"start":{"line":296,"column":0},"end":{"line":296,"column":26}},"296":{"start":{"line":297,"column":0},"end":{"line":297,"column":62}},"297":{"start":{"line":298,"column":0},"end":{"line":298,"column":13}},"298":{"start":{"line":299,"column":0},"end":{"line":299,"column":5}},"301":{"start":{"line":302,"column":0},"end":{"line":302,"column":68}},"302":{"start":{"line":303,"column":0},"end":{"line":303,"column":51}},"303":{"start":{"line":304,"column":0},"end":{"line":304,"column":7}},"304":{"start":{"line":305,"column":0},"end":{"line":305,"column":27}},"305":{"start":{"line":306,"column":0},"end":{"line":306,"column":9}},"306":{"start":{"line":307,"column":0},"end":{"line":307,"column":20}},"307":{"start":{"line":308,"column":0},"end":{"line":308,"column":75}},"308":{"start":{"line":309,"column":0},"end":{"line":309,"column":13}},"309":{"start":{"line":310,"column":0},"end":{"line":310,"column":5}},"312":{"start":{"line":313,"column":0},"end":{"line":313,"column":58}},"313":{"start":{"line":314,"column":0},"end":{"line":314,"column":51}},"314":{"start":{"line":315,"column":0},"end":{"line":315,"column":46}},"315":{"start":{"line":316,"column":0},"end":{"line":316,"column":7}},"316":{"start":{"line":317,"column":0},"end":{"line":317,"column":27}},"317":{"start":{"line":318,"column":0},"end":{"line":318,"column":45}},"318":{"start":{"line":319,"column":0},"end":{"line":319,"column":45}},"321":{"start":{"line":322,"column":0},"end":{"line":322,"column":58}},"322":{"start":{"line":323,"column":0},"end":{"line":323,"column":14}},"323":{"start":{"line":324,"column":0},"end":{"line":324,"column":18}},"324":{"start":{"line":325,"column":0},"end":{"line":325,"column":19}},"325":{"start":{"line":326,"column":0},"end":{"line":326,"column":21}},"326":{"start":{"line":327,"column":0},"end":{"line":327,"column":46}},"327":{"start":{"line":328,"column":0},"end":{"line":328,"column":10}},"328":{"start":{"line":329,"column":0},"end":{"line":329,"column":8}},"329":{"start":{"line":330,"column":0},"end":{"line":330,"column":7}},"331":{"start":{"line":332,"column":0},"end":{"line":332,"column":54}},"332":{"start":{"line":333,"column":0},"end":{"line":333,"column":63}},"333":{"start":{"line":334,"column":0},"end":{"line":334,"column":19}},"334":{"start":{"line":335,"column":0},"end":{"line":335,"column":25}},"335":{"start":{"line":336,"column":0},"end":{"line":336,"column":7}},"336":{"start":{"line":337,"column":0},"end":{"line":337,"column":18}},"337":{"start":{"line":338,"column":0},"end":{"line":338,"column":75}},"338":{"start":{"line":339,"column":0},"end":{"line":339,"column":3}},"339":{"start":{"line":340,"column":0},"end":{"line":340,"column":2}},"344":{"start":{"line":345,"column":0},"end":{"line":345,"column":45}},"345":{"start":{"line":346,"column":0},"end":{"line":346,"column":28}},"346":{"start":{"line":347,"column":0},"end":{"line":347,"column":15}},"347":{"start":{"line":348,"column":0},"end":{"line":348,"column":21}},"348":{"start":{"line":349,"column":0},"end":{"line":349,"column":7}},"349":{"start":{"line":350,"column":0},"end":{"line":350,"column":20}},"350":{"start":{"line":351,"column":0},"end":{"line":351,"column":56}},"351":{"start":{"line":352,"column":0},"end":{"line":352,"column":13}},"352":{"start":{"line":353,"column":0},"end":{"line":353,"column":5}},"353":{"start":{"line":354,"column":0},"end":{"line":354,"column":59}},"354":{"start":{"line":355,"column":0},"end":{"line":355,"column":24}},"355":{"start":{"line":356,"column":0},"end":{"line":356,"column":59}},"356":{"start":{"line":357,"column":0},"end":{"line":357,"column":13}},"357":{"start":{"line":358,"column":0},"end":{"line":358,"column":5}},"359":{"start":{"line":360,"column":0},"end":{"line":360,"column":47}},"360":{"start":{"line":361,"column":0},"end":{"line":361,"column":28}},"361":{"start":{"line":362,"column":0},"end":{"line":362,"column":16}},"362":{"start":{"line":363,"column":0},"end":{"line":363,"column":23}},"363":{"start":{"line":364,"column":0},"end":{"line":364,"column":29}},"364":{"start":{"line":365,"column":0},"end":{"line":365,"column":8}},"365":{"start":{"line":366,"column":0},"end":{"line":366,"column":7}},"366":{"start":{"line":367,"column":0},"end":{"line":367,"column":16}},"367":{"start":{"line":368,"column":0},"end":{"line":368,"column":61}},"368":{"start":{"line":369,"column":0},"end":{"line":369,"column":13}},"369":{"start":{"line":370,"column":0},"end":{"line":370,"column":5}},"370":{"start":{"line":371,"column":0},"end":{"line":371,"column":31}},"371":{"start":{"line":372,"column":0},"end":{"line":372,"column":81}},"372":{"start":{"line":373,"column":0},"end":{"line":373,"column":13}},"373":{"start":{"line":374,"column":0},"end":{"line":374,"column":5}},"375":{"start":{"line":376,"column":0},"end":{"line":376,"column":59}},"376":{"start":{"line":377,"column":0},"end":{"line":377,"column":54}},"377":{"start":{"line":378,"column":0},"end":{"line":378,"column":7}},"378":{"start":{"line":379,"column":0},"end":{"line":379,"column":22}},"379":{"start":{"line":380,"column":0},"end":{"line":380,"column":65}},"380":{"start":{"line":381,"column":0},"end":{"line":381,"column":13}},"381":{"start":{"line":382,"column":0},"end":{"line":382,"column":5}},"383":{"start":{"line":384,"column":0},"end":{"line":384,"column":32}},"384":{"start":{"line":385,"column":0},"end":{"line":385,"column":36}},"385":{"start":{"line":386,"column":0},"end":{"line":386,"column":13}},"386":{"start":{"line":387,"column":0},"end":{"line":387,"column":5}},"387":{"start":{"line":388,"column":0},"end":{"line":388,"column":43}},"390":{"start":{"line":391,"column":0},"end":{"line":391,"column":60}},"391":{"start":{"line":392,"column":0},"end":{"line":392,"column":64}},"392":{"start":{"line":393,"column":0},"end":{"line":393,"column":7}},"393":{"start":{"line":394,"column":0},"end":{"line":394,"column":27}},"394":{"start":{"line":395,"column":0},"end":{"line":395,"column":9}},"395":{"start":{"line":396,"column":0},"end":{"line":396,"column":20}},"396":{"start":{"line":397,"column":0},"end":{"line":397,"column":73}},"397":{"start":{"line":398,"column":0},"end":{"line":398,"column":13}},"398":{"start":{"line":399,"column":0},"end":{"line":399,"column":5}},"401":{"start":{"line":402,"column":0},"end":{"line":402,"column":58}},"402":{"start":{"line":403,"column":0},"end":{"line":403,"column":64}},"403":{"start":{"line":404,"column":0},"end":{"line":404,"column":46}},"404":{"start":{"line":405,"column":0},"end":{"line":405,"column":7}},"405":{"start":{"line":406,"column":0},"end":{"line":406,"column":27}},"406":{"start":{"line":407,"column":0},"end":{"line":407,"column":45}},"407":{"start":{"line":408,"column":0},"end":{"line":408,"column":45}},"409":{"start":{"line":410,"column":0},"end":{"line":410,"column":26}},"410":{"start":{"line":411,"column":0},"end":{"line":411,"column":42}},"411":{"start":{"line":412,"column":0},"end":{"line":412,"column":60}},"412":{"start":{"line":413,"column":0},"end":{"line":413,"column":16}},"413":{"start":{"line":414,"column":0},"end":{"line":414,"column":36}},"414":{"start":{"line":415,"column":0},"end":{"line":415,"column":72}},"415":{"start":{"line":416,"column":0},"end":{"line":416,"column":10}},"416":{"start":{"line":417,"column":0},"end":{"line":417,"column":9}},"417":{"start":{"line":418,"column":0},"end":{"line":418,"column":50}},"418":{"start":{"line":419,"column":0},"end":{"line":419,"column":33}},"419":{"start":{"line":420,"column":0},"end":{"line":420,"column":29}},"420":{"start":{"line":421,"column":0},"end":{"line":421,"column":7}},"421":{"start":{"line":422,"column":0},"end":{"line":422,"column":5}},"422":{"start":{"line":423,"column":0},"end":{"line":423,"column":58}},"423":{"start":{"line":424,"column":0},"end":{"line":424,"column":19}},"424":{"start":{"line":425,"column":0},"end":{"line":425,"column":25}},"425":{"start":{"line":426,"column":0},"end":{"line":426,"column":7}},"426":{"start":{"line":427,"column":0},"end":{"line":427,"column":18}},"427":{"start":{"line":428,"column":0},"end":{"line":428,"column":79}},"428":{"start":{"line":429,"column":0},"end":{"line":429,"column":3}},"429":{"start":{"line":430,"column":0},"end":{"line":430,"column":2}},"434":{"start":{"line":435,"column":0},"end":{"line":435,"column":51}},"435":{"start":{"line":436,"column":0},"end":{"line":436,"column":28}},"436":{"start":{"line":437,"column":0},"end":{"line":437,"column":15}},"437":{"start":{"line":438,"column":0},"end":{"line":438,"column":21}},"438":{"start":{"line":439,"column":0},"end":{"line":439,"column":7}},"439":{"start":{"line":440,"column":0},"end":{"line":440,"column":20}},"440":{"start":{"line":441,"column":0},"end":{"line":441,"column":56}},"441":{"start":{"line":442,"column":0},"end":{"line":442,"column":13}},"442":{"start":{"line":443,"column":0},"end":{"line":443,"column":5}},"443":{"start":{"line":444,"column":0},"end":{"line":444,"column":63}},"444":{"start":{"line":445,"column":0},"end":{"line":445,"column":30}},"445":{"start":{"line":446,"column":0},"end":{"line":446,"column":65}},"446":{"start":{"line":447,"column":0},"end":{"line":447,"column":13}},"447":{"start":{"line":448,"column":0},"end":{"line":448,"column":5}},"449":{"start":{"line":450,"column":0},"end":{"line":450,"column":59}},"450":{"start":{"line":451,"column":0},"end":{"line":451,"column":34}},"451":{"start":{"line":452,"column":0},"end":{"line":452,"column":7}},"452":{"start":{"line":453,"column":0},"end":{"line":453,"column":22}},"453":{"start":{"line":454,"column":0},"end":{"line":454,"column":65}},"454":{"start":{"line":455,"column":0},"end":{"line":455,"column":13}},"455":{"start":{"line":456,"column":0},"end":{"line":456,"column":5}},"456":{"start":{"line":457,"column":0},"end":{"line":457,"column":32}},"457":{"start":{"line":458,"column":0},"end":{"line":458,"column":39}},"458":{"start":{"line":459,"column":0},"end":{"line":459,"column":13}},"459":{"start":{"line":460,"column":0},"end":{"line":460,"column":5}},"460":{"start":{"line":461,"column":0},"end":{"line":461,"column":43}},"463":{"start":{"line":464,"column":0},"end":{"line":464,"column":60}},"464":{"start":{"line":465,"column":0},"end":{"line":465,"column":64}},"465":{"start":{"line":466,"column":0},"end":{"line":466,"column":7}},"466":{"start":{"line":467,"column":0},"end":{"line":467,"column":27}},"467":{"start":{"line":468,"column":0},"end":{"line":468,"column":9}},"468":{"start":{"line":469,"column":0},"end":{"line":469,"column":20}},"469":{"start":{"line":470,"column":0},"end":{"line":470,"column":73}},"470":{"start":{"line":471,"column":0},"end":{"line":471,"column":13}},"471":{"start":{"line":472,"column":0},"end":{"line":472,"column":5}},"474":{"start":{"line":475,"column":0},"end":{"line":475,"column":58}},"475":{"start":{"line":476,"column":0},"end":{"line":476,"column":64}},"476":{"start":{"line":477,"column":0},"end":{"line":477,"column":46}},"477":{"start":{"line":478,"column":0},"end":{"line":478,"column":7}},"478":{"start":{"line":479,"column":0},"end":{"line":479,"column":27}},"479":{"start":{"line":480,"column":0},"end":{"line":480,"column":45}},"480":{"start":{"line":481,"column":0},"end":{"line":481,"column":45}},"483":{"start":{"line":484,"column":0},"end":{"line":484,"column":66}},"484":{"start":{"line":485,"column":0},"end":{"line":485,"column":30}},"485":{"start":{"line":486,"column":0},"end":{"line":486,"column":57}},"486":{"start":{"line":487,"column":0},"end":{"line":487,"column":7}},"487":{"start":{"line":488,"column":0},"end":{"line":488,"column":39}},"488":{"start":{"line":489,"column":0},"end":{"line":489,"column":9}},"489":{"start":{"line":490,"column":0},"end":{"line":490,"column":20}},"490":{"start":{"line":491,"column":0},"end":{"line":491,"column":68}},"491":{"start":{"line":492,"column":0},"end":{"line":492,"column":13}},"492":{"start":{"line":493,"column":0},"end":{"line":493,"column":5}},"494":{"start":{"line":495,"column":0},"end":{"line":495,"column":26}},"495":{"start":{"line":496,"column":0},"end":{"line":496,"column":22}},"497":{"start":{"line":498,"column":0},"end":{"line":498,"column":39}},"498":{"start":{"line":499,"column":0},"end":{"line":499,"column":27}},"499":{"start":{"line":500,"column":0},"end":{"line":500,"column":22}},"500":{"start":{"line":501,"column":0},"end":{"line":501,"column":44}},"501":{"start":{"line":502,"column":0},"end":{"line":502,"column":62}},"502":{"start":{"line":503,"column":0},"end":{"line":503,"column":18}},"503":{"start":{"line":504,"column":0},"end":{"line":504,"column":38}},"504":{"start":{"line":505,"column":0},"end":{"line":505,"column":74}},"505":{"start":{"line":506,"column":0},"end":{"line":506,"column":12}},"506":{"start":{"line":507,"column":0},"end":{"line":507,"column":11}},"507":{"start":{"line":508,"column":0},"end":{"line":508,"column":58}},"508":{"start":{"line":509,"column":0},"end":{"line":509,"column":35}},"509":{"start":{"line":510,"column":0},"end":{"line":510,"column":31}},"510":{"start":{"line":511,"column":0},"end":{"line":511,"column":9}},"511":{"start":{"line":512,"column":0},"end":{"line":512,"column":7}},"512":{"start":{"line":513,"column":0},"end":{"line":513,"column":31}},"513":{"start":{"line":514,"column":0},"end":{"line":514,"column":18}},"514":{"start":{"line":515,"column":0},"end":{"line":515,"column":5}},"516":{"start":{"line":517,"column":0},"end":{"line":517,"column":74}},"517":{"start":{"line":518,"column":0},"end":{"line":518,"column":46}},"518":{"start":{"line":519,"column":0},"end":{"line":519,"column":19}},"519":{"start":{"line":520,"column":0},"end":{"line":520,"column":25}},"520":{"start":{"line":521,"column":0},"end":{"line":521,"column":7}},"521":{"start":{"line":522,"column":0},"end":{"line":522,"column":18}},"522":{"start":{"line":523,"column":0},"end":{"line":523,"column":71}},"523":{"start":{"line":524,"column":0},"end":{"line":524,"column":3}},"524":{"start":{"line":525,"column":0},"end":{"line":525,"column":2}}},"s":{"1":1,"3":1,"5":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"20":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"38":0,"39":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"54":1,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"70":0,"71":0,"72":0,"73":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"85":1,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"102":0,"103":0,"104":0,"105":0,"108":0,"109":0,"110":0,"111":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"125":1,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"135":0,"136":0,"137":0,"138":0,"139":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"169":0,"171":0,"172":0,"173":0,"175":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"196":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"223":1,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"244":0,"245":0,"246":0,"247":0,"248":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"288":1,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"344":1,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"383":0,"384":0,"385":0,"386":0,"387":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"434":1,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"494":0,"495":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"514":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0},"branchMap":{},"b":{},"fnMap":{"0":{"name":"createProgress","decl":{"start":{"line":12,"column":30},"end":{"line":50,"column":2}},"loc":{"start":{"line":12,"column":30},"end":{"line":50,"column":2}},"line":12},"1":{"name":"getStudentProgress","decl":{"start":{"line":55,"column":34},"end":{"line":81,"column":2}},"loc":{"start":{"line":55,"column":34},"end":{"line":81,"column":2}},"line":55},"2":{"name":"updateProgress","decl":{"start":{"line":86,"column":30},"end":{"line":121,"column":2}},"loc":{"start":{"line":86,"column":30},"end":{"line":121,"column":2}},"line":86},"3":{"name":"getTeamProgressStudent","decl":{"start":{"line":126,"column":38},"end":{"line":219,"column":2}},"loc":{"start":{"line":126,"column":38},"end":{"line":219,"column":2}},"line":126},"4":{"name":"getStudentAssignmentProgress","decl":{"start":{"line":224,"column":44},"end":{"line":283,"column":2}},"loc":{"start":{"line":224,"column":44},"end":{"line":283,"column":2}},"line":224},"5":{"name":"getStudentLearningPathProgress","decl":{"start":{"line":289,"column":46},"end":{"line":340,"column":2}},"loc":{"start":{"line":289,"column":46},"end":{"line":340,"column":2}},"line":289},"6":{"name":"getTeamProgressTeacher","decl":{"start":{"line":345,"column":38},"end":{"line":430,"column":2}},"loc":{"start":{"line":345,"column":38},"end":{"line":430,"column":2}},"line":345},"7":{"name":"getAssignmentAverageProgress","decl":{"start":{"line":435,"column":44},"end":{"line":525,"column":2}},"loc":{"start":{"line":435,"column":44},"end":{"line":525,"column":2}},"line":435}},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/userController.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/userController.ts","all":false,"statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":49}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":44}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":50}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":30}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":32}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":37}},"9":{"start":{"line":10,"column":0},"end":{"line":10,"column":59}},"10":{"start":{"line":11,"column":0},"end":{"line":11,"column":57}},"11":{"start":{"line":12,"column":0},"end":{"line":12,"column":53}},"12":{"start":{"line":13,"column":0},"end":{"line":13,"column":74}},"13":{"start":{"line":14,"column":0},"end":{"line":14,"column":3}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":101}},"18":{"start":{"line":19,"column":0},"end":{"line":19,"column":9}},"20":{"start":{"line":21,"column":0},"end":{"line":21,"column":43}},"21":{"start":{"line":22,"column":0},"end":{"line":22,"column":21}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":42}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":34}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":93}},"26":{"start":{"line":27,"column":0},"end":{"line":27,"column":15}},"27":{"start":{"line":28,"column":0},"end":{"line":28,"column":19}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":16}},"30":{"start":{"line":31,"column":0},"end":{"line":31,"column":78}},"31":{"start":{"line":32,"column":0},"end":{"line":32,"column":19}},"32":{"start":{"line":33,"column":0},"end":{"line":33,"column":9}},"33":{"start":{"line":34,"column":0},"end":{"line":34,"column":5}},"35":{"start":{"line":36,"column":0},"end":{"line":36,"column":62}},"38":{"start":{"line":39,"column":0},"end":{"line":39,"column":72}},"39":{"start":{"line":40,"column":0},"end":{"line":40,"column":23}},"40":{"start":{"line":41,"column":0},"end":{"line":41,"column":24}},"41":{"start":{"line":42,"column":0},"end":{"line":42,"column":48}},"42":{"start":{"line":43,"column":0},"end":{"line":43,"column":5}},"45":{"start":{"line":46,"column":0},"end":{"line":46,"column":67}},"48":{"start":{"line":49,"column":0},"end":{"line":49,"column":83}},"50":{"start":{"line":51,"column":0},"end":{"line":51,"column":26}},"51":{"start":{"line":52,"column":0},"end":{"line":52,"column":96}},"52":{"start":{"line":53,"column":0},"end":{"line":53,"column":7}},"53":{"start":{"line":54,"column":0},"end":{"line":54,"column":2}},"58":{"start":{"line":59,"column":0},"end":{"line":59,"column":112}},"59":{"start":{"line":60,"column":0},"end":{"line":60,"column":47}},"60":{"start":{"line":61,"column":0},"end":{"line":61,"column":3}},"65":{"start":{"line":66,"column":0},"end":{"line":66,"column":112}},"66":{"start":{"line":67,"column":0},"end":{"line":67,"column":47}},"67":{"start":{"line":68,"column":0},"end":{"line":68,"column":3}}},"s":{"0":1,"1":1,"2":1,"3":1,"6":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"15":1,"18":0,"20":0,"21":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"30":0,"31":0,"32":0,"33":0,"35":0,"38":0,"39":0,"40":0,"41":0,"42":0,"45":0,"48":0,"50":0,"51":0,"52":0,"53":0,"58":1,"59":0,"60":0,"65":1,"66":0,"67":0},"branchMap":{},"b":{},"fnMap":{"0":{"name":"registerUser","decl":{"start":{"line":16,"column":21},"end":{"line":54,"column":2}},"loc":{"start":{"line":16,"column":21},"end":{"line":54,"column":2}},"line":16}},"f":{"0":0}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/joinrequest/joinRequestController.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/joinrequest/joinRequestController.ts","all":false,"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":67}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":47}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":78}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":82}},"9":{"start":{"line":10,"column":0},"end":{"line":10,"column":59}},"10":{"start":{"line":11,"column":0},"end":{"line":11,"column":13}},"11":{"start":{"line":12,"column":0},"end":{"line":12,"column":36}},"12":{"start":{"line":13,"column":0},"end":{"line":13,"column":25}},"13":{"start":{"line":14,"column":0},"end":{"line":14,"column":105}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":100}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":9}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":6}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":115}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":71}},"26":{"start":{"line":27,"column":0},"end":{"line":27,"column":61}},"27":{"start":{"line":28,"column":0},"end":{"line":28,"column":118}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":42}},"29":{"start":{"line":30,"column":0},"end":{"line":30,"column":3}},"38":{"start":{"line":39,"column":0},"end":{"line":39,"column":121}},"39":{"start":{"line":40,"column":0},"end":{"line":40,"column":57}},"40":{"start":{"line":41,"column":0},"end":{"line":41,"column":61}},"41":{"start":{"line":42,"column":0},"end":{"line":42,"column":97}},"42":{"start":{"line":43,"column":0},"end":{"line":43,"column":61}},"44":{"start":{"line":45,"column":0},"end":{"line":45,"column":65}},"45":{"start":{"line":46,"column":0},"end":{"line":46,"column":78}},"46":{"start":{"line":47,"column":0},"end":{"line":47,"column":5}},"48":{"start":{"line":49,"column":0},"end":{"line":49,"column":31}},"49":{"start":{"line":50,"column":0},"end":{"line":50,"column":132}},"50":{"start":{"line":51,"column":0},"end":{"line":51,"column":81}},"51":{"start":{"line":52,"column":0},"end":{"line":52,"column":35}},"52":{"start":{"line":53,"column":0},"end":{"line":53,"column":113}},"53":{"start":{"line":54,"column":0},"end":{"line":54,"column":79}},"54":{"start":{"line":55,"column":0},"end":{"line":55,"column":5}},"55":{"start":{"line":56,"column":0},"end":{"line":56,"column":3}},"62":{"start":{"line":63,"column":0},"end":{"line":63,"column":120}},"63":{"start":{"line":64,"column":0},"end":{"line":64,"column":57}},"64":{"start":{"line":65,"column":0},"end":{"line":65,"column":61}},"65":{"start":{"line":66,"column":0},"end":{"line":66,"column":108}},"66":{"start":{"line":67,"column":0},"end":{"line":67,"column":43}},"67":{"start":{"line":68,"column":0},"end":{"line":68,"column":3}}},"s":{"1":1,"4":1,"5":1,"8":1,"9":21,"10":15,"11":15,"12":8,"13":7,"14":7,"15":7,"16":15,"24":1,"25":7,"26":7,"27":7,"28":4,"29":4,"38":1,"39":6,"40":6,"41":6,"42":6,"44":6,"45":1,"46":1,"48":6,"49":4,"50":1,"51":6,"52":1,"53":1,"54":1,"55":6,"62":1,"63":2,"64":2,"65":2,"66":1,"67":1},"branchMap":{"0":{"type":"branch","line":9,"loc":{"start":{"line":9,"column":22},"end":{"line":17,"column":6}},"locations":[{"start":{"line":9,"column":22},"end":{"line":17,"column":6}}]},"1":{"type":"branch","line":10,"loc":{"start":{"line":10,"column":4},"end":{"line":17,"column":6}},"locations":[{"start":{"line":10,"column":4},"end":{"line":17,"column":6}}]},"2":{"type":"branch","line":12,"loc":{"start":{"line":12,"column":34},"end":{"line":16,"column":9}},"locations":[{"start":{"line":12,"column":34},"end":{"line":16,"column":9}}]},"3":{"type":"branch","line":13,"loc":{"start":{"line":13,"column":8},"end":{"line":16,"column":9}},"locations":[{"start":{"line":13,"column":8},"end":{"line":16,"column":9}}]},"4":{"type":"branch","line":14,"loc":{"start":{"line":14,"column":67},"end":{"line":14,"column":105}},"locations":[{"start":{"line":14,"column":67},"end":{"line":14,"column":105}}]},"5":{"type":"branch","line":15,"loc":{"start":{"line":15,"column":57},"end":{"line":15,"column":73}},"locations":[{"start":{"line":15,"column":57},"end":{"line":15,"column":73}}]},"6":{"type":"branch","line":25,"loc":{"start":{"line":25,"column":47},"end":{"line":30,"column":3}},"locations":[{"start":{"line":25,"column":47},"end":{"line":30,"column":3}}]},"7":{"type":"branch","line":26,"loc":{"start":{"line":26,"column":30},"end":{"line":26,"column":71}},"locations":[{"start":{"line":26,"column":30},"end":{"line":26,"column":71}}]},"8":{"type":"branch","line":28,"loc":{"start":{"line":28,"column":116},"end":{"line":30,"column":3}},"locations":[{"start":{"line":28,"column":116},"end":{"line":30,"column":3}}]},"9":{"type":"branch","line":39,"loc":{"start":{"line":39,"column":53},"end":{"line":56,"column":3}},"locations":[{"start":{"line":39,"column":53},"end":{"line":56,"column":3}}]},"10":{"type":"branch","line":45,"loc":{"start":{"line":45,"column":31},"end":{"line":45,"column":64}},"locations":[{"start":{"line":45,"column":31},"end":{"line":45,"column":64}}]},"11":{"type":"branch","line":45,"loc":{"start":{"line":45,"column":64},"end":{"line":47,"column":5}},"locations":[{"start":{"line":45,"column":64},"end":{"line":47,"column":5}}]},"12":{"type":"branch","line":49,"loc":{"start":{"line":49,"column":30},"end":{"line":52,"column":15}},"locations":[{"start":{"line":49,"column":30},"end":{"line":52,"column":15}}]},"13":{"type":"branch","line":50,"loc":{"start":{"line":50,"column":130},"end":{"line":52,"column":15}},"locations":[{"start":{"line":50,"column":130},"end":{"line":52,"column":15}}]},"14":{"type":"branch","line":52,"loc":{"start":{"line":52,"column":4},"end":{"line":55,"column":5}},"locations":[{"start":{"line":52,"column":4},"end":{"line":55,"column":5}}]},"15":{"type":"branch","line":52,"loc":{"start":{"line":52,"column":34},"end":{"line":55,"column":5}},"locations":[{"start":{"line":52,"column":34},"end":{"line":55,"column":5}}]},"16":{"type":"branch","line":63,"loc":{"start":{"line":63,"column":52},"end":{"line":68,"column":3}},"locations":[{"start":{"line":63,"column":52},"end":{"line":68,"column":3}}]},"17":{"type":"branch","line":66,"loc":{"start":{"line":66,"column":106},"end":{"line":68,"column":3}},"locations":[{"start":{"line":66,"column":106},"end":{"line":68,"column":3}}]}},"b":{"0":[21],"1":[15],"2":[8],"3":[7],"4":[0],"5":[0],"6":[7],"7":[1],"8":[4],"9":[6],"10":[2],"11":[1],"12":[4],"13":[1],"14":[2],"15":[1],"16":[2],"17":[1]},"fnMap":{"0":{"name":"handleRequest","decl":{"start":{"line":9,"column":22},"end":{"line":17,"column":6}},"loc":{"start":{"line":9,"column":22},"end":{"line":17,"column":6}},"line":9}},"f":{"0":21}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/learningObject/learningObjectController.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/learningObject/learningObjectController.ts","all":false,"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":8}},"9":{"start":{"line":10,"column":0},"end":{"line":10,"column":76}},"12":{"start":{"line":13,"column":0},"end":{"line":13,"column":67}},"13":{"start":{"line":14,"column":0},"end":{"line":14,"column":68}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":48}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":1}},"18":{"start":{"line":19,"column":0},"end":{"line":19,"column":54}},"19":{"start":{"line":20,"column":0},"end":{"line":20,"column":28}},"20":{"start":{"line":21,"column":0},"end":{"line":21,"column":15}},"21":{"start":{"line":22,"column":0},"end":{"line":22,"column":21}},"22":{"start":{"line":23,"column":0},"end":{"line":23,"column":7}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":57}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":80}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":22}},"26":{"start":{"line":27,"column":0},"end":{"line":27,"column":19}},"27":{"start":{"line":28,"column":0},"end":{"line":28,"column":25}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":92}},"29":{"start":{"line":30,"column":0},"end":{"line":30,"column":3}},"30":{"start":{"line":31,"column":0},"end":{"line":31,"column":2}},"33":{"start":{"line":34,"column":0},"end":{"line":34,"column":50}},"34":{"start":{"line":35,"column":0},"end":{"line":35,"column":28}},"35":{"start":{"line":36,"column":0},"end":{"line":36,"column":15}},"36":{"start":{"line":37,"column":0},"end":{"line":37,"column":21}},"37":{"start":{"line":38,"column":0},"end":{"line":38,"column":7}},"38":{"start":{"line":39,"column":0},"end":{"line":39,"column":30}},"39":{"start":{"line":40,"column":0},"end":{"line":40,"column":57}},"40":{"start":{"line":41,"column":0},"end":{"line":41,"column":84}},"41":{"start":{"line":42,"column":0},"end":{"line":42,"column":14}},"42":{"start":{"line":43,"column":0},"end":{"line":43,"column":82}},"43":{"start":{"line":44,"column":0},"end":{"line":44,"column":13}},"44":{"start":{"line":45,"column":0},"end":{"line":45,"column":5}},"45":{"start":{"line":46,"column":0},"end":{"line":46,"column":17}},"46":{"start":{"line":47,"column":0},"end":{"line":47,"column":19}},"47":{"start":{"line":48,"column":0},"end":{"line":48,"column":25}},"48":{"start":{"line":49,"column":0},"end":{"line":49,"column":90}},"49":{"start":{"line":50,"column":0},"end":{"line":50,"column":3}},"50":{"start":{"line":51,"column":0},"end":{"line":51,"column":2}},"53":{"start":{"line":54,"column":0},"end":{"line":54,"column":54}},"54":{"start":{"line":55,"column":0},"end":{"line":55,"column":28}},"55":{"start":{"line":56,"column":0},"end":{"line":56,"column":15}},"56":{"start":{"line":57,"column":0},"end":{"line":57,"column":21}},"57":{"start":{"line":58,"column":0},"end":{"line":58,"column":7}},"58":{"start":{"line":59,"column":0},"end":{"line":59,"column":61}},"59":{"start":{"line":60,"column":0},"end":{"line":60,"column":57}},"60":{"start":{"line":61,"column":0},"end":{"line":61,"column":92}},"61":{"start":{"line":62,"column":0},"end":{"line":62,"column":22}},"62":{"start":{"line":63,"column":0},"end":{"line":63,"column":19}},"63":{"start":{"line":64,"column":0},"end":{"line":64,"column":25}},"64":{"start":{"line":65,"column":0},"end":{"line":65,"column":96}},"65":{"start":{"line":66,"column":0},"end":{"line":66,"column":3}},"66":{"start":{"line":67,"column":0},"end":{"line":67,"column":2}},"69":{"start":{"line":70,"column":0},"end":{"line":70,"column":58}},"70":{"start":{"line":71,"column":0},"end":{"line":71,"column":28}},"71":{"start":{"line":72,"column":0},"end":{"line":72,"column":15}},"72":{"start":{"line":73,"column":0},"end":{"line":73,"column":21}},"73":{"start":{"line":74,"column":0},"end":{"line":74,"column":7}},"74":{"start":{"line":75,"column":0},"end":{"line":75,"column":34}},"75":{"start":{"line":76,"column":0},"end":{"line":76,"column":57}},"76":{"start":{"line":77,"column":0},"end":{"line":77,"column":92}},"77":{"start":{"line":78,"column":0},"end":{"line":78,"column":22}},"78":{"start":{"line":79,"column":0},"end":{"line":79,"column":19}},"79":{"start":{"line":80,"column":0},"end":{"line":80,"column":25}},"80":{"start":{"line":81,"column":0},"end":{"line":81,"column":91}},"81":{"start":{"line":82,"column":0},"end":{"line":82,"column":3}},"82":{"start":{"line":83,"column":0},"end":{"line":83,"column":2}},"85":{"start":{"line":86,"column":0},"end":{"line":86,"column":68}},"86":{"start":{"line":87,"column":0},"end":{"line":87,"column":28}},"87":{"start":{"line":88,"column":0},"end":{"line":88,"column":15}},"88":{"start":{"line":89,"column":0},"end":{"line":89,"column":21}},"90":{"start":{"line":91,"column":0},"end":{"line":91,"column":7}},"91":{"start":{"line":92,"column":0},"end":{"line":92,"column":51}},"92":{"start":{"line":93,"column":0},"end":{"line":93,"column":42}},"93":{"start":{"line":94,"column":0},"end":{"line":94,"column":28}},"94":{"start":{"line":95,"column":0},"end":{"line":95,"column":110}},"95":{"start":{"line":96,"column":0},"end":{"line":96,"column":9}},"96":{"start":{"line":97,"column":0},"end":{"line":97,"column":13}},"97":{"start":{"line":98,"column":0},"end":{"line":98,"column":5}},"99":{"start":{"line":100,"column":0},"end":{"line":100,"column":57}},"100":{"start":{"line":101,"column":0},"end":{"line":101,"column":52}},"101":{"start":{"line":102,"column":0},"end":{"line":102,"column":24}},"102":{"start":{"line":103,"column":0},"end":{"line":103,"column":70}},"103":{"start":{"line":104,"column":0},"end":{"line":104,"column":13}},"104":{"start":{"line":105,"column":0},"end":{"line":105,"column":5}},"107":{"start":{"line":108,"column":0},"end":{"line":108,"column":57}},"108":{"start":{"line":109,"column":0},"end":{"line":109,"column":23}},"109":{"start":{"line":110,"column":0},"end":{"line":110,"column":26}},"110":{"start":{"line":111,"column":0},"end":{"line":111,"column":13}},"111":{"start":{"line":112,"column":0},"end":{"line":112,"column":15}},"112":{"start":{"line":113,"column":0},"end":{"line":113,"column":6}},"114":{"start":{"line":115,"column":0},"end":{"line":115,"column":14}},"115":{"start":{"line":116,"column":0},"end":{"line":116,"column":28}},"116":{"start":{"line":117,"column":0},"end":{"line":117,"column":100}},"117":{"start":{"line":118,"column":0},"end":{"line":118,"column":9}},"118":{"start":{"line":119,"column":0},"end":{"line":119,"column":13}},"119":{"start":{"line":120,"column":0},"end":{"line":120,"column":5}},"121":{"start":{"line":122,"column":0},"end":{"line":122,"column":17}},"122":{"start":{"line":123,"column":0},"end":{"line":123,"column":19}},"123":{"start":{"line":124,"column":0},"end":{"line":124,"column":25}},"124":{"start":{"line":125,"column":0},"end":{"line":125,"column":103}},"125":{"start":{"line":126,"column":0},"end":{"line":126,"column":3}},"126":{"start":{"line":127,"column":0},"end":{"line":127,"column":2}}},"s":{"1":1,"9":1,"12":0,"13":0,"14":0,"15":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"69":1,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"85":1,"86":0,"87":0,"88":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0},"branchMap":{},"b":{},"fnMap":{"0":{"name":"userIsTeacherOrAdmin","decl":{"start":{"line":13,"column":0},"end":{"line":16,"column":1}},"loc":{"start":{"line":13,"column":0},"end":{"line":16,"column":1}},"line":13},"1":{"name":"getAllLearningObjectsController","decl":{"start":{"line":19,"column":47},"end":{"line":31,"column":2}},"loc":{"start":{"line":19,"column":47},"end":{"line":31,"column":2}},"line":19},"2":{"name":"getLearningObjectController","decl":{"start":{"line":34,"column":43},"end":{"line":51,"column":2}},"loc":{"start":{"line":34,"column":43},"end":{"line":51,"column":2}},"line":34},"3":{"name":"searchLearningObjectsController","decl":{"start":{"line":54,"column":47},"end":{"line":67,"column":2}},"loc":{"start":{"line":54,"column":47},"end":{"line":67,"column":2}},"line":54},"4":{"name":"getLearningObjectsForPathController","decl":{"start":{"line":70,"column":51},"end":{"line":83,"column":2}},"loc":{"start":{"line":70,"column":51},"end":{"line":83,"column":2}},"line":70},"5":{"name":"getLearningObjectByHruidLangVersionController","decl":{"start":{"line":86,"column":61},"end":{"line":127,"column":2}},"loc":{"start":{"line":86,"column":61},"end":{"line":127,"column":2}},"line":86}},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/learningPath/learningPathController.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/learningPath/learningPathController.ts","all":false,"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":118}},"20":{"start":{"line":21,"column":0},"end":{"line":21,"column":100}},"21":{"start":{"line":22,"column":0},"end":{"line":22,"column":7}},"22":{"start":{"line":23,"column":0},"end":{"line":23,"column":42}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":47}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":41}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":41}},"26":{"start":{"line":27,"column":0},"end":{"line":27,"column":53}},"27":{"start":{"line":28,"column":0},"end":{"line":28,"column":37}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":6}},"30":{"start":{"line":31,"column":0},"end":{"line":31,"column":74}},"31":{"start":{"line":32,"column":0},"end":{"line":32,"column":22}},"32":{"start":{"line":33,"column":0},"end":{"line":33,"column":19}},"33":{"start":{"line":34,"column":0},"end":{"line":34,"column":25}},"34":{"start":{"line":35,"column":0},"end":{"line":35,"column":70}},"35":{"start":{"line":36,"column":0},"end":{"line":36,"column":3}},"36":{"start":{"line":37,"column":0},"end":{"line":37,"column":2}},"42":{"start":{"line":43,"column":0},"end":{"line":43,"column":100}},"43":{"start":{"line":44,"column":0},"end":{"line":44,"column":7}},"44":{"start":{"line":45,"column":0},"end":{"line":45,"column":58}},"45":{"start":{"line":46,"column":0},"end":{"line":46,"column":82}},"47":{"start":{"line":48,"column":0},"end":{"line":48,"column":16}},"48":{"start":{"line":49,"column":0},"end":{"line":49,"column":63}},"49":{"start":{"line":50,"column":0},"end":{"line":50,"column":13}},"50":{"start":{"line":51,"column":0},"end":{"line":51,"column":5}},"52":{"start":{"line":53,"column":0},"end":{"line":53,"column":19}},"53":{"start":{"line":54,"column":0},"end":{"line":54,"column":19}},"54":{"start":{"line":55,"column":0},"end":{"line":55,"column":25}},"55":{"start":{"line":56,"column":0},"end":{"line":56,"column":64}},"56":{"start":{"line":57,"column":0},"end":{"line":57,"column":3}},"57":{"start":{"line":58,"column":0},"end":{"line":58,"column":2}}},"s":{"1":1,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"42":1,"43":0,"44":0,"45":0,"47":0,"48":0,"49":0,"50":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0},"branchMap":{},"b":{},"fnMap":{"0":{"name":"searchLearningPathsController","decl":{"start":{"line":21,"column":45},"end":{"line":37,"column":2}},"loc":{"start":{"line":21,"column":45},"end":{"line":37,"column":2}},"line":21},"1":{"name":"getLearningPathByIdController","decl":{"start":{"line":43,"column":45},"end":{"line":58,"column":2}},"loc":{"start":{"line":43,"column":45},"end":{"line":58,"column":2}},"line":43}},"f":{"0":0,"1":0}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/question/questionController.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/question/questionController.ts","all":false,"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":54}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":38}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":23}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":70}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":73}},"9":{"start":{"line":10,"column":0},"end":{"line":10,"column":7}},"10":{"start":{"line":11,"column":0},"end":{"line":11,"column":28}},"11":{"start":{"line":12,"column":0},"end":{"line":12,"column":22}},"12":{"start":{"line":13,"column":0},"end":{"line":13,"column":47}},"13":{"start":{"line":14,"column":0},"end":{"line":14,"column":41}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":44}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":3}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":2}},"19":{"start":{"line":20,"column":0},"end":{"line":20,"column":73}},"20":{"start":{"line":21,"column":0},"end":{"line":21,"column":38}},"21":{"start":{"line":22,"column":0},"end":{"line":22,"column":9}},"22":{"start":{"line":23,"column":0},"end":{"line":23,"column":11}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":10}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":9}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":15}},"26":{"start":{"line":27,"column":0},"end":{"line":27,"column":26}},"27":{"start":{"line":28,"column":0},"end":{"line":28,"column":16}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":19}},"29":{"start":{"line":30,"column":0},"end":{"line":30,"column":18}},"30":{"start":{"line":31,"column":0},"end":{"line":31,"column":13}},"31":{"start":{"line":32,"column":0},"end":{"line":32,"column":15}},"33":{"start":{"line":34,"column":0},"end":{"line":34,"column":52}},"34":{"start":{"line":35,"column":0},"end":{"line":35,"column":94}},"35":{"start":{"line":36,"column":0},"end":{"line":36,"column":3}},"36":{"start":{"line":37,"column":0},"end":{"line":37,"column":30}},"37":{"start":{"line":38,"column":0},"end":{"line":38,"column":52}},"39":{"start":{"line":40,"column":0},"end":{"line":40,"column":68}},"40":{"start":{"line":41,"column":0},"end":{"line":41,"column":25}},"41":{"start":{"line":42,"column":0},"end":{"line":42,"column":19}},"42":{"start":{"line":43,"column":0},"end":{"line":43,"column":11}},"43":{"start":{"line":44,"column":0},"end":{"line":44,"column":9}},"44":{"start":{"line":45,"column":0},"end":{"line":45,"column":10}},"45":{"start":{"line":46,"column":0},"end":{"line":46,"column":9}},"46":{"start":{"line":47,"column":0},"end":{"line":47,"column":17}},"47":{"start":{"line":48,"column":0},"end":{"line":48,"column":16}},"48":{"start":{"line":49,"column":0},"end":{"line":49,"column":26}},"49":{"start":{"line":50,"column":0},"end":{"line":50,"column":16}},"50":{"start":{"line":51,"column":0},"end":{"line":51,"column":19}},"51":{"start":{"line":52,"column":0},"end":{"line":52,"column":53}},"52":{"start":{"line":53,"column":0},"end":{"line":53,"column":4}},"54":{"start":{"line":55,"column":0},"end":{"line":55,"column":37}},"55":{"start":{"line":56,"column":0},"end":{"line":56,"column":3}},"58":{"start":{"line":59,"column":0},"end":{"line":59,"column":72}},"59":{"start":{"line":60,"column":0},"end":{"line":60,"column":38}},"60":{"start":{"line":61,"column":0},"end":{"line":61,"column":9}},"61":{"start":{"line":62,"column":0},"end":{"line":62,"column":11}},"62":{"start":{"line":63,"column":0},"end":{"line":63,"column":10}},"63":{"start":{"line":64,"column":0},"end":{"line":64,"column":9}},"64":{"start":{"line":65,"column":0},"end":{"line":65,"column":15}},"65":{"start":{"line":66,"column":0},"end":{"line":66,"column":12}},"66":{"start":{"line":67,"column":0},"end":{"line":67,"column":19}},"67":{"start":{"line":68,"column":0},"end":{"line":68,"column":13}},"68":{"start":{"line":69,"column":0},"end":{"line":69,"column":15}},"70":{"start":{"line":71,"column":0},"end":{"line":71,"column":64}},"71":{"start":{"line":72,"column":0},"end":{"line":72,"column":103}},"72":{"start":{"line":73,"column":0},"end":{"line":73,"column":3}},"73":{"start":{"line":74,"column":0},"end":{"line":74,"column":30}},"74":{"start":{"line":75,"column":0},"end":{"line":75,"column":52}},"76":{"start":{"line":77,"column":0},"end":{"line":77,"column":66}},"77":{"start":{"line":78,"column":0},"end":{"line":78,"column":25}},"78":{"start":{"line":79,"column":0},"end":{"line":79,"column":19}},"79":{"start":{"line":80,"column":0},"end":{"line":80,"column":11}},"80":{"start":{"line":81,"column":0},"end":{"line":81,"column":9}},"81":{"start":{"line":82,"column":0},"end":{"line":82,"column":10}},"82":{"start":{"line":83,"column":0},"end":{"line":83,"column":9}},"83":{"start":{"line":84,"column":0},"end":{"line":84,"column":17}},"84":{"start":{"line":85,"column":0},"end":{"line":85,"column":16}},"85":{"start":{"line":86,"column":0},"end":{"line":86,"column":12}},"86":{"start":{"line":87,"column":0},"end":{"line":87,"column":18}},"87":{"start":{"line":88,"column":0},"end":{"line":88,"column":4}},"89":{"start":{"line":90,"column":0},"end":{"line":90,"column":36}},"90":{"start":{"line":91,"column":0},"end":{"line":91,"column":3}},"93":{"start":{"line":94,"column":0},"end":{"line":94,"column":72}},"94":{"start":{"line":95,"column":0},"end":{"line":95,"column":36}},"95":{"start":{"line":96,"column":0},"end":{"line":96,"column":28}},"97":{"start":{"line":98,"column":0},"end":{"line":98,"column":29}},"98":{"start":{"line":99,"column":0},"end":{"line":99,"column":60}},"99":{"start":{"line":100,"column":0},"end":{"line":100,"column":3}},"100":{"start":{"line":101,"column":0},"end":{"line":101,"column":30}},"102":{"start":{"line":103,"column":0},"end":{"line":103,"column":92}},"103":{"start":{"line":104,"column":0},"end":{"line":104,"column":28}},"104":{"start":{"line":105,"column":0},"end":{"line":105,"column":3}},"107":{"start":{"line":108,"column":0},"end":{"line":108,"column":65}},"108":{"start":{"line":109,"column":0},"end":{"line":109,"column":36}},"109":{"start":{"line":110,"column":0},"end":{"line":110,"column":29}},"110":{"start":{"line":111,"column":0},"end":{"line":111,"column":15}},"111":{"start":{"line":112,"column":0},"end":{"line":112,"column":47}},"112":{"start":{"line":113,"column":0},"end":{"line":113,"column":3}},"113":{"start":{"line":114,"column":0},"end":{"line":114,"column":82}},"114":{"start":{"line":115,"column":0},"end":{"line":115,"column":32}},"115":{"start":{"line":116,"column":0},"end":{"line":116,"column":3}},"118":{"start":{"line":119,"column":0},"end":{"line":119,"column":72}},"119":{"start":{"line":120,"column":0},"end":{"line":120,"column":43}},"120":{"start":{"line":121,"column":0},"end":{"line":121,"column":28}},"122":{"start":{"line":123,"column":0},"end":{"line":123,"column":14}},"123":{"start":{"line":124,"column":0},"end":{"line":124,"column":75}},"124":{"start":{"line":125,"column":0},"end":{"line":125,"column":3}},"125":{"start":{"line":126,"column":0},"end":{"line":126,"column":98}},"126":{"start":{"line":127,"column":0},"end":{"line":127,"column":35}},"127":{"start":{"line":128,"column":0},"end":{"line":128,"column":3}},"130":{"start":{"line":131,"column":0},"end":{"line":131,"column":62}},"131":{"start":{"line":132,"column":0},"end":{"line":132,"column":36}},"132":{"start":{"line":133,"column":0},"end":{"line":133,"column":66}},"133":{"start":{"line":134,"column":0},"end":{"line":134,"column":14}},"134":{"start":{"line":135,"column":0},"end":{"line":135,"column":3}},"137":{"start":{"line":138,"column":0},"end":{"line":138,"column":67}},"138":{"start":{"line":139,"column":0},"end":{"line":139,"column":32}},"139":{"start":{"line":140,"column":0},"end":{"line":140,"column":62}},"140":{"start":{"line":141,"column":0},"end":{"line":141,"column":19}},"141":{"start":{"line":142,"column":0},"end":{"line":142,"column":39}},"142":{"start":{"line":143,"column":0},"end":{"line":143,"column":4}},"143":{"start":{"line":144,"column":0},"end":{"line":144,"column":22}},"144":{"start":{"line":145,"column":0},"end":{"line":145,"column":3}},"147":{"start":{"line":148,"column":0},"end":{"line":148,"column":68}},"148":{"start":{"line":149,"column":0},"end":{"line":149,"column":33}},"149":{"start":{"line":150,"column":0},"end":{"line":150,"column":63}},"150":{"start":{"line":151,"column":0},"end":{"line":151,"column":20}},"151":{"start":{"line":152,"column":0},"end":{"line":152,"column":13}},"152":{"start":{"line":153,"column":0},"end":{"line":153,"column":4}},"153":{"start":{"line":154,"column":0},"end":{"line":154,"column":22}},"154":{"start":{"line":155,"column":0},"end":{"line":155,"column":3}},"157":{"start":{"line":158,"column":0},"end":{"line":158,"column":73}},"158":{"start":{"line":159,"column":0},"end":{"line":159,"column":47}},"159":{"start":{"line":160,"column":0},"end":{"line":160,"column":68}},"160":{"start":{"line":161,"column":0},"end":{"line":161,"column":25}},"161":{"start":{"line":162,"column":0},"end":{"line":162,"column":20}},"162":{"start":{"line":163,"column":0},"end":{"line":163,"column":13}},"163":{"start":{"line":164,"column":0},"end":{"line":164,"column":4}},"164":{"start":{"line":165,"column":0},"end":{"line":165,"column":22}},"165":{"start":{"line":166,"column":0},"end":{"line":166,"column":3}},"168":{"start":{"line":169,"column":0},"end":{"line":169,"column":70}},"169":{"start":{"line":170,"column":0},"end":{"line":170,"column":36}},"170":{"start":{"line":171,"column":0},"end":{"line":171,"column":77}},"171":{"start":{"line":172,"column":0},"end":{"line":172,"column":17}},"172":{"start":{"line":173,"column":0},"end":{"line":173,"column":3}},"175":{"start":{"line":176,"column":0},"end":{"line":176,"column":65}},"176":{"start":{"line":177,"column":0},"end":{"line":177,"column":36}},"177":{"start":{"line":178,"column":0},"end":{"line":178,"column":59}},"178":{"start":{"line":179,"column":0},"end":{"line":179,"column":24}},"179":{"start":{"line":180,"column":0},"end":{"line":180,"column":3}},"182":{"start":{"line":183,"column":0},"end":{"line":183,"column":72}},"183":{"start":{"line":184,"column":0},"end":{"line":184,"column":43}},"184":{"start":{"line":185,"column":0},"end":{"line":185,"column":73}},"185":{"start":{"line":186,"column":0},"end":{"line":186,"column":24}},"186":{"start":{"line":187,"column":0},"end":{"line":187,"column":3}}},"s":{"1":1,"3":1,"4":1,"6":1,"7":84,"8":84,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"33":0,"34":0,"35":0,"36":0,"37":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"54":0,"55":0,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"70":0,"71":0,"72":0,"73":0,"74":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"89":0,"90":0,"93":1,"94":0,"95":0,"97":0,"98":0,"99":0,"100":0,"102":0,"103":0,"104":0,"107":1,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"118":1,"119":0,"120":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"130":1,"131":0,"132":0,"133":0,"134":0,"137":1,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"147":1,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"157":1,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"168":1,"169":0,"170":0,"171":0,"172":0,"175":1,"176":0,"177":0,"178":0,"179":0,"182":1,"183":0,"184":0,"185":0,"186":0},"branchMap":{"0":{"type":"branch","line":7,"loc":{"start":{"line":7,"column":22},"end":{"line":17,"column":2}},"locations":[{"start":{"line":7,"column":22},"end":{"line":17,"column":2}}]}},"b":{"0":[84]},"fnMap":{"0":{"name":"handleRequest","decl":{"start":{"line":7,"column":22},"end":{"line":17,"column":2}},"loc":{"start":{"line":7,"column":22},"end":{"line":17,"column":2}},"line":7}},"f":{"0":84}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/student/studentAssignmentController.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/student/studentAssignmentController.ts","all":false,"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":83}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":78}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":75}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":57}},"9":{"start":{"line":10,"column":0},"end":{"line":10,"column":10}},"10":{"start":{"line":11,"column":0},"end":{"line":11,"column":96}},"11":{"start":{"line":12,"column":0},"end":{"line":12,"column":17}},"12":{"start":{"line":13,"column":0},"end":{"line":13,"column":5}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":1}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":44}},"17":{"start":{"line":18,"column":0},"end":{"line":18,"column":28}},"18":{"start":{"line":19,"column":0},"end":{"line":19,"column":15}},"19":{"start":{"line":20,"column":0},"end":{"line":20,"column":21}},"20":{"start":{"line":21,"column":0},"end":{"line":21,"column":7}},"21":{"start":{"line":22,"column":0},"end":{"line":22,"column":61}},"26":{"start":{"line":27,"column":0},"end":{"line":27,"column":81}},"27":{"start":{"line":28,"column":0},"end":{"line":28,"column":78}},"29":{"start":{"line":30,"column":0},"end":{"line":30,"column":55}},"32":{"start":{"line":33,"column":0},"end":{"line":33,"column":37}},"33":{"start":{"line":34,"column":0},"end":{"line":34,"column":69}},"34":{"start":{"line":35,"column":0},"end":{"line":35,"column":13}},"35":{"start":{"line":36,"column":0},"end":{"line":36,"column":5}},"37":{"start":{"line":38,"column":0},"end":{"line":38,"column":69}},"38":{"start":{"line":39,"column":0},"end":{"line":39,"column":16}},"39":{"start":{"line":40,"column":0},"end":{"line":40,"column":17}},"40":{"start":{"line":41,"column":0},"end":{"line":41,"column":12}},"41":{"start":{"line":42,"column":0},"end":{"line":42,"column":11}},"42":{"start":{"line":43,"column":0},"end":{"line":43,"column":6}},"43":{"start":{"line":44,"column":0},"end":{"line":44,"column":38}},"44":{"start":{"line":45,"column":0},"end":{"line":45,"column":19}},"45":{"start":{"line":46,"column":0},"end":{"line":46,"column":7}},"46":{"start":{"line":47,"column":0},"end":{"line":47,"column":18}},"47":{"start":{"line":48,"column":0},"end":{"line":48,"column":80}},"48":{"start":{"line":49,"column":0},"end":{"line":49,"column":3}},"49":{"start":{"line":50,"column":0},"end":{"line":50,"column":2}}},"s":{"1":1,"4":1,"6":1,"8":14,"9":14,"10":14,"11":8,"12":8,"14":14,"16":1,"17":14,"18":14,"19":14,"20":14,"21":14,"26":14,"27":14,"29":14,"32":14,"33":0,"34":0,"35":0,"37":14,"38":14,"39":14,"40":14,"41":14,"42":14,"43":14,"44":14,"45":0,"46":0,"47":0,"48":0,"49":14},"branchMap":{"0":{"type":"branch","line":9,"loc":{"start":{"line":9,"column":0},"end":{"line":15,"column":1}},"locations":[{"start":{"line":9,"column":0},"end":{"line":15,"column":1}}]},"1":{"type":"branch","line":11,"loc":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"locations":[{"start":{"line":11,"column":4},"end":{"line":11,"column":17}}]},"2":{"type":"branch","line":11,"loc":{"start":{"line":11,"column":90},"end":{"line":13,"column":5}},"locations":[{"start":{"line":11,"column":90},"end":{"line":13,"column":5}}]},"3":{"type":"branch","line":11,"loc":{"start":{"line":11,"column":29},"end":{"line":11,"column":90}},"locations":[{"start":{"line":11,"column":29},"end":{"line":11,"column":90}}]},"4":{"type":"branch","line":17,"loc":{"start":{"line":17,"column":37},"end":{"line":50,"column":2}},"locations":[{"start":{"line":17,"column":37},"end":{"line":50,"column":2}}]},"5":{"type":"branch","line":28,"loc":{"start":{"line":28,"column":54},"end":{"line":28,"column":72}},"locations":[{"start":{"line":28,"column":54},"end":{"line":28,"column":72}}]},"6":{"type":"branch","line":28,"loc":{"start":{"line":28,"column":63},"end":{"line":28,"column":78}},"locations":[{"start":{"line":28,"column":63},"end":{"line":28,"column":78}}]},"7":{"type":"branch","line":30,"loc":{"start":{"line":30,"column":48},"end":{"line":30,"column":55}},"locations":[{"start":{"line":30,"column":48},"end":{"line":30,"column":55}}]},"8":{"type":"branch","line":33,"loc":{"start":{"line":33,"column":36},"end":{"line":36,"column":5}},"locations":[{"start":{"line":33,"column":36},"end":{"line":36,"column":5}}]},"9":{"type":"branch","line":45,"loc":{"start":{"line":45,"column":2},"end":{"line":49,"column":3}},"locations":[{"start":{"line":45,"column":2},"end":{"line":49,"column":3}}]}},"b":{"0":[14],"1":[6],"2":[8],"3":[6],"4":[14],"5":[3],"6":[11],"7":[12],"8":[0],"9":[0]},"fnMap":{"0":{"name":"extractSortableFields","decl":{"start":{"line":9,"column":0},"end":{"line":15,"column":1}},"loc":{"start":{"line":9,"column":0},"end":{"line":15,"column":1}},"line":9},"1":{"name":"getStudentAssignments","decl":{"start":{"line":17,"column":37},"end":{"line":50,"column":2}},"loc":{"start":{"line":17,"column":37},"end":{"line":50,"column":2}},"line":17}},"f":{"0":14,"1":14}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/student/studentAuthController.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/student/studentAuthController.ts","all":false,"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":49}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":58}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":53}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":59}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":96}},"17":{"start":{"line":18,"column":0},"end":{"line":18,"column":59}},"20":{"start":{"line":21,"column":0},"end":{"line":21,"column":36}},"21":{"start":{"line":22,"column":0},"end":{"line":22,"column":20}},"22":{"start":{"line":23,"column":0},"end":{"line":23,"column":54}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":3}},"26":{"start":{"line":27,"column":0},"end":{"line":27,"column":62}},"27":{"start":{"line":28,"column":0},"end":{"line":28,"column":41}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":20}},"29":{"start":{"line":30,"column":0},"end":{"line":30,"column":43}},"30":{"start":{"line":31,"column":0},"end":{"line":31,"column":3}},"34":{"start":{"line":35,"column":0},"end":{"line":35,"column":92}},"36":{"start":{"line":37,"column":0},"end":{"line":37,"column":34}},"37":{"start":{"line":38,"column":0},"end":{"line":38,"column":20}},"38":{"start":{"line":39,"column":0},"end":{"line":39,"column":43}},"39":{"start":{"line":40,"column":0},"end":{"line":40,"column":3}},"42":{"start":{"line":43,"column":0},"end":{"line":43,"column":89}},"43":{"start":{"line":44,"column":0},"end":{"line":44,"column":25}},"44":{"start":{"line":45,"column":0},"end":{"line":45,"column":20}},"45":{"start":{"line":46,"column":0},"end":{"line":46,"column":43}},"46":{"start":{"line":47,"column":0},"end":{"line":47,"column":3}},"48":{"start":{"line":49,"column":0},"end":{"line":49,"column":12}},"49":{"start":{"line":50,"column":0},"end":{"line":50,"column":34}},"50":{"start":{"line":51,"column":0},"end":{"line":51,"column":41}},"51":{"start":{"line":52,"column":0},"end":{"line":52,"column":5}},"52":{"start":{"line":53,"column":0},"end":{"line":53,"column":3}}},"s":{"1":1,"2":1,"4":1,"5":1,"6":1,"16":1,"17":0,"20":0,"21":0,"22":0,"23":0,"26":0,"27":0,"28":0,"29":0,"30":0,"34":0,"36":0,"37":0,"38":0,"39":0,"42":0,"43":0,"44":0,"45":0,"46":0,"48":0,"49":0,"50":0,"51":0,"52":0},"branchMap":{},"b":{},"fnMap":{},"f":{}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/student/studentClassController.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/student/studentClassController.ts","all":false,"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":49}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":55}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":78}},"11":{"start":{"line":12,"column":0},"end":{"line":12,"column":46}},"12":{"start":{"line":13,"column":0},"end":{"line":13,"column":72}},"13":{"start":{"line":14,"column":0},"end":{"line":14,"column":65}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":74}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":42}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":5}},"17":{"start":{"line":18,"column":0},"end":{"line":18,"column":2}}},"s":{"1":1,"2":1,"4":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1},"branchMap":{"0":{"type":"branch","line":13,"loc":{"start":{"line":13,"column":4},"end":{"line":17,"column":5}},"locations":[{"start":{"line":13,"column":4},"end":{"line":17,"column":5}}]}},"b":{"0":[1]},"fnMap":{},"f":{}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/student/studentSubmissionController.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/student/studentSubmissionController.ts","all":false,"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":55}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":76}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":50}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":112}},"9":{"start":{"line":10,"column":0},"end":{"line":10,"column":13}},"10":{"start":{"line":11,"column":0},"end":{"line":11,"column":62}},"11":{"start":{"line":12,"column":0},"end":{"line":12,"column":69}},"13":{"start":{"line":14,"column":0},"end":{"line":14,"column":121}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":45}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":23}},"17":{"start":{"line":18,"column":0},"end":{"line":18,"column":22}},"18":{"start":{"line":19,"column":0},"end":{"line":19,"column":9}},"19":{"start":{"line":20,"column":0},"end":{"line":20,"column":5}},"21":{"start":{"line":22,"column":0},"end":{"line":22,"column":103}},"22":{"start":{"line":23,"column":0},"end":{"line":23,"column":69}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":65}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":109}},"27":{"start":{"line":28,"column":0},"end":{"line":28,"column":42}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":5}},"30":{"start":{"line":31,"column":0},"end":{"line":31,"column":103}},"31":{"start":{"line":32,"column":0},"end":{"line":32,"column":56}},"32":{"start":{"line":33,"column":0},"end":{"line":33,"column":65}},"34":{"start":{"line":35,"column":0},"end":{"line":35,"column":131}},"36":{"start":{"line":37,"column":0},"end":{"line":37,"column":42}},"37":{"start":{"line":38,"column":0},"end":{"line":38,"column":5}},"38":{"start":{"line":39,"column":0},"end":{"line":39,"column":1}}},"s":{"1":1,"4":1,"6":1,"7":1,"9":2,"10":2,"11":2,"13":2,"14":1,"15":1,"17":1,"18":1,"19":2,"21":1,"22":1,"23":1,"25":1,"27":1,"28":1,"30":1,"31":1,"32":1,"34":1,"36":1,"37":1,"38":1},"branchMap":{"0":{"type":"branch","line":8,"loc":{"start":{"line":8,"column":4},"end":{"line":20,"column":5}},"locations":[{"start":{"line":8,"column":4},"end":{"line":20,"column":5}}]},"1":{"type":"branch","line":14,"loc":{"start":{"line":14,"column":119},"end":{"line":19,"column":9}},"locations":[{"start":{"line":14,"column":119},"end":{"line":19,"column":9}}]},"2":{"type":"branch","line":22,"loc":{"start":{"line":22,"column":4},"end":{"line":29,"column":5}},"locations":[{"start":{"line":22,"column":4},"end":{"line":29,"column":5}}]},"3":{"type":"branch","line":31,"loc":{"start":{"line":31,"column":4},"end":{"line":38,"column":5}},"locations":[{"start":{"line":31,"column":4},"end":{"line":38,"column":5}}]}},"b":{"0":[2],"1":[1],"2":[1],"3":[1]},"fnMap":{"0":{"name":"createSubmission","decl":{"start":{"line":8,"column":4},"end":{"line":20,"column":5}},"loc":{"start":{"line":8,"column":4},"end":{"line":20,"column":5}},"line":8},"1":{"name":"getSubmissionsForAssignment","decl":{"start":{"line":22,"column":4},"end":{"line":29,"column":5}},"loc":{"start":{"line":22,"column":4},"end":{"line":29,"column":5}},"line":22},"2":{"name":"getSubmissionsForEvaluation","decl":{"start":{"line":31,"column":4},"end":{"line":38,"column":5}},"loc":{"start":{"line":31,"column":4},"end":{"line":38,"column":5}},"line":31}},"f":{"0":2,"1":1,"2":1}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/student/studentTeamController.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/student/studentTeamController.ts","all":false,"statementMap":{"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":78}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":67}},"9":{"start":{"line":10,"column":0},"end":{"line":10,"column":99}},"10":{"start":{"line":11,"column":0},"end":{"line":11,"column":7}},"11":{"start":{"line":12,"column":0},"end":{"line":12,"column":61}},"13":{"start":{"line":14,"column":0},"end":{"line":14,"column":78}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":32}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":19}},"17":{"start":{"line":18,"column":0},"end":{"line":18,"column":25}},"18":{"start":{"line":19,"column":0},"end":{"line":19,"column":90}},"19":{"start":{"line":20,"column":0},"end":{"line":20,"column":3}},"20":{"start":{"line":21,"column":0},"end":{"line":21,"column":2}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":103}},"26":{"start":{"line":27,"column":0},"end":{"line":27,"column":7}},"27":{"start":{"line":28,"column":0},"end":{"line":28,"column":61}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":71}},"30":{"start":{"line":31,"column":0},"end":{"line":31,"column":30}},"31":{"start":{"line":32,"column":0},"end":{"line":32,"column":63}},"32":{"start":{"line":33,"column":0},"end":{"line":33,"column":13}},"33":{"start":{"line":34,"column":0},"end":{"line":34,"column":5}},"35":{"start":{"line":36,"column":0},"end":{"line":36,"column":75}},"37":{"start":{"line":38,"column":0},"end":{"line":38,"column":16}},"38":{"start":{"line":39,"column":0},"end":{"line":39,"column":80}},"39":{"start":{"line":40,"column":0},"end":{"line":40,"column":13}},"40":{"start":{"line":41,"column":0},"end":{"line":41,"column":5}},"42":{"start":{"line":43,"column":0},"end":{"line":43,"column":31}},"43":{"start":{"line":44,"column":0},"end":{"line":44,"column":19}},"44":{"start":{"line":45,"column":0},"end":{"line":45,"column":25}},"45":{"start":{"line":46,"column":0},"end":{"line":46,"column":90}},"46":{"start":{"line":47,"column":0},"end":{"line":47,"column":3}},"47":{"start":{"line":48,"column":0},"end":{"line":48,"column":2}},"52":{"start":{"line":53,"column":0},"end":{"line":53,"column":98}},"53":{"start":{"line":54,"column":0},"end":{"line":54,"column":7}},"54":{"start":{"line":55,"column":0},"end":{"line":55,"column":20}},"55":{"start":{"line":56,"column":0},"end":{"line":56,"column":69}},"56":{"start":{"line":57,"column":0},"end":{"line":57,"column":13}},"57":{"start":{"line":58,"column":0},"end":{"line":58,"column":5}},"59":{"start":{"line":60,"column":0},"end":{"line":60,"column":59}},"61":{"start":{"line":62,"column":0},"end":{"line":62,"column":24}},"62":{"start":{"line":63,"column":0},"end":{"line":63,"column":57}},"63":{"start":{"line":64,"column":0},"end":{"line":64,"column":13}},"64":{"start":{"line":65,"column":0},"end":{"line":65,"column":5}},"66":{"start":{"line":67,"column":0},"end":{"line":67,"column":62}},"68":{"start":{"line":69,"column":0},"end":{"line":69,"column":16}},"69":{"start":{"line":70,"column":0},"end":{"line":70,"column":61}},"70":{"start":{"line":71,"column":0},"end":{"line":71,"column":13}},"71":{"start":{"line":72,"column":0},"end":{"line":72,"column":5}},"73":{"start":{"line":74,"column":0},"end":{"line":74,"column":40}},"74":{"start":{"line":75,"column":0},"end":{"line":75,"column":19}},"75":{"start":{"line":76,"column":0},"end":{"line":76,"column":25}},"76":{"start":{"line":77,"column":0},"end":{"line":77,"column":94}},"77":{"start":{"line":78,"column":0},"end":{"line":78,"column":3}},"78":{"start":{"line":79,"column":0},"end":{"line":79,"column":2}}},"s":{"3":1,"4":1,"9":1,"10":0,"11":0,"13":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"25":1,"26":0,"27":0,"28":0,"30":0,"31":0,"32":0,"33":0,"35":0,"37":0,"38":0,"39":0,"40":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"52":1,"53":0,"54":0,"55":0,"56":0,"57":0,"59":0,"61":0,"62":0,"63":0,"64":0,"66":0,"68":0,"69":0,"70":0,"71":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0},"branchMap":{},"b":{},"fnMap":{"0":{"name":"getStudentTeams","decl":{"start":{"line":10,"column":31},"end":{"line":21,"column":2}},"loc":{"start":{"line":10,"column":31},"end":{"line":21,"column":2}},"line":10},"1":{"name":"getTeamByAssignment","decl":{"start":{"line":26,"column":35},"end":{"line":48,"column":2}},"loc":{"start":{"line":26,"column":35},"end":{"line":48,"column":2}},"line":26},"2":{"name":"getTeamMembers","decl":{"start":{"line":53,"column":30},"end":{"line":79,"column":2}},"loc":{"start":{"line":53,"column":30},"end":{"line":79,"column":2}},"line":53}},"f":{"0":0,"1":0,"2":0}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/teacher/feedbackController.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/teacher/feedbackController.ts","all":false,"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":53}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":76}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":41}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":88}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":13}},"9":{"start":{"line":10,"column":0},"end":{"line":10,"column":60}},"10":{"start":{"line":11,"column":0},"end":{"line":11,"column":69}},"12":{"start":{"line":13,"column":0},"end":{"line":13,"column":130}},"13":{"start":{"line":14,"column":0},"end":{"line":14,"column":31}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":25}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":73}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":9}},"17":{"start":{"line":18,"column":0},"end":{"line":18,"column":5}},"19":{"start":{"line":20,"column":0},"end":{"line":20,"column":75}},"20":{"start":{"line":21,"column":0},"end":{"line":21,"column":13}},"21":{"start":{"line":22,"column":0},"end":{"line":22,"column":69}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":48}},"26":{"start":{"line":27,"column":0},"end":{"line":27,"column":25}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":106}},"29":{"start":{"line":30,"column":0},"end":{"line":30,"column":43}},"30":{"start":{"line":31,"column":0},"end":{"line":31,"column":25}},"31":{"start":{"line":32,"column":0},"end":{"line":32,"column":71}},"32":{"start":{"line":33,"column":0},"end":{"line":33,"column":9}},"34":{"start":{"line":35,"column":0},"end":{"line":35,"column":5}},"36":{"start":{"line":37,"column":0},"end":{"line":37,"column":85}},"37":{"start":{"line":38,"column":0},"end":{"line":38,"column":13}},"38":{"start":{"line":39,"column":0},"end":{"line":39,"column":73}},"39":{"start":{"line":40,"column":0},"end":{"line":40,"column":69}},"41":{"start":{"line":42,"column":0},"end":{"line":42,"column":110}},"42":{"start":{"line":43,"column":0},"end":{"line":43,"column":27}},"43":{"start":{"line":44,"column":0},"end":{"line":44,"column":35}},"44":{"start":{"line":45,"column":0},"end":{"line":45,"column":20}},"45":{"start":{"line":46,"column":0},"end":{"line":46,"column":68}},"46":{"start":{"line":47,"column":0},"end":{"line":47,"column":13}},"47":{"start":{"line":48,"column":0},"end":{"line":48,"column":25}},"48":{"start":{"line":49,"column":0},"end":{"line":49,"column":73}},"49":{"start":{"line":50,"column":0},"end":{"line":50,"column":9}},"51":{"start":{"line":52,"column":0},"end":{"line":52,"column":5}},"53":{"start":{"line":54,"column":0},"end":{"line":54,"column":88}},"54":{"start":{"line":55,"column":0},"end":{"line":55,"column":13}},"55":{"start":{"line":56,"column":0},"end":{"line":56,"column":73}},"56":{"start":{"line":57,"column":0},"end":{"line":57,"column":69}},"58":{"start":{"line":59,"column":0},"end":{"line":59,"column":68}},"59":{"start":{"line":60,"column":0},"end":{"line":60,"column":119}},"60":{"start":{"line":61,"column":0},"end":{"line":61,"column":30}},"61":{"start":{"line":62,"column":0},"end":{"line":62,"column":25}},"62":{"start":{"line":63,"column":0},"end":{"line":63,"column":71}},"63":{"start":{"line":64,"column":0},"end":{"line":64,"column":9}},"64":{"start":{"line":65,"column":0},"end":{"line":65,"column":5}},"66":{"start":{"line":67,"column":0},"end":{"line":67,"column":88}},"67":{"start":{"line":68,"column":0},"end":{"line":68,"column":13}},"68":{"start":{"line":69,"column":0},"end":{"line":69,"column":73}},"69":{"start":{"line":70,"column":0},"end":{"line":70,"column":69}},"71":{"start":{"line":72,"column":0},"end":{"line":72,"column":79}},"72":{"start":{"line":73,"column":0},"end":{"line":73,"column":52}},"73":{"start":{"line":74,"column":0},"end":{"line":74,"column":25}},"74":{"start":{"line":75,"column":0},"end":{"line":75,"column":71}},"75":{"start":{"line":76,"column":0},"end":{"line":76,"column":9}},"76":{"start":{"line":77,"column":0},"end":{"line":77,"column":5}},"77":{"start":{"line":78,"column":0},"end":{"line":78,"column":1}}},"s":{"1":1,"4":1,"6":1,"7":1,"8":0,"9":0,"10":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"19":1,"20":0,"21":0,"23":0,"26":0,"28":0,"29":0,"30":0,"31":0,"32":0,"34":0,"36":1,"37":0,"38":0,"39":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"51":0,"53":1,"54":0,"55":0,"56":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"66":1,"67":0,"68":0,"69":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":1},"branchMap":{},"b":{},"fnMap":{"0":{"name":"getAllFeedbackForEvaluation","decl":{"start":{"line":8,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":8,"column":4},"end":{"line":18,"column":5}},"line":8},"1":{"name":"createFeedback","decl":{"start":{"line":20,"column":4},"end":{"line":35,"column":5}},"loc":{"start":{"line":20,"column":4},"end":{"line":35,"column":5}},"line":20},"2":{"name":"getFeedbackForSubmission","decl":{"start":{"line":37,"column":4},"end":{"line":52,"column":5}},"loc":{"start":{"line":37,"column":4},"end":{"line":52,"column":5}},"line":37},"3":{"name":"updateFeedbackForSubmission","decl":{"start":{"line":54,"column":4},"end":{"line":65,"column":5}},"loc":{"start":{"line":54,"column":4},"end":{"line":65,"column":5}},"line":54},"4":{"name":"deleteFeedbackForSubmission","decl":{"start":{"line":67,"column":4},"end":{"line":77,"column":5}},"loc":{"start":{"line":67,"column":4},"end":{"line":77,"column":5}},"line":67}},"f":{"0":0,"1":0,"2":0,"3":0,"4":0}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/teacher/inviteController.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/teacher/inviteController.ts","all":false,"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":49}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":57}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":78}},"13":{"start":{"line":14,"column":0},"end":{"line":14,"column":109}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":57}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":68}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":66}},"18":{"start":{"line":19,"column":0},"end":{"line":19,"column":101}},"19":{"start":{"line":20,"column":0},"end":{"line":20,"column":37}},"20":{"start":{"line":21,"column":0},"end":{"line":21,"column":4}},"29":{"start":{"line":30,"column":0},"end":{"line":30,"column":122}},"30":{"start":{"line":31,"column":0},"end":{"line":31,"column":57}},"31":{"start":{"line":32,"column":0},"end":{"line":32,"column":66}},"33":{"start":{"line":34,"column":0},"end":{"line":34,"column":101}},"34":{"start":{"line":35,"column":0},"end":{"line":35,"column":38}},"35":{"start":{"line":36,"column":0},"end":{"line":36,"column":3}},"43":{"start":{"line":44,"column":0},"end":{"line":44,"column":124}},"44":{"start":{"line":45,"column":0},"end":{"line":45,"column":61}},"46":{"start":{"line":47,"column":0},"end":{"line":47,"column":89}},"47":{"start":{"line":48,"column":0},"end":{"line":48,"column":38}},"48":{"start":{"line":49,"column":0},"end":{"line":49,"column":3}},"57":{"start":{"line":58,"column":0},"end":{"line":58,"column":115}},"58":{"start":{"line":59,"column":0},"end":{"line":59,"column":59}},"59":{"start":{"line":60,"column":0},"end":{"line":60,"column":52}},"60":{"start":{"line":61,"column":0},"end":{"line":61,"column":61}},"62":{"start":{"line":63,"column":0},"end":{"line":63,"column":29}},"63":{"start":{"line":64,"column":0},"end":{"line":64,"column":97}},"64":{"start":{"line":65,"column":0},"end":{"line":65,"column":41}},"65":{"start":{"line":66,"column":0},"end":{"line":66,"column":70}},"66":{"start":{"line":67,"column":0},"end":{"line":67,"column":86}},"67":{"start":{"line":68,"column":0},"end":{"line":68,"column":41}},"68":{"start":{"line":69,"column":0},"end":{"line":69,"column":6}},"69":{"start":{"line":70,"column":0},"end":{"line":70,"column":3}},"81":{"start":{"line":82,"column":0},"end":{"line":82,"column":109}},"82":{"start":{"line":83,"column":0},"end":{"line":83,"column":59}},"83":{"start":{"line":84,"column":0},"end":{"line":84,"column":57}},"84":{"start":{"line":85,"column":0},"end":{"line":85,"column":66}},"86":{"start":{"line":87,"column":0},"end":{"line":87,"column":95}},"87":{"start":{"line":88,"column":0},"end":{"line":88,"column":88}},"88":{"start":{"line":89,"column":0},"end":{"line":89,"column":3}}},"s":{"1":1,"3":1,"5":1,"13":1,"14":7,"15":7,"16":7,"18":7,"19":3,"20":3,"29":1,"30":2,"31":2,"33":2,"34":1,"35":1,"43":1,"44":1,"46":1,"47":1,"48":1,"57":1,"58":4,"59":4,"60":4,"62":4,"63":3,"64":1,"65":4,"66":1,"67":1,"68":1,"69":4,"81":1,"82":4,"83":4,"84":4,"86":4,"87":2,"88":2},"branchMap":{"0":{"type":"branch","line":14,"loc":{"start":{"line":14,"column":41},"end":{"line":21,"column":4}},"locations":[{"start":{"line":14,"column":41},"end":{"line":21,"column":4}}]},"1":{"type":"branch","line":19,"loc":{"start":{"line":19,"column":99},"end":{"line":21,"column":4}},"locations":[{"start":{"line":19,"column":99},"end":{"line":21,"column":4}}]},"2":{"type":"branch","line":30,"loc":{"start":{"line":30,"column":54},"end":{"line":36,"column":3}},"locations":[{"start":{"line":30,"column":54},"end":{"line":36,"column":3}}]},"3":{"type":"branch","line":34,"loc":{"start":{"line":34,"column":99},"end":{"line":36,"column":3}},"locations":[{"start":{"line":34,"column":99},"end":{"line":36,"column":3}}]},"4":{"type":"branch","line":44,"loc":{"start":{"line":44,"column":56},"end":{"line":49,"column":3}},"locations":[{"start":{"line":44,"column":56},"end":{"line":49,"column":3}}]},"5":{"type":"branch","line":58,"loc":{"start":{"line":58,"column":47},"end":{"line":70,"column":3}},"locations":[{"start":{"line":58,"column":47},"end":{"line":70,"column":3}}]},"6":{"type":"branch","line":63,"loc":{"start":{"line":63,"column":28},"end":{"line":66,"column":11}},"locations":[{"start":{"line":63,"column":28},"end":{"line":66,"column":11}}]},"7":{"type":"branch","line":64,"loc":{"start":{"line":64,"column":95},"end":{"line":66,"column":11}},"locations":[{"start":{"line":64,"column":95},"end":{"line":66,"column":11}}]},"8":{"type":"branch","line":66,"loc":{"start":{"line":66,"column":4},"end":{"line":69,"column":6}},"locations":[{"start":{"line":66,"column":4},"end":{"line":69,"column":6}}]},"9":{"type":"branch","line":82,"loc":{"start":{"line":82,"column":41},"end":{"line":89,"column":3}},"locations":[{"start":{"line":82,"column":41},"end":{"line":89,"column":3}}]},"10":{"type":"branch","line":87,"loc":{"start":{"line":87,"column":93},"end":{"line":89,"column":3}},"locations":[{"start":{"line":87,"column":93},"end":{"line":89,"column":3}}]}},"b":{"0":[7],"1":[3],"2":[2],"3":[1],"4":[1],"5":[4],"6":[3],"7":[1],"8":[1],"9":[4],"10":[2]},"fnMap":{},"f":{}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/teacher/teacherAssignmentController.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/teacher/teacherAssignmentController.ts","all":false,"statementMap":{"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":95}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":78}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":42}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":36}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":30}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":17}},"9":{"start":{"line":10,"column":0},"end":{"line":10,"column":23}},"10":{"start":{"line":11,"column":0},"end":{"line":11,"column":9}},"11":{"start":{"line":12,"column":0},"end":{"line":12,"column":63}},"12":{"start":{"line":13,"column":0},"end":{"line":13,"column":13}},"13":{"start":{"line":14,"column":0},"end":{"line":14,"column":16}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":16}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":21}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":19}},"17":{"start":{"line":18,"column":0},"end":{"line":18,"column":17}},"18":{"start":{"line":19,"column":0},"end":{"line":19,"column":10}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":19}},"26":{"start":{"line":27,"column":0},"end":{"line":27,"column":48}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":24}},"29":{"start":{"line":30,"column":0},"end":{"line":30,"column":64}},"30":{"start":{"line":31,"column":0},"end":{"line":31,"column":20}},"31":{"start":{"line":32,"column":0},"end":{"line":32,"column":18}},"32":{"start":{"line":33,"column":0},"end":{"line":33,"column":18}},"33":{"start":{"line":34,"column":0},"end":{"line":34,"column":23}},"34":{"start":{"line":35,"column":0},"end":{"line":35,"column":21}},"35":{"start":{"line":36,"column":0},"end":{"line":36,"column":24}},"36":{"start":{"line":37,"column":0},"end":{"line":37,"column":10}},"37":{"start":{"line":38,"column":0},"end":{"line":38,"column":39}},"38":{"start":{"line":39,"column":0},"end":{"line":39,"column":21}},"39":{"start":{"line":40,"column":0},"end":{"line":40,"column":69}},"40":{"start":{"line":41,"column":0},"end":{"line":41,"column":5}},"41":{"start":{"line":42,"column":0},"end":{"line":42,"column":4}},"43":{"start":{"line":44,"column":0},"end":{"line":44,"column":33}},"44":{"start":{"line":45,"column":0},"end":{"line":45,"column":30}},"45":{"start":{"line":46,"column":0},"end":{"line":46,"column":17}},"46":{"start":{"line":47,"column":0},"end":{"line":47,"column":23}},"47":{"start":{"line":48,"column":0},"end":{"line":48,"column":9}},"48":{"start":{"line":49,"column":0},"end":{"line":49,"column":59}},"49":{"start":{"line":50,"column":0},"end":{"line":50,"column":63}},"50":{"start":{"line":51,"column":0},"end":{"line":51,"column":79}},"51":{"start":{"line":52,"column":0},"end":{"line":52,"column":16}},"52":{"start":{"line":53,"column":0},"end":{"line":53,"column":17}},"53":{"start":{"line":54,"column":0},"end":{"line":54,"column":8}},"54":{"start":{"line":55,"column":0},"end":{"line":55,"column":40}},"55":{"start":{"line":56,"column":0},"end":{"line":56,"column":21}},"56":{"start":{"line":57,"column":0},"end":{"line":57,"column":72}},"57":{"start":{"line":58,"column":0},"end":{"line":58,"column":5}},"58":{"start":{"line":59,"column":0},"end":{"line":59,"column":4}},"60":{"start":{"line":61,"column":0},"end":{"line":61,"column":28}},"61":{"start":{"line":62,"column":0},"end":{"line":62,"column":30}},"62":{"start":{"line":63,"column":0},"end":{"line":63,"column":17}},"63":{"start":{"line":64,"column":0},"end":{"line":64,"column":23}},"64":{"start":{"line":65,"column":0},"end":{"line":65,"column":9}},"65":{"start":{"line":66,"column":0},"end":{"line":66,"column":69}},"66":{"start":{"line":67,"column":0},"end":{"line":67,"column":47}},"67":{"start":{"line":68,"column":0},"end":{"line":68,"column":63}},"69":{"start":{"line":70,"column":0},"end":{"line":70,"column":80}},"70":{"start":{"line":71,"column":0},"end":{"line":71,"column":21}},"71":{"start":{"line":72,"column":0},"end":{"line":72,"column":16}},"72":{"start":{"line":73,"column":0},"end":{"line":73,"column":19}},"73":{"start":{"line":74,"column":0},"end":{"line":74,"column":17}},"74":{"start":{"line":75,"column":0},"end":{"line":75,"column":8}},"75":{"start":{"line":76,"column":0},"end":{"line":76,"column":34}},"76":{"start":{"line":77,"column":0},"end":{"line":77,"column":21}},"77":{"start":{"line":78,"column":0},"end":{"line":78,"column":69}},"78":{"start":{"line":79,"column":0},"end":{"line":79,"column":5}},"79":{"start":{"line":80,"column":0},"end":{"line":80,"column":4}},"81":{"start":{"line":82,"column":0},"end":{"line":82,"column":28}},"82":{"start":{"line":83,"column":0},"end":{"line":83,"column":30}},"83":{"start":{"line":84,"column":0},"end":{"line":84,"column":17}},"84":{"start":{"line":85,"column":0},"end":{"line":85,"column":23}},"85":{"start":{"line":86,"column":0},"end":{"line":86,"column":9}},"86":{"start":{"line":87,"column":0},"end":{"line":87,"column":69}},"87":{"start":{"line":88,"column":0},"end":{"line":88,"column":63}},"88":{"start":{"line":89,"column":0},"end":{"line":89,"column":79}},"89":{"start":{"line":90,"column":0},"end":{"line":90,"column":29}},"90":{"start":{"line":91,"column":0},"end":{"line":91,"column":21}},"91":{"start":{"line":92,"column":0},"end":{"line":92,"column":69}},"92":{"start":{"line":93,"column":0},"end":{"line":93,"column":5}},"93":{"start":{"line":94,"column":0},"end":{"line":94,"column":4}},"94":{"start":{"line":95,"column":0},"end":{"line":95,"column":1}}},"s":{"2":1,"3":1,"5":1,"6":7,"7":4,"8":4,"9":4,"10":4,"11":4,"12":4,"13":4,"14":4,"15":4,"16":4,"17":4,"18":4,"24":4,"26":4,"28":4,"29":4,"30":4,"31":4,"32":4,"33":4,"34":4,"35":4,"36":4,"37":2,"38":2,"39":2,"40":2,"41":4,"43":7,"44":4,"45":4,"46":4,"47":4,"48":4,"49":4,"50":4,"51":4,"52":4,"53":4,"54":3,"55":4,"56":1,"57":1,"58":4,"60":7,"61":2,"62":2,"63":2,"64":2,"65":2,"66":2,"67":2,"69":2,"70":2,"71":2,"72":2,"73":2,"74":2,"75":1,"76":1,"77":1,"78":1,"79":2,"81":7,"82":2,"83":2,"84":2,"85":2,"86":2,"87":2,"88":2,"89":1,"90":1,"91":1,"92":1,"93":2,"94":1},"branchMap":{"0":{"type":"branch","line":6,"loc":{"start":{"line":6,"column":7},"end":{"line":94,"column":4}},"locations":[{"start":{"line":6,"column":7},"end":{"line":94,"column":4}}]},"1":{"type":"branch","line":7,"loc":{"start":{"line":7,"column":29},"end":{"line":42,"column":4}},"locations":[{"start":{"line":7,"column":29},"end":{"line":42,"column":4}}]},"2":{"type":"branch","line":37,"loc":{"start":{"line":37,"column":8},"end":{"line":41,"column":5}},"locations":[{"start":{"line":37,"column":8},"end":{"line":41,"column":5}}]},"3":{"type":"branch","line":44,"loc":{"start":{"line":44,"column":26},"end":{"line":59,"column":4}},"locations":[{"start":{"line":44,"column":26},"end":{"line":59,"column":4}}]},"4":{"type":"branch","line":54,"loc":{"start":{"line":54,"column":6},"end":{"line":56,"column":13}},"locations":[{"start":{"line":54,"column":6},"end":{"line":56,"column":13}}]},"5":{"type":"branch","line":56,"loc":{"start":{"line":56,"column":4},"end":{"line":58,"column":5}},"locations":[{"start":{"line":56,"column":4},"end":{"line":58,"column":5}}]},"6":{"type":"branch","line":61,"loc":{"start":{"line":61,"column":21},"end":{"line":80,"column":4}},"locations":[{"start":{"line":61,"column":21},"end":{"line":80,"column":4}}]},"7":{"type":"branch","line":75,"loc":{"start":{"line":75,"column":6},"end":{"line":79,"column":5}},"locations":[{"start":{"line":75,"column":6},"end":{"line":79,"column":5}}]},"8":{"type":"branch","line":82,"loc":{"start":{"line":82,"column":21},"end":{"line":94,"column":4}},"locations":[{"start":{"line":82,"column":21},"end":{"line":94,"column":4}}]},"9":{"type":"branch","line":89,"loc":{"start":{"line":89,"column":77},"end":{"line":93,"column":5}},"locations":[{"start":{"line":89,"column":77},"end":{"line":93,"column":5}}]}},"b":{"0":[7],"1":[4],"2":[2],"3":[4],"4":[3],"5":[1],"6":[2],"7":[1],"8":[2],"9":[1]},"fnMap":{"0":{"name":"AssignmentTeacherController","decl":{"start":{"line":6,"column":7},"end":{"line":94,"column":4}},"loc":{"start":{"line":6,"column":7},"end":{"line":94,"column":4}},"line":6},"1":{"name":"AssignmentTeacherController.createAssignmentForClass","decl":{"start":{"line":7,"column":29},"end":{"line":42,"column":4}},"loc":{"start":{"line":7,"column":29},"end":{"line":42,"column":4}},"line":7},"2":{"name":"AssignmentTeacherController.getAssignmentsByClass","decl":{"start":{"line":44,"column":26},"end":{"line":59,"column":4}},"loc":{"start":{"line":44,"column":26},"end":{"line":59,"column":4}},"line":44},"3":{"name":"AssignmentTeacherController.updateAssignment","decl":{"start":{"line":61,"column":21},"end":{"line":80,"column":4}},"loc":{"start":{"line":61,"column":21},"end":{"line":80,"column":4}},"line":61},"4":{"name":"AssignmentTeacherController.deleteAssignment","decl":{"start":{"line":82,"column":21},"end":{"line":94,"column":4}},"loc":{"start":{"line":82,"column":21},"end":{"line":94,"column":4}},"line":82}},"f":{"0":7,"1":4,"2":4,"3":2,"4":2}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/teacher/teacherAuthController.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/teacher/teacherAuthController.ts","all":false,"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":49}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":53}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":59}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":60}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":96}},"17":{"start":{"line":18,"column":0},"end":{"line":18,"column":59}},"20":{"start":{"line":21,"column":0},"end":{"line":21,"column":36}},"21":{"start":{"line":22,"column":0},"end":{"line":22,"column":20}},"22":{"start":{"line":23,"column":0},"end":{"line":23,"column":54}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":3}},"26":{"start":{"line":27,"column":0},"end":{"line":27,"column":62}},"27":{"start":{"line":28,"column":0},"end":{"line":28,"column":41}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":20}},"29":{"start":{"line":30,"column":0},"end":{"line":30,"column":43}},"30":{"start":{"line":31,"column":0},"end":{"line":31,"column":3}},"34":{"start":{"line":35,"column":0},"end":{"line":35,"column":92}},"36":{"start":{"line":37,"column":0},"end":{"line":37,"column":22}},"37":{"start":{"line":38,"column":0},"end":{"line":38,"column":20}},"38":{"start":{"line":39,"column":0},"end":{"line":39,"column":43}},"39":{"start":{"line":40,"column":0},"end":{"line":40,"column":3}},"42":{"start":{"line":43,"column":0},"end":{"line":43,"column":89}},"43":{"start":{"line":44,"column":0},"end":{"line":44,"column":25}},"44":{"start":{"line":45,"column":0},"end":{"line":45,"column":20}},"45":{"start":{"line":46,"column":0},"end":{"line":46,"column":43}},"46":{"start":{"line":47,"column":0},"end":{"line":47,"column":3}},"48":{"start":{"line":49,"column":0},"end":{"line":49,"column":12}},"49":{"start":{"line":50,"column":0},"end":{"line":50,"column":34}},"50":{"start":{"line":51,"column":0},"end":{"line":51,"column":41}},"51":{"start":{"line":52,"column":0},"end":{"line":52,"column":5}},"52":{"start":{"line":53,"column":0},"end":{"line":53,"column":3}}},"s":{"1":1,"2":1,"4":1,"5":1,"6":1,"16":1,"17":0,"20":0,"21":0,"22":0,"23":0,"26":0,"27":0,"28":0,"29":0,"30":0,"34":0,"36":0,"37":0,"38":0,"39":0,"42":0,"43":0,"44":0,"45":0,"46":0,"48":0,"49":0,"50":0,"51":0,"52":0},"branchMap":{},"b":{},"fnMap":{},"f":{}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/teacher/teacherClassController.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/teacher/teacherClassController.ts","all":false,"statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":49}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":55}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":78}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":54}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":63}},"10":{"start":{"line":11,"column":0},"end":{"line":11,"column":83}},"11":{"start":{"line":12,"column":0},"end":{"line":12,"column":30}},"12":{"start":{"line":13,"column":0},"end":{"line":13,"column":66}},"13":{"start":{"line":14,"column":0},"end":{"line":14,"column":65}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":5}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":16}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":2}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":46}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":72}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":65}},"26":{"start":{"line":27,"column":0},"end":{"line":27,"column":74}},"27":{"start":{"line":28,"column":0},"end":{"line":28,"column":42}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":5}},"29":{"start":{"line":30,"column":0},"end":{"line":30,"column":2}},"36":{"start":{"line":37,"column":0},"end":{"line":37,"column":44}},"37":{"start":{"line":38,"column":0},"end":{"line":38,"column":72}},"38":{"start":{"line":39,"column":0},"end":{"line":39,"column":34}},"39":{"start":{"line":40,"column":0},"end":{"line":40,"column":65}},"41":{"start":{"line":42,"column":0},"end":{"line":42,"column":64}},"43":{"start":{"line":44,"column":0},"end":{"line":44,"column":74}},"44":{"start":{"line":45,"column":0},"end":{"line":45,"column":72}},"45":{"start":{"line":46,"column":0},"end":{"line":46,"column":5}},"46":{"start":{"line":47,"column":0},"end":{"line":47,"column":2}},"53":{"start":{"line":54,"column":0},"end":{"line":54,"column":44}},"54":{"start":{"line":55,"column":0},"end":{"line":55,"column":72}},"55":{"start":{"line":56,"column":0},"end":{"line":56,"column":61}},"56":{"start":{"line":57,"column":0},"end":{"line":57,"column":65}},"58":{"start":{"line":59,"column":0},"end":{"line":59,"column":59}},"59":{"start":{"line":60,"column":0},"end":{"line":60,"column":79}},"60":{"start":{"line":61,"column":0},"end":{"line":61,"column":5}},"61":{"start":{"line":62,"column":0},"end":{"line":62,"column":2}},"69":{"start":{"line":70,"column":0},"end":{"line":70,"column":40}},"70":{"start":{"line":71,"column":0},"end":{"line":71,"column":72}},"71":{"start":{"line":72,"column":0},"end":{"line":72,"column":61}},"72":{"start":{"line":73,"column":0},"end":{"line":73,"column":65}},"74":{"start":{"line":75,"column":0},"end":{"line":75,"column":76}},"76":{"start":{"line":77,"column":0},"end":{"line":77,"column":80}},"77":{"start":{"line":78,"column":0},"end":{"line":78,"column":43}},"78":{"start":{"line":79,"column":0},"end":{"line":79,"column":5}},"79":{"start":{"line":80,"column":0},"end":{"line":80,"column":2}},"87":{"start":{"line":88,"column":0},"end":{"line":88,"column":47}},"88":{"start":{"line":89,"column":0},"end":{"line":89,"column":72}},"89":{"start":{"line":90,"column":0},"end":{"line":90,"column":61}},"90":{"start":{"line":91,"column":0},"end":{"line":91,"column":65}},"92":{"start":{"line":93,"column":0},"end":{"line":93,"column":86}},"93":{"start":{"line":94,"column":0},"end":{"line":94,"column":83}},"94":{"start":{"line":95,"column":0},"end":{"line":95,"column":43}},"95":{"start":{"line":96,"column":0},"end":{"line":96,"column":5}},"96":{"start":{"line":97,"column":0},"end":{"line":97,"column":2}},"104":{"start":{"line":105,"column":0},"end":{"line":105,"column":49}},"105":{"start":{"line":106,"column":0},"end":{"line":106,"column":72}},"106":{"start":{"line":107,"column":0},"end":{"line":107,"column":61}},"107":{"start":{"line":108,"column":0},"end":{"line":108,"column":65}},"110":{"start":{"line":111,"column":0},"end":{"line":111,"column":93}},"111":{"start":{"line":112,"column":0},"end":{"line":112,"column":20}},"112":{"start":{"line":113,"column":0},"end":{"line":113,"column":21}},"113":{"start":{"line":114,"column":0},"end":{"line":114,"column":10}},"114":{"start":{"line":115,"column":0},"end":{"line":115,"column":43}},"115":{"start":{"line":116,"column":0},"end":{"line":116,"column":5}},"116":{"start":{"line":117,"column":0},"end":{"line":117,"column":2}}},"s":{"0":1,"3":1,"5":1,"6":1,"8":1,"10":1,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"36":1,"37":1,"38":2,"39":2,"41":2,"43":2,"44":1,"45":2,"46":1,"53":1,"54":1,"55":2,"56":2,"58":2,"59":1,"60":2,"61":1,"69":1,"70":1,"71":3,"72":3,"74":3,"76":1,"77":1,"78":3,"79":1,"87":1,"88":1,"89":3,"90":3,"92":3,"93":1,"94":1,"95":3,"96":1,"104":1,"105":1,"106":3,"107":3,"110":3,"111":3,"112":3,"113":3,"114":1,"115":3,"116":1},"branchMap":{"0":{"type":"branch","line":11,"loc":{"start":{"line":11,"column":27},"end":{"line":17,"column":2}},"locations":[{"start":{"line":11,"column":27},"end":{"line":17,"column":2}}]},"1":{"type":"branch","line":13,"loc":{"start":{"line":13,"column":9},"end":{"line":13,"column":45}},"locations":[{"start":{"line":13,"column":9},"end":{"line":13,"column":45}}]},"2":{"type":"branch","line":13,"loc":{"start":{"line":13,"column":33},"end":{"line":13,"column":65}},"locations":[{"start":{"line":13,"column":33},"end":{"line":13,"column":65}}]},"3":{"type":"branch","line":13,"loc":{"start":{"line":13,"column":65},"end":{"line":17,"column":2}},"locations":[{"start":{"line":13,"column":65},"end":{"line":17,"column":2}}]},"4":{"type":"branch","line":25,"loc":{"start":{"line":25,"column":4},"end":{"line":29,"column":5}},"locations":[{"start":{"line":25,"column":4},"end":{"line":29,"column":5}}]},"5":{"type":"branch","line":38,"loc":{"start":{"line":38,"column":4},"end":{"line":46,"column":5}},"locations":[{"start":{"line":38,"column":4},"end":{"line":46,"column":5}}]},"6":{"type":"branch","line":44,"loc":{"start":{"line":44,"column":72},"end":{"line":45,"column":72}},"locations":[{"start":{"line":44,"column":72},"end":{"line":45,"column":72}}]},"7":{"type":"branch","line":55,"loc":{"start":{"line":55,"column":4},"end":{"line":61,"column":5}},"locations":[{"start":{"line":55,"column":4},"end":{"line":61,"column":5}}]},"8":{"type":"branch","line":59,"loc":{"start":{"line":59,"column":57},"end":{"line":60,"column":79}},"locations":[{"start":{"line":59,"column":57},"end":{"line":60,"column":79}}]},"9":{"type":"branch","line":71,"loc":{"start":{"line":71,"column":4},"end":{"line":79,"column":5}},"locations":[{"start":{"line":71,"column":4},"end":{"line":79,"column":5}}]},"10":{"type":"branch","line":75,"loc":{"start":{"line":75,"column":74},"end":{"line":78,"column":43}},"locations":[{"start":{"line":75,"column":74},"end":{"line":78,"column":43}}]},"11":{"type":"branch","line":89,"loc":{"start":{"line":89,"column":4},"end":{"line":96,"column":5}},"locations":[{"start":{"line":89,"column":4},"end":{"line":96,"column":5}}]},"12":{"type":"branch","line":93,"loc":{"start":{"line":93,"column":84},"end":{"line":95,"column":43}},"locations":[{"start":{"line":93,"column":84},"end":{"line":95,"column":43}}]},"13":{"type":"branch","line":106,"loc":{"start":{"line":106,"column":4},"end":{"line":116,"column":5}},"locations":[{"start":{"line":106,"column":4},"end":{"line":116,"column":5}}]},"14":{"type":"branch","line":114,"loc":{"start":{"line":114,"column":8},"end":{"line":115,"column":43}},"locations":[{"start":{"line":114,"column":8},"end":{"line":115,"column":43}}]}},"b":{"0":[2],"1":[1],"2":[1],"3":[1],"4":[1],"5":[2],"6":[1],"7":[2],"8":[1],"9":[3],"10":[1],"11":[3],"12":[1],"13":[3],"14":[1]},"fnMap":{"0":{"name":"isNameValid","decl":{"start":{"line":11,"column":27},"end":{"line":17,"column":2}},"loc":{"start":{"line":11,"column":27},"end":{"line":17,"column":2}},"line":11}},"f":{"0":2}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/teacher/teacherLocalLearningObjectController.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/teacher/teacherLocalLearningObjectController.ts","all":false,"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":49}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":36}},"11":{"start":{"line":12,"column":0},"end":{"line":12,"column":54}},"12":{"start":{"line":13,"column":0},"end":{"line":13,"column":55}},"13":{"start":{"line":14,"column":0},"end":{"line":14,"column":35}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":21}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":22}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":57}},"17":{"start":{"line":18,"column":0},"end":{"line":18,"column":5}},"19":{"start":{"line":20,"column":0},"end":{"line":20,"column":51}},"22":{"start":{"line":23,"column":0},"end":{"line":23,"column":76}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":16}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":10}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":6}},"26":{"start":{"line":27,"column":0},"end":{"line":27,"column":26}},"27":{"start":{"line":28,"column":0},"end":{"line":28,"column":39}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":32}},"29":{"start":{"line":30,"column":0},"end":{"line":30,"column":7}},"30":{"start":{"line":31,"column":0},"end":{"line":31,"column":3}},"31":{"start":{"line":32,"column":0},"end":{"line":32,"column":2}},"37":{"start":{"line":38,"column":0},"end":{"line":38,"column":52}},"38":{"start":{"line":39,"column":0},"end":{"line":39,"column":55}},"39":{"start":{"line":40,"column":0},"end":{"line":40,"column":35}},"40":{"start":{"line":41,"column":0},"end":{"line":41,"column":21}},"41":{"start":{"line":42,"column":0},"end":{"line":42,"column":22}},"42":{"start":{"line":43,"column":0},"end":{"line":43,"column":57}},"43":{"start":{"line":44,"column":0},"end":{"line":44,"column":5}},"45":{"start":{"line":46,"column":0},"end":{"line":46,"column":19}},"46":{"start":{"line":47,"column":0},"end":{"line":47,"column":70}},"47":{"start":{"line":48,"column":0},"end":{"line":48,"column":17}},"48":{"start":{"line":49,"column":0},"end":{"line":49,"column":8}},"49":{"start":{"line":50,"column":0},"end":{"line":50,"column":22}},"50":{"start":{"line":51,"column":0},"end":{"line":51,"column":3}},"51":{"start":{"line":52,"column":0},"end":{"line":52,"column":2}},"57":{"start":{"line":58,"column":0},"end":{"line":58,"column":55}},"58":{"start":{"line":59,"column":0},"end":{"line":59,"column":55}},"59":{"start":{"line":60,"column":0},"end":{"line":60,"column":35}},"60":{"start":{"line":61,"column":0},"end":{"line":61,"column":21}},"61":{"start":{"line":62,"column":0},"end":{"line":62,"column":22}},"62":{"start":{"line":63,"column":0},"end":{"line":63,"column":57}},"63":{"start":{"line":64,"column":0},"end":{"line":64,"column":5}},"65":{"start":{"line":66,"column":0},"end":{"line":66,"column":30}},"66":{"start":{"line":67,"column":0},"end":{"line":67,"column":77}},"68":{"start":{"line":69,"column":0},"end":{"line":69,"column":17}},"69":{"start":{"line":70,"column":0},"end":{"line":70,"column":22}},"70":{"start":{"line":71,"column":0},"end":{"line":71,"column":50}},"71":{"start":{"line":72,"column":0},"end":{"line":72,"column":5}},"74":{"start":{"line":75,"column":0},"end":{"line":75,"column":40}},"75":{"start":{"line":76,"column":0},"end":{"line":76,"column":22}},"76":{"start":{"line":77,"column":0},"end":{"line":77,"column":69}},"77":{"start":{"line":78,"column":0},"end":{"line":78,"column":5}},"79":{"start":{"line":80,"column":0},"end":{"line":80,"column":20}},"80":{"start":{"line":81,"column":0},"end":{"line":81,"column":3}},"81":{"start":{"line":82,"column":0},"end":{"line":82,"column":2}},"87":{"start":{"line":88,"column":0},"end":{"line":88,"column":54}},"88":{"start":{"line":89,"column":0},"end":{"line":89,"column":55}},"89":{"start":{"line":90,"column":0},"end":{"line":90,"column":35}},"90":{"start":{"line":91,"column":0},"end":{"line":91,"column":21}},"91":{"start":{"line":92,"column":0},"end":{"line":92,"column":22}},"92":{"start":{"line":93,"column":0},"end":{"line":93,"column":57}},"93":{"start":{"line":94,"column":0},"end":{"line":94,"column":5}},"95":{"start":{"line":96,"column":0},"end":{"line":96,"column":30}},"96":{"start":{"line":97,"column":0},"end":{"line":97,"column":60}},"99":{"start":{"line":100,"column":0},"end":{"line":100,"column":80}},"100":{"start":{"line":101,"column":0},"end":{"line":101,"column":20}},"101":{"start":{"line":102,"column":0},"end":{"line":102,"column":22}},"102":{"start":{"line":103,"column":0},"end":{"line":103,"column":50}},"103":{"start":{"line":104,"column":0},"end":{"line":104,"column":5}},"104":{"start":{"line":105,"column":0},"end":{"line":105,"column":43}},"105":{"start":{"line":106,"column":0},"end":{"line":106,"column":22}},"106":{"start":{"line":107,"column":0},"end":{"line":107,"column":69}},"107":{"start":{"line":108,"column":0},"end":{"line":108,"column":5}},"109":{"start":{"line":110,"column":0},"end":{"line":110,"column":74}},"110":{"start":{"line":111,"column":0},"end":{"line":111,"column":9}},"111":{"start":{"line":112,"column":0},"end":{"line":112,"column":10}},"112":{"start":{"line":113,"column":0},"end":{"line":113,"column":6}},"113":{"start":{"line":114,"column":0},"end":{"line":114,"column":14}},"114":{"start":{"line":115,"column":0},"end":{"line":115,"column":39}},"115":{"start":{"line":116,"column":0},"end":{"line":116,"column":30}},"116":{"start":{"line":117,"column":0},"end":{"line":117,"column":7}},"117":{"start":{"line":118,"column":0},"end":{"line":118,"column":3}},"118":{"start":{"line":119,"column":0},"end":{"line":119,"column":2}},"124":{"start":{"line":125,"column":0},"end":{"line":125,"column":54}},"125":{"start":{"line":126,"column":0},"end":{"line":126,"column":55}},"126":{"start":{"line":127,"column":0},"end":{"line":127,"column":35}},"127":{"start":{"line":128,"column":0},"end":{"line":128,"column":21}},"128":{"start":{"line":129,"column":0},"end":{"line":129,"column":22}},"129":{"start":{"line":130,"column":0},"end":{"line":130,"column":57}},"130":{"start":{"line":131,"column":0},"end":{"line":131,"column":5}},"132":{"start":{"line":133,"column":0},"end":{"line":133,"column":30}},"133":{"start":{"line":134,"column":0},"end":{"line":134,"column":80}},"134":{"start":{"line":135,"column":0},"end":{"line":135,"column":20}},"135":{"start":{"line":136,"column":0},"end":{"line":136,"column":22}},"136":{"start":{"line":137,"column":0},"end":{"line":137,"column":50}},"137":{"start":{"line":138,"column":0},"end":{"line":138,"column":5}},"138":{"start":{"line":139,"column":0},"end":{"line":139,"column":43}},"139":{"start":{"line":140,"column":0},"end":{"line":140,"column":22}},"140":{"start":{"line":141,"column":0},"end":{"line":141,"column":69}},"141":{"start":{"line":142,"column":0},"end":{"line":142,"column":5}},"143":{"start":{"line":144,"column":0},"end":{"line":144,"column":62}},"144":{"start":{"line":145,"column":0},"end":{"line":145,"column":51}},"145":{"start":{"line":146,"column":0},"end":{"line":146,"column":3}},"146":{"start":{"line":147,"column":0},"end":{"line":147,"column":2}}},"s":{"1":1,"2":1,"11":1,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"19":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"37":1,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":1,"57":1,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"65":0,"66":0,"68":0,"69":0,"70":0,"71":0,"74":0,"75":0,"76":0,"77":0,"79":0,"80":0,"81":1,"87":1,"88":1,"89":0,"90":0,"91":0,"92":0,"93":0,"95":0,"96":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":1,"124":1,"125":1,"126":0,"127":0,"128":0,"129":0,"130":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"143":0,"144":0,"145":0,"146":1},"branchMap":{},"b":{},"fnMap":{},"f":{}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/teacher/teacherLocalLearningPathController.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/teacher/teacherLocalLearningPathController.ts","all":false,"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":49}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":79}},"18":{"start":{"line":19,"column":0},"end":{"line":19,"column":52}},"19":{"start":{"line":20,"column":0},"end":{"line":20,"column":55}},"21":{"start":{"line":22,"column":0},"end":{"line":22,"column":60}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":77}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":30}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":22}},"26":{"start":{"line":27,"column":0},"end":{"line":27,"column":91}},"27":{"start":{"line":28,"column":0},"end":{"line":28,"column":5}},"29":{"start":{"line":30,"column":0},"end":{"line":30,"column":82}},"30":{"start":{"line":31,"column":0},"end":{"line":31,"column":12}},"31":{"start":{"line":32,"column":0},"end":{"line":32,"column":15}},"32":{"start":{"line":33,"column":0},"end":{"line":33,"column":37}},"33":{"start":{"line":34,"column":0},"end":{"line":34,"column":27}},"34":{"start":{"line":35,"column":0},"end":{"line":35,"column":7}},"36":{"start":{"line":37,"column":0},"end":{"line":37,"column":26}},"37":{"start":{"line":38,"column":0},"end":{"line":38,"column":36}},"38":{"start":{"line":39,"column":0},"end":{"line":39,"column":28}},"39":{"start":{"line":40,"column":0},"end":{"line":40,"column":7}},"40":{"start":{"line":41,"column":0},"end":{"line":41,"column":3}},"41":{"start":{"line":42,"column":0},"end":{"line":42,"column":2}},"47":{"start":{"line":48,"column":0},"end":{"line":48,"column":50}},"48":{"start":{"line":49,"column":0},"end":{"line":49,"column":55}},"49":{"start":{"line":50,"column":0},"end":{"line":50,"column":35}},"51":{"start":{"line":52,"column":0},"end":{"line":52,"column":89}},"52":{"start":{"line":53,"column":0},"end":{"line":53,"column":20}},"53":{"start":{"line":54,"column":0},"end":{"line":54,"column":3}},"54":{"start":{"line":55,"column":0},"end":{"line":55,"column":2}},"60":{"start":{"line":61,"column":0},"end":{"line":61,"column":53}},"61":{"start":{"line":62,"column":0},"end":{"line":62,"column":55}},"62":{"start":{"line":63,"column":0},"end":{"line":63,"column":35}},"64":{"start":{"line":65,"column":0},"end":{"line":65,"column":34}},"65":{"start":{"line":66,"column":0},"end":{"line":66,"column":76}},"66":{"start":{"line":67,"column":0},"end":{"line":67,"column":16}},"67":{"start":{"line":68,"column":0},"end":{"line":68,"column":22}},"68":{"start":{"line":69,"column":0},"end":{"line":69,"column":47}},"69":{"start":{"line":70,"column":0},"end":{"line":70,"column":5}},"71":{"start":{"line":72,"column":0},"end":{"line":72,"column":39}},"72":{"start":{"line":73,"column":0},"end":{"line":73,"column":22}},"73":{"start":{"line":74,"column":0},"end":{"line":74,"column":67}},"74":{"start":{"line":75,"column":0},"end":{"line":75,"column":5}},"76":{"start":{"line":77,"column":0},"end":{"line":77,"column":19}},"77":{"start":{"line":78,"column":0},"end":{"line":78,"column":3}},"78":{"start":{"line":79,"column":0},"end":{"line":79,"column":2}},"84":{"start":{"line":85,"column":0},"end":{"line":85,"column":52}},"85":{"start":{"line":86,"column":0},"end":{"line":86,"column":55}},"86":{"start":{"line":87,"column":0},"end":{"line":87,"column":35}},"88":{"start":{"line":89,"column":0},"end":{"line":89,"column":34}},"89":{"start":{"line":90,"column":0},"end":{"line":90,"column":84}},"90":{"start":{"line":91,"column":0},"end":{"line":91,"column":24}},"91":{"start":{"line":92,"column":0},"end":{"line":92,"column":22}},"92":{"start":{"line":93,"column":0},"end":{"line":93,"column":47}},"93":{"start":{"line":94,"column":0},"end":{"line":94,"column":5}},"94":{"start":{"line":95,"column":0},"end":{"line":95,"column":47}},"95":{"start":{"line":96,"column":0},"end":{"line":96,"column":22}},"96":{"start":{"line":97,"column":0},"end":{"line":97,"column":67}},"97":{"start":{"line":98,"column":0},"end":{"line":98,"column":5}},"100":{"start":{"line":101,"column":0},"end":{"line":101,"column":86}},"102":{"start":{"line":103,"column":0},"end":{"line":103,"column":83}},"103":{"start":{"line":104,"column":0},"end":{"line":104,"column":62}},"104":{"start":{"line":105,"column":0},"end":{"line":105,"column":74}},"105":{"start":{"line":106,"column":0},"end":{"line":106,"column":86}},"106":{"start":{"line":107,"column":0},"end":{"line":107,"column":70}},"107":{"start":{"line":108,"column":0},"end":{"line":108,"column":7}},"109":{"start":{"line":110,"column":0},"end":{"line":110,"column":14}},"110":{"start":{"line":111,"column":0},"end":{"line":111,"column":36}},"111":{"start":{"line":112,"column":0},"end":{"line":112,"column":32}},"112":{"start":{"line":113,"column":0},"end":{"line":113,"column":7}},"113":{"start":{"line":114,"column":0},"end":{"line":114,"column":3}},"114":{"start":{"line":115,"column":0},"end":{"line":115,"column":2}},"119":{"start":{"line":120,"column":0},"end":{"line":120,"column":52}},"120":{"start":{"line":121,"column":0},"end":{"line":121,"column":55}},"121":{"start":{"line":122,"column":0},"end":{"line":122,"column":35}},"123":{"start":{"line":124,"column":0},"end":{"line":124,"column":34}},"124":{"start":{"line":125,"column":0},"end":{"line":125,"column":84}},"125":{"start":{"line":126,"column":0},"end":{"line":126,"column":24}},"126":{"start":{"line":127,"column":0},"end":{"line":127,"column":22}},"127":{"start":{"line":128,"column":0},"end":{"line":128,"column":47}},"128":{"start":{"line":129,"column":0},"end":{"line":129,"column":5}},"129":{"start":{"line":130,"column":0},"end":{"line":130,"column":47}},"130":{"start":{"line":131,"column":0},"end":{"line":131,"column":22}},"131":{"start":{"line":132,"column":0},"end":{"line":132,"column":67}},"132":{"start":{"line":133,"column":0},"end":{"line":133,"column":5}},"134":{"start":{"line":135,"column":0},"end":{"line":135,"column":62}},"135":{"start":{"line":136,"column":0},"end":{"line":136,"column":48}},"136":{"start":{"line":137,"column":0},"end":{"line":137,"column":3}},"137":{"start":{"line":138,"column":0},"end":{"line":138,"column":2}}},"s":{"1":1,"3":1,"18":1,"19":1,"21":0,"23":0,"24":0,"25":0,"26":0,"27":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"47":1,"48":1,"49":0,"51":0,"52":0,"53":0,"54":1,"60":1,"61":1,"62":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"71":0,"72":0,"73":0,"74":0,"76":0,"77":0,"78":1,"84":1,"85":1,"86":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"100":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":1,"119":1,"120":1,"121":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"134":0,"135":0,"136":0,"137":1},"branchMap":{},"b":{},"fnMap":{},"f":{}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/teacher/teacherLocalLearningPathNodesController.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/teacher/teacherLocalLearningPathNodesController.ts","all":false,"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":49}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":87}},"18":{"start":{"line":19,"column":0},"end":{"line":19,"column":44}},"19":{"start":{"line":20,"column":0},"end":{"line":20,"column":55}},"20":{"start":{"line":21,"column":0},"end":{"line":21,"column":56}},"21":{"start":{"line":22,"column":0},"end":{"line":22,"column":34}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":72}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":16}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":12}},"26":{"start":{"line":27,"column":0},"end":{"line":27,"column":6}},"27":{"start":{"line":28,"column":0},"end":{"line":28,"column":20}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":3}},"29":{"start":{"line":30,"column":0},"end":{"line":30,"column":2}},"35":{"start":{"line":36,"column":0},"end":{"line":36,"column":46}},"36":{"start":{"line":37,"column":0},"end":{"line":37,"column":55}},"37":{"start":{"line":38,"column":0},"end":{"line":38,"column":35}},"38":{"start":{"line":39,"column":0},"end":{"line":39,"column":34}},"39":{"start":{"line":40,"column":0},"end":{"line":40,"column":40}},"41":{"start":{"line":42,"column":0},"end":{"line":42,"column":73}},"42":{"start":{"line":43,"column":0},"end":{"line":43,"column":16}},"43":{"start":{"line":44,"column":0},"end":{"line":44,"column":13}},"44":{"start":{"line":45,"column":0},"end":{"line":45,"column":7}},"45":{"start":{"line":46,"column":0},"end":{"line":46,"column":38}},"46":{"start":{"line":47,"column":0},"end":{"line":47,"column":58}},"47":{"start":{"line":48,"column":0},"end":{"line":48,"column":38}},"48":{"start":{"line":49,"column":0},"end":{"line":49,"column":44}},"49":{"start":{"line":50,"column":0},"end":{"line":50,"column":42}},"50":{"start":{"line":51,"column":0},"end":{"line":51,"column":38}},"51":{"start":{"line":52,"column":0},"end":{"line":52,"column":7}},"52":{"start":{"line":53,"column":0},"end":{"line":53,"column":6}},"54":{"start":{"line":55,"column":0},"end":{"line":55,"column":26}},"55":{"start":{"line":56,"column":0},"end":{"line":56,"column":33}},"56":{"start":{"line":57,"column":0},"end":{"line":57,"column":20}},"57":{"start":{"line":58,"column":0},"end":{"line":58,"column":7}},"58":{"start":{"line":59,"column":0},"end":{"line":59,"column":3}},"59":{"start":{"line":60,"column":0},"end":{"line":60,"column":2}},"65":{"start":{"line":66,"column":0},"end":{"line":66,"column":46}},"66":{"start":{"line":67,"column":0},"end":{"line":67,"column":55}},"67":{"start":{"line":68,"column":0},"end":{"line":68,"column":35}},"68":{"start":{"line":69,"column":0},"end":{"line":69,"column":42}},"69":{"start":{"line":70,"column":0},"end":{"line":70,"column":40}},"71":{"start":{"line":72,"column":0},"end":{"line":72,"column":77}},"72":{"start":{"line":73,"column":0},"end":{"line":73,"column":16}},"73":{"start":{"line":74,"column":0},"end":{"line":74,"column":13}},"74":{"start":{"line":75,"column":0},"end":{"line":75,"column":13}},"75":{"start":{"line":76,"column":0},"end":{"line":76,"column":7}},"76":{"start":{"line":77,"column":0},"end":{"line":77,"column":36}},"77":{"start":{"line":78,"column":0},"end":{"line":78,"column":58}},"78":{"start":{"line":79,"column":0},"end":{"line":79,"column":38}},"79":{"start":{"line":80,"column":0},"end":{"line":80,"column":44}},"80":{"start":{"line":81,"column":0},"end":{"line":81,"column":42}},"81":{"start":{"line":82,"column":0},"end":{"line":82,"column":36}},"82":{"start":{"line":83,"column":0},"end":{"line":83,"column":7}},"83":{"start":{"line":84,"column":0},"end":{"line":84,"column":6}},"85":{"start":{"line":86,"column":0},"end":{"line":86,"column":14}},"86":{"start":{"line":87,"column":0},"end":{"line":87,"column":33}},"87":{"start":{"line":88,"column":0},"end":{"line":88,"column":24}},"88":{"start":{"line":89,"column":0},"end":{"line":89,"column":7}},"89":{"start":{"line":90,"column":0},"end":{"line":90,"column":3}},"90":{"start":{"line":91,"column":0},"end":{"line":91,"column":2}},"95":{"start":{"line":96,"column":0},"end":{"line":96,"column":47}},"96":{"start":{"line":97,"column":0},"end":{"line":97,"column":55}},"97":{"start":{"line":98,"column":0},"end":{"line":98,"column":35}},"98":{"start":{"line":99,"column":0},"end":{"line":99,"column":42}},"100":{"start":{"line":101,"column":0},"end":{"line":101,"column":85}},"101":{"start":{"line":102,"column":0},"end":{"line":102,"column":57}},"102":{"start":{"line":103,"column":0},"end":{"line":103,"column":3}},"103":{"start":{"line":104,"column":0},"end":{"line":104,"column":2}}},"s":{"1":1,"3":1,"18":1,"19":1,"20":0,"21":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"35":1,"36":1,"37":0,"38":0,"39":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":1,"65":1,"66":1,"67":0,"68":0,"69":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":1,"95":1,"96":1,"97":0,"98":0,"100":0,"101":0,"102":0,"103":1},"branchMap":{},"b":{},"fnMap":{},"f":{}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/teacher/teacherSubmissionController.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/teacher/teacherSubmissionController.ts","all":false,"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":55}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":76}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":50}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":100}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":63}},"9":{"start":{"line":10,"column":0},"end":{"line":10,"column":65}},"11":{"start":{"line":12,"column":0},"end":{"line":12,"column":110}},"13":{"start":{"line":14,"column":0},"end":{"line":14,"column":42}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":5}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":97}},"17":{"start":{"line":18,"column":0},"end":{"line":18,"column":57}},"18":{"start":{"line":19,"column":0},"end":{"line":19,"column":65}},"20":{"start":{"line":21,"column":0},"end":{"line":21,"column":104}},"22":{"start":{"line":23,"column":0},"end":{"line":23,"column":42}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":5}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":110}},"26":{"start":{"line":27,"column":0},"end":{"line":27,"column":53}},"27":{"start":{"line":28,"column":0},"end":{"line":28,"column":65}},"29":{"start":{"line":30,"column":0},"end":{"line":30,"column":140}},"31":{"start":{"line":32,"column":0},"end":{"line":32,"column":42}},"32":{"start":{"line":33,"column":0},"end":{"line":33,"column":5}},"34":{"start":{"line":35,"column":0},"end":{"line":35,"column":107}},"35":{"start":{"line":36,"column":0},"end":{"line":36,"column":50}},"36":{"start":{"line":37,"column":0},"end":{"line":37,"column":65}},"38":{"start":{"line":39,"column":0},"end":{"line":39,"column":134}},"40":{"start":{"line":41,"column":0},"end":{"line":41,"column":42}},"41":{"start":{"line":42,"column":0},"end":{"line":42,"column":5}},"42":{"start":{"line":43,"column":0},"end":{"line":43,"column":1}}},"s":{"1":1,"4":1,"6":1,"7":1,"8":1,"9":1,"11":1,"13":1,"14":1,"16":1,"17":1,"18":1,"20":1,"22":1,"23":1,"25":1,"26":1,"27":1,"29":1,"31":1,"32":1,"34":1,"35":1,"36":1,"38":1,"40":1,"41":1,"42":1},"branchMap":{"0":{"type":"branch","line":8,"loc":{"start":{"line":8,"column":4},"end":{"line":15,"column":5}},"locations":[{"start":{"line":8,"column":4},"end":{"line":15,"column":5}}]},"1":{"type":"branch","line":17,"loc":{"start":{"line":17,"column":4},"end":{"line":24,"column":5}},"locations":[{"start":{"line":17,"column":4},"end":{"line":24,"column":5}}]},"2":{"type":"branch","line":26,"loc":{"start":{"line":26,"column":4},"end":{"line":33,"column":5}},"locations":[{"start":{"line":26,"column":4},"end":{"line":33,"column":5}}]},"3":{"type":"branch","line":35,"loc":{"start":{"line":35,"column":4},"end":{"line":42,"column":5}},"locations":[{"start":{"line":35,"column":4},"end":{"line":42,"column":5}}]}},"b":{"0":[1],"1":[1],"2":[1],"3":[1]},"fnMap":{"0":{"name":"getSubmissionsForStudent","decl":{"start":{"line":8,"column":4},"end":{"line":15,"column":5}},"loc":{"start":{"line":8,"column":4},"end":{"line":15,"column":5}},"line":8},"1":{"name":"getSubmissionsForTeam","decl":{"start":{"line":17,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":17,"column":4},"end":{"line":24,"column":5}},"line":17},"2":{"name":"getAssignmentSubmissionsForStudent","decl":{"start":{"line":26,"column":4},"end":{"line":33,"column":5}},"loc":{"start":{"line":26,"column":4},"end":{"line":33,"column":5}},"line":26},"3":{"name":"getAssignmentSubmissionsForTeam","decl":{"start":{"line":35,"column":4},"end":{"line":42,"column":5}},"loc":{"start":{"line":35,"column":4},"end":{"line":42,"column":5}},"line":35}},"f":{"0":1,"1":1,"2":1,"3":1}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/teacher/teacherTeamsController.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/teacher/teacherTeamsController.ts","all":false,"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":8}},"10":{"start":{"line":11,"column":0},"end":{"line":11,"column":106}},"11":{"start":{"line":12,"column":0},"end":{"line":12,"column":9}},"13":{"start":{"line":14,"column":0},"end":{"line":14,"column":69}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":59}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":35}},"17":{"start":{"line":18,"column":0},"end":{"line":18,"column":97}},"18":{"start":{"line":19,"column":0},"end":{"line":19,"column":47}},"19":{"start":{"line":20,"column":0},"end":{"line":20,"column":21}},"20":{"start":{"line":21,"column":0},"end":{"line":21,"column":79}},"21":{"start":{"line":22,"column":0},"end":{"line":22,"column":5}},"22":{"start":{"line":23,"column":0},"end":{"line":23,"column":2}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":104}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":9}},"26":{"start":{"line":27,"column":0},"end":{"line":27,"column":69}},"27":{"start":{"line":28,"column":0},"end":{"line":28,"column":77}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":36}},"29":{"start":{"line":30,"column":0},"end":{"line":30,"column":21}},"30":{"start":{"line":31,"column":0},"end":{"line":31,"column":80}},"31":{"start":{"line":32,"column":0},"end":{"line":32,"column":5}},"32":{"start":{"line":33,"column":0},"end":{"line":33,"column":2}},"34":{"start":{"line":35,"column":0},"end":{"line":35,"column":107}},"35":{"start":{"line":36,"column":0},"end":{"line":36,"column":9}},"36":{"start":{"line":37,"column":0},"end":{"line":37,"column":69}},"37":{"start":{"line":38,"column":0},"end":{"line":38,"column":35}},"39":{"start":{"line":40,"column":0},"end":{"line":40,"column":89}},"40":{"start":{"line":41,"column":0},"end":{"line":41,"column":43}},"41":{"start":{"line":42,"column":0},"end":{"line":42,"column":21}},"42":{"start":{"line":43,"column":0},"end":{"line":43,"column":80}},"43":{"start":{"line":44,"column":0},"end":{"line":44,"column":5}},"44":{"start":{"line":45,"column":0},"end":{"line":45,"column":2}},"46":{"start":{"line":47,"column":0},"end":{"line":47,"column":106}},"47":{"start":{"line":48,"column":0},"end":{"line":48,"column":9}},"49":{"start":{"line":50,"column":0},"end":{"line":50,"column":57}},"51":{"start":{"line":52,"column":0},"end":{"line":52,"column":33}},"52":{"start":{"line":53,"column":0},"end":{"line":53,"column":72}},"53":{"start":{"line":54,"column":0},"end":{"line":54,"column":21}},"54":{"start":{"line":55,"column":0},"end":{"line":55,"column":80}},"55":{"start":{"line":56,"column":0},"end":{"line":56,"column":5}},"56":{"start":{"line":57,"column":0},"end":{"line":57,"column":2}}},"s":{"1":1,"10":1,"11":0,"13":0,"14":0,"15":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"34":1,"35":0,"36":0,"37":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"46":1,"47":0,"49":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0},"branchMap":{},"b":{},"fnMap":{"0":{"name":"createTeamInAssignment","decl":{"start":{"line":11,"column":38},"end":{"line":23,"column":2}},"loc":{"start":{"line":11,"column":38},"end":{"line":23,"column":2}},"line":11},"1":{"name":"getTeamsInAssignment","decl":{"start":{"line":25,"column":36},"end":{"line":33,"column":2}},"loc":{"start":{"line":25,"column":36},"end":{"line":33,"column":2}},"line":25},"2":{"name":"updateTeamsInAssignment","decl":{"start":{"line":35,"column":39},"end":{"line":45,"column":2}},"loc":{"start":{"line":35,"column":39},"end":{"line":45,"column":2}},"line":35},"3":{"name":"deleteTeamInAssignment","decl":{"start":{"line":47,"column":38},"end":{"line":57,"column":2}},"loc":{"start":{"line":47,"column":38},"end":{"line":57,"column":2}},"line":47}},"f":{"0":0,"1":0,"2":0,"3":0}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/errors/errors.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/errors/errors.ts","all":false,"statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":37}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":54}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":23}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":42}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":37}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":5}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":1}},"9":{"start":{"line":10,"column":0},"end":{"line":10,"column":45}},"10":{"start":{"line":11,"column":0},"end":{"line":11,"column":34}},"11":{"start":{"line":12,"column":0},"end":{"line":12,"column":28}},"12":{"start":{"line":13,"column":0},"end":{"line":13,"column":5}},"13":{"start":{"line":14,"column":0},"end":{"line":14,"column":1}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":48}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":34}},"17":{"start":{"line":18,"column":0},"end":{"line":18,"column":28}},"18":{"start":{"line":19,"column":0},"end":{"line":19,"column":5}},"19":{"start":{"line":20,"column":0},"end":{"line":20,"column":1}},"21":{"start":{"line":22,"column":0},"end":{"line":22,"column":47}},"22":{"start":{"line":23,"column":0},"end":{"line":23,"column":34}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":28}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":5}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":1}},"27":{"start":{"line":28,"column":0},"end":{"line":28,"column":45}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":34}},"29":{"start":{"line":30,"column":0},"end":{"line":30,"column":28}},"30":{"start":{"line":31,"column":0},"end":{"line":31,"column":5}},"31":{"start":{"line":32,"column":0},"end":{"line":32,"column":1}},"33":{"start":{"line":34,"column":0},"end":{"line":34,"column":49}},"34":{"start":{"line":35,"column":0},"end":{"line":35,"column":34}},"35":{"start":{"line":36,"column":0},"end":{"line":36,"column":28}},"36":{"start":{"line":37,"column":0},"end":{"line":37,"column":5}},"37":{"start":{"line":38,"column":0},"end":{"line":38,"column":1}}},"s":{"0":1,"2":1,"3":24,"4":24,"5":24,"6":24,"7":1,"9":1,"10":1,"11":7,"12":7,"13":1,"15":1,"16":1,"17":10,"18":10,"19":1,"21":1,"22":1,"23":6,"24":6,"25":1,"27":1,"28":1,"29":1,"30":1,"31":1,"33":1,"34":1,"35":0,"36":0,"37":1},"branchMap":{"0":{"type":"branch","line":3,"loc":{"start":{"line":3,"column":4},"end":{"line":7,"column":5}},"locations":[{"start":{"line":3,"column":4},"end":{"line":7,"column":5}}]},"1":{"type":"branch","line":11,"loc":{"start":{"line":11,"column":4},"end":{"line":13,"column":5}},"locations":[{"start":{"line":11,"column":4},"end":{"line":13,"column":5}}]},"2":{"type":"branch","line":17,"loc":{"start":{"line":17,"column":4},"end":{"line":19,"column":5}},"locations":[{"start":{"line":17,"column":4},"end":{"line":19,"column":5}}]},"3":{"type":"branch","line":23,"loc":{"start":{"line":23,"column":4},"end":{"line":25,"column":5}},"locations":[{"start":{"line":23,"column":4},"end":{"line":25,"column":5}}]},"4":{"type":"branch","line":29,"loc":{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},"locations":[{"start":{"line":29,"column":4},"end":{"line":31,"column":5}}]}},"b":{"0":[24],"1":[7],"2":[10],"3":[6],"4":[1]},"fnMap":{"0":{"name":"AppError","decl":{"start":{"line":3,"column":4},"end":{"line":7,"column":5}},"loc":{"start":{"line":3,"column":4},"end":{"line":7,"column":5}},"line":3},"1":{"name":"NotFoundError","decl":{"start":{"line":11,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":11,"column":4},"end":{"line":13,"column":5}},"line":11},"2":{"name":"AccesDeniedError","decl":{"start":{"line":17,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":17,"column":4},"end":{"line":19,"column":5}},"line":17},"3":{"name":"BadRequestError","decl":{"start":{"line":23,"column":4},"end":{"line":25,"column":5}},"loc":{"start":{"line":23,"column":4},"end":{"line":25,"column":5}},"line":23},"4":{"name":"ConflictError","decl":{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},"loc":{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},"line":29},"5":{"name":"UnauthorizedError","decl":{"start":{"line":35,"column":4},"end":{"line":37,"column":5}},"loc":{"start":{"line":35,"column":4},"end":{"line":37,"column":5}},"line":35}},"f":{"0":24,"1":7,"2":10,"3":6,"4":1,"5":0}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/helpers/generateToken.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/helpers/generateToken.ts","all":false,"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":31}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":96}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":34}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":85}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":5}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":73}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":2}}},"s":{"1":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0},"branchMap":{},"b":{},"fnMap":{"0":{"name":"generateToken","decl":{"start":{"line":4,"column":62},"end":{"line":9,"column":2}},"loc":{"start":{"line":4,"column":62},"end":{"line":9,"column":2}},"line":4}},"f":{"0":0}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/helpers/getUserFromAuthRequest.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/helpers/getUserFromAuthRequest.ts","all":false,"statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":53}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":24}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":36}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":68}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":42}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":19}},"9":{"start":{"line":10,"column":0},"end":{"line":10,"column":32}},"11":{"start":{"line":12,"column":0},"end":{"line":12,"column":32}},"12":{"start":{"line":13,"column":0},"end":{"line":13,"column":32}},"13":{"start":{"line":14,"column":0},"end":{"line":14,"column":30}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":3}},"17":{"start":{"line":18,"column":0},"end":{"line":18,"column":86}},"19":{"start":{"line":20,"column":0},"end":{"line":20,"column":20}},"20":{"start":{"line":21,"column":0},"end":{"line":21,"column":63}},"21":{"start":{"line":22,"column":0},"end":{"line":22,"column":5}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":9}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":55}},"26":{"start":{"line":27,"column":0},"end":{"line":27,"column":21}},"27":{"start":{"line":28,"column":0},"end":{"line":28,"column":42}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":74}},"29":{"start":{"line":30,"column":0},"end":{"line":30,"column":9}},"30":{"start":{"line":31,"column":0},"end":{"line":31,"column":20}},"31":{"start":{"line":32,"column":0},"end":{"line":32,"column":5}},"32":{"start":{"line":33,"column":0},"end":{"line":33,"column":1}}},"s":{"0":1,"2":1,"3":1,"5":1,"7":1,"8":1,"9":1,"11":1,"12":1,"13":1,"14":1,"17":1,"19":82,"20":0,"21":0,"24":82,"25":82,"26":82,"27":0,"28":0,"29":0,"30":0,"31":0,"32":82},"branchMap":{"0":{"type":"branch","line":18,"loc":{"start":{"line":18,"column":7},"end":{"line":33,"column":1}},"locations":[{"start":{"line":18,"column":7},"end":{"line":33,"column":1}}]},"1":{"type":"branch","line":20,"loc":{"start":{"line":20,"column":19},"end":{"line":22,"column":5}},"locations":[{"start":{"line":20,"column":19},"end":{"line":22,"column":5}}]},"2":{"type":"branch","line":27,"loc":{"start":{"line":27,"column":4},"end":{"line":32,"column":5}},"locations":[{"start":{"line":27,"column":4},"end":{"line":32,"column":5}}]}},"b":{"0":[82],"1":[0],"2":[0]},"fnMap":{"0":{"name":"getUserFromAuthRequest","decl":{"start":{"line":18,"column":7},"end":{"line":33,"column":1}},"loc":{"start":{"line":18,"column":7},"end":{"line":33,"column":1}},"line":18}},"f":{"0":82}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/interfaces/extendedTypeInterfaces.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/interfaces/extendedTypeInterfaces.ts","all":false,"statementMap":{},"s":{},"branchMap":{},"b":{},"fnMap":{},"f":{}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/middleware/authAnyUserMiddleware.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/middleware/authAnyUserMiddleware.ts","all":false,"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":49}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":76}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":34}},"11":{"start":{"line":12,"column":0},"end":{"line":12,"column":43}},"12":{"start":{"line":13,"column":0},"end":{"line":13,"column":75}},"13":{"start":{"line":14,"column":0},"end":{"line":14,"column":34}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":8}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":34}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":52}},"17":{"start":{"line":18,"column":0},"end":{"line":18,"column":7}},"18":{"start":{"line":19,"column":0},"end":{"line":19,"column":11}},"19":{"start":{"line":20,"column":0},"end":{"line":20,"column":56}},"20":{"start":{"line":21,"column":0},"end":{"line":21,"column":35}},"21":{"start":{"line":22,"column":0},"end":{"line":22,"column":16}},"22":{"start":{"line":23,"column":0},"end":{"line":23,"column":42}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":24}},"26":{"start":{"line":27,"column":0},"end":{"line":27,"column":64}},"27":{"start":{"line":28,"column":0},"end":{"line":28,"column":36}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":11}},"29":{"start":{"line":30,"column":0},"end":{"line":30,"column":20}},"30":{"start":{"line":31,"column":0},"end":{"line":31,"column":70}},"31":{"start":{"line":32,"column":0},"end":{"line":32,"column":17}},"32":{"start":{"line":33,"column":0},"end":{"line":33,"column":9}},"35":{"start":{"line":36,"column":0},"end":{"line":36,"column":97}},"38":{"start":{"line":39,"column":0},"end":{"line":39,"column":38}},"39":{"start":{"line":40,"column":0},"end":{"line":40,"column":75}},"40":{"start":{"line":41,"column":0},"end":{"line":41,"column":39}},"41":{"start":{"line":42,"column":0},"end":{"line":42,"column":22}},"42":{"start":{"line":43,"column":0},"end":{"line":43,"column":37}},"43":{"start":{"line":44,"column":0},"end":{"line":44,"column":27}},"44":{"start":{"line":45,"column":0},"end":{"line":45,"column":41}},"45":{"start":{"line":46,"column":0},"end":{"line":46,"column":43}},"46":{"start":{"line":47,"column":0},"end":{"line":47,"column":28}},"47":{"start":{"line":48,"column":0},"end":{"line":48,"column":14}},"48":{"start":{"line":49,"column":0},"end":{"line":49,"column":13}},"49":{"start":{"line":50,"column":0},"end":{"line":50,"column":24}},"50":{"start":{"line":51,"column":0},"end":{"line":51,"column":39}},"51":{"start":{"line":52,"column":0},"end":{"line":52,"column":11}},"52":{"start":{"line":53,"column":0},"end":{"line":53,"column":9}},"54":{"start":{"line":55,"column":0},"end":{"line":55,"column":43}},"55":{"start":{"line":56,"column":0},"end":{"line":56,"column":75}},"56":{"start":{"line":57,"column":0},"end":{"line":57,"column":39}},"57":{"start":{"line":58,"column":0},"end":{"line":58,"column":22}},"58":{"start":{"line":59,"column":0},"end":{"line":59,"column":29}},"59":{"start":{"line":60,"column":0},"end":{"line":60,"column":33}},"60":{"start":{"line":61,"column":0},"end":{"line":61,"column":28}},"61":{"start":{"line":62,"column":0},"end":{"line":62,"column":14}},"62":{"start":{"line":63,"column":0},"end":{"line":63,"column":13}},"63":{"start":{"line":64,"column":0},"end":{"line":64,"column":24}},"64":{"start":{"line":65,"column":0},"end":{"line":65,"column":39}},"65":{"start":{"line":66,"column":0},"end":{"line":66,"column":11}},"66":{"start":{"line":67,"column":0},"end":{"line":67,"column":9}},"68":{"start":{"line":69,"column":0},"end":{"line":69,"column":28}},"69":{"start":{"line":70,"column":0},"end":{"line":70,"column":15}},"70":{"start":{"line":71,"column":0},"end":{"line":71,"column":23}},"71":{"start":{"line":72,"column":0},"end":{"line":72,"column":29}},"72":{"start":{"line":73,"column":0},"end":{"line":73,"column":78}},"73":{"start":{"line":74,"column":0},"end":{"line":74,"column":7}},"74":{"start":{"line":75,"column":0},"end":{"line":75,"column":12}},"75":{"start":{"line":76,"column":0},"end":{"line":76,"column":73}},"76":{"start":{"line":77,"column":0},"end":{"line":77,"column":5}},"77":{"start":{"line":78,"column":0},"end":{"line":78,"column":3}},"78":{"start":{"line":79,"column":0},"end":{"line":79,"column":2}}},"s":{"1":1,"2":1,"3":1,"5":1,"11":1,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"35":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":1},"branchMap":{},"b":{},"fnMap":{},"f":{}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/middleware/errorMiddleware.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/middleware/errorMiddleware.ts","all":false,"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":44}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":79}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":93}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":34}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":35}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":12}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":81}},"9":{"start":{"line":10,"column":0},"end":{"line":10,"column":31}},"10":{"start":{"line":11,"column":0},"end":{"line":11,"column":5}},"13":{"start":{"line":14,"column":0},"end":{"line":14,"column":55}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":34}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":57}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":16}},"17":{"start":{"line":18,"column":0},"end":{"line":18,"column":72}},"18":{"start":{"line":19,"column":0},"end":{"line":19,"column":9}},"19":{"start":{"line":20,"column":0},"end":{"line":20,"column":5}},"21":{"start":{"line":22,"column":0},"end":{"line":22,"column":14}},"22":{"start":{"line":23,"column":0},"end":{"line":23,"column":29}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":77}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":7}},"26":{"start":{"line":27,"column":0},"end":{"line":27,"column":2}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":28}}},"s":{"1":1,"2":1,"4":1,"5":18,"6":17,"7":18,"8":1,"9":1,"10":1,"13":18,"14":1,"15":1,"16":1,"17":0,"18":0,"19":1,"21":18,"22":18,"24":18,"25":18,"26":18,"28":1},"branchMap":{"0":{"type":"branch","line":5,"loc":{"start":{"line":5,"column":21},"end":{"line":27,"column":2}},"locations":[{"start":{"line":5,"column":21},"end":{"line":27,"column":2}}]},"1":{"type":"branch","line":6,"loc":{"start":{"line":6,"column":33},"end":{"line":8,"column":11}},"locations":[{"start":{"line":6,"column":33},"end":{"line":8,"column":11}}]},"2":{"type":"branch","line":8,"loc":{"start":{"line":8,"column":4},"end":{"line":11,"column":5}},"locations":[{"start":{"line":8,"column":4},"end":{"line":11,"column":5}}]},"3":{"type":"branch","line":9,"loc":{"start":{"line":9,"column":60},"end":{"line":9,"column":81}},"locations":[{"start":{"line":9,"column":60},"end":{"line":9,"column":81}}]},"4":{"type":"branch","line":14,"loc":{"start":{"line":14,"column":54},"end":{"line":20,"column":5}},"locations":[{"start":{"line":14,"column":54},"end":{"line":20,"column":5}}]},"5":{"type":"branch","line":17,"loc":{"start":{"line":17,"column":8},"end":{"line":19,"column":9}},"locations":[{"start":{"line":17,"column":8},"end":{"line":19,"column":9}}]},"6":{"type":"branch","line":25,"loc":{"start":{"line":25,"column":40},"end":{"line":25,"column":67}},"locations":[{"start":{"line":25,"column":40},"end":{"line":25,"column":67}}]}},"b":{"0":[18],"1":[17],"2":[1],"3":[0],"4":[1],"5":[0],"6":[0]},"fnMap":{"0":{"name":"errorHandler","decl":{"start":{"line":5,"column":21},"end":{"line":27,"column":2}},"loc":{"start":{"line":5,"column":21},"end":{"line":27,"column":2}},"line":5}},"f":{"0":18}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/middleware/questionsAuthMiddleware.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/middleware/questionsAuthMiddleware.ts","all":false,"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":49}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":46}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":67}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":34}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":46}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":75}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":38}},"17":{"start":{"line":18,"column":0},"end":{"line":18,"column":26}},"18":{"start":{"line":19,"column":0},"end":{"line":19,"column":16}},"19":{"start":{"line":20,"column":0},"end":{"line":20,"column":50}},"20":{"start":{"line":21,"column":0},"end":{"line":21,"column":5}},"22":{"start":{"line":23,"column":0},"end":{"line":23,"column":55}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":40}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":16}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":15}},"26":{"start":{"line":27,"column":0},"end":{"line":27,"column":20}},"27":{"start":{"line":28,"column":0},"end":{"line":28,"column":27}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":20}},"29":{"start":{"line":30,"column":0},"end":{"line":30,"column":24}},"30":{"start":{"line":31,"column":0},"end":{"line":31,"column":34}},"31":{"start":{"line":32,"column":0},"end":{"line":32,"column":15}},"32":{"start":{"line":33,"column":0},"end":{"line":33,"column":13}},"33":{"start":{"line":34,"column":0},"end":{"line":34,"column":11}},"34":{"start":{"line":35,"column":0},"end":{"line":35,"column":9}},"35":{"start":{"line":36,"column":0},"end":{"line":36,"column":7}},"36":{"start":{"line":37,"column":0},"end":{"line":37,"column":7}},"37":{"start":{"line":38,"column":0},"end":{"line":38,"column":20}},"38":{"start":{"line":39,"column":0},"end":{"line":39,"column":52}},"39":{"start":{"line":40,"column":0},"end":{"line":40,"column":5}},"42":{"start":{"line":43,"column":0},"end":{"line":43,"column":67}},"43":{"start":{"line":44,"column":0},"end":{"line":44,"column":36}},"44":{"start":{"line":45,"column":0},"end":{"line":45,"column":6}},"46":{"start":{"line":47,"column":0},"end":{"line":47,"column":83}},"49":{"start":{"line":50,"column":0},"end":{"line":50,"column":42}},"51":{"start":{"line":52,"column":0},"end":{"line":52,"column":29}},"53":{"start":{"line":54,"column":0},"end":{"line":54,"column":55}},"54":{"start":{"line":55,"column":0},"end":{"line":55,"column":56}},"55":{"start":{"line":56,"column":0},"end":{"line":56,"column":69}},"56":{"start":{"line":57,"column":0},"end":{"line":57,"column":7}},"57":{"start":{"line":58,"column":0},"end":{"line":58,"column":12}},"59":{"start":{"line":60,"column":0},"end":{"line":60,"column":62}},"60":{"start":{"line":61,"column":0},"end":{"line":61,"column":60}},"61":{"start":{"line":62,"column":0},"end":{"line":62,"column":7}},"62":{"start":{"line":63,"column":0},"end":{"line":63,"column":5}},"64":{"start":{"line":65,"column":0},"end":{"line":65,"column":11}},"65":{"start":{"line":66,"column":0},"end":{"line":66,"column":3}},"66":{"start":{"line":67,"column":0},"end":{"line":67,"column":2}},"74":{"start":{"line":75,"column":0},"end":{"line":75,"column":52}},"75":{"start":{"line":76,"column":0},"end":{"line":76,"column":75}},"76":{"start":{"line":77,"column":0},"end":{"line":77,"column":38}},"77":{"start":{"line":78,"column":0},"end":{"line":78,"column":26}},"78":{"start":{"line":79,"column":0},"end":{"line":79,"column":16}},"79":{"start":{"line":80,"column":0},"end":{"line":80,"column":50}},"80":{"start":{"line":81,"column":0},"end":{"line":81,"column":5}},"82":{"start":{"line":83,"column":0},"end":{"line":83,"column":55}},"83":{"start":{"line":84,"column":0},"end":{"line":84,"column":40}},"84":{"start":{"line":85,"column":0},"end":{"line":85,"column":16}},"85":{"start":{"line":86,"column":0},"end":{"line":86,"column":15}},"86":{"start":{"line":87,"column":0},"end":{"line":87,"column":20}},"87":{"start":{"line":88,"column":0},"end":{"line":88,"column":20}},"88":{"start":{"line":89,"column":0},"end":{"line":89,"column":24}},"89":{"start":{"line":90,"column":0},"end":{"line":90,"column":34}},"90":{"start":{"line":91,"column":0},"end":{"line":91,"column":15}},"91":{"start":{"line":92,"column":0},"end":{"line":92,"column":13}},"92":{"start":{"line":93,"column":0},"end":{"line":93,"column":11}},"93":{"start":{"line":94,"column":0},"end":{"line":94,"column":9}},"94":{"start":{"line":95,"column":0},"end":{"line":95,"column":7}},"95":{"start":{"line":96,"column":0},"end":{"line":96,"column":7}},"96":{"start":{"line":97,"column":0},"end":{"line":97,"column":20}},"97":{"start":{"line":98,"column":0},"end":{"line":98,"column":52}},"98":{"start":{"line":99,"column":0},"end":{"line":99,"column":5}},"101":{"start":{"line":102,"column":0},"end":{"line":102,"column":53}},"106":{"start":{"line":107,"column":0},"end":{"line":107,"column":44}},"108":{"start":{"line":109,"column":0},"end":{"line":109,"column":32}},"109":{"start":{"line":110,"column":0},"end":{"line":110,"column":96}},"110":{"start":{"line":111,"column":0},"end":{"line":111,"column":5}},"112":{"start":{"line":113,"column":0},"end":{"line":113,"column":11}},"113":{"start":{"line":114,"column":0},"end":{"line":114,"column":3}},"114":{"start":{"line":115,"column":0},"end":{"line":115,"column":2}},"120":{"start":{"line":121,"column":0},"end":{"line":121,"column":51}},"121":{"start":{"line":122,"column":0},"end":{"line":122,"column":75}},"122":{"start":{"line":123,"column":0},"end":{"line":123,"column":45}},"123":{"start":{"line":124,"column":0},"end":{"line":124,"column":26}},"124":{"start":{"line":125,"column":0},"end":{"line":125,"column":16}},"125":{"start":{"line":126,"column":0},"end":{"line":126,"column":50}},"126":{"start":{"line":127,"column":0},"end":{"line":127,"column":5}},"128":{"start":{"line":129,"column":0},"end":{"line":129,"column":61}},"129":{"start":{"line":130,"column":0},"end":{"line":130,"column":46}},"130":{"start":{"line":131,"column":0},"end":{"line":131,"column":7}},"131":{"start":{"line":132,"column":0},"end":{"line":132,"column":19}},"132":{"start":{"line":133,"column":0},"end":{"line":133,"column":59}},"133":{"start":{"line":134,"column":0},"end":{"line":134,"column":5}},"135":{"start":{"line":136,"column":0},"end":{"line":136,"column":49}},"136":{"start":{"line":137,"column":0},"end":{"line":137,"column":44}},"138":{"start":{"line":139,"column":0},"end":{"line":139,"column":31}},"139":{"start":{"line":140,"column":0},"end":{"line":140,"column":84}},"140":{"start":{"line":141,"column":0},"end":{"line":141,"column":5}},"143":{"start":{"line":144,"column":0},"end":{"line":144,"column":11}},"144":{"start":{"line":145,"column":0},"end":{"line":145,"column":3}},"145":{"start":{"line":146,"column":0},"end":{"line":146,"column":2}},"151":{"start":{"line":152,"column":0},"end":{"line":152,"column":51}},"152":{"start":{"line":153,"column":0},"end":{"line":153,"column":75}},"153":{"start":{"line":154,"column":0},"end":{"line":154,"column":57}},"154":{"start":{"line":155,"column":0},"end":{"line":155,"column":26}},"155":{"start":{"line":156,"column":0},"end":{"line":156,"column":16}},"156":{"start":{"line":157,"column":0},"end":{"line":157,"column":50}},"157":{"start":{"line":158,"column":0},"end":{"line":158,"column":5}},"160":{"start":{"line":161,"column":0},"end":{"line":161,"column":61}},"161":{"start":{"line":162,"column":0},"end":{"line":162,"column":46}},"162":{"start":{"line":163,"column":0},"end":{"line":163,"column":7}},"163":{"start":{"line":164,"column":0},"end":{"line":164,"column":19}},"164":{"start":{"line":165,"column":0},"end":{"line":165,"column":59}},"165":{"start":{"line":166,"column":0},"end":{"line":166,"column":5}},"168":{"start":{"line":169,"column":0},"end":{"line":169,"column":37}},"169":{"start":{"line":170,"column":0},"end":{"line":170,"column":20}},"170":{"start":{"line":171,"column":0},"end":{"line":171,"column":5}},"173":{"start":{"line":174,"column":0},"end":{"line":174,"column":55}},"174":{"start":{"line":175,"column":0},"end":{"line":175,"column":40}},"175":{"start":{"line":176,"column":0},"end":{"line":176,"column":16}},"176":{"start":{"line":177,"column":0},"end":{"line":177,"column":15}},"177":{"start":{"line":178,"column":0},"end":{"line":178,"column":20}},"178":{"start":{"line":179,"column":0},"end":{"line":179,"column":20}},"179":{"start":{"line":180,"column":0},"end":{"line":180,"column":24}},"180":{"start":{"line":181,"column":0},"end":{"line":181,"column":34}},"181":{"start":{"line":182,"column":0},"end":{"line":182,"column":15}},"182":{"start":{"line":183,"column":0},"end":{"line":183,"column":13}},"183":{"start":{"line":184,"column":0},"end":{"line":184,"column":11}},"184":{"start":{"line":185,"column":0},"end":{"line":185,"column":9}},"185":{"start":{"line":186,"column":0},"end":{"line":186,"column":7}},"186":{"start":{"line":187,"column":0},"end":{"line":187,"column":7}},"187":{"start":{"line":188,"column":0},"end":{"line":188,"column":20}},"188":{"start":{"line":189,"column":0},"end":{"line":189,"column":69}},"189":{"start":{"line":190,"column":0},"end":{"line":190,"column":5}},"191":{"start":{"line":192,"column":0},"end":{"line":192,"column":99}},"192":{"start":{"line":193,"column":0},"end":{"line":193,"column":44}},"194":{"start":{"line":195,"column":0},"end":{"line":195,"column":40}},"195":{"start":{"line":196,"column":0},"end":{"line":196,"column":90}},"196":{"start":{"line":197,"column":0},"end":{"line":197,"column":5}},"198":{"start":{"line":199,"column":0},"end":{"line":199,"column":11}},"199":{"start":{"line":200,"column":0},"end":{"line":200,"column":3}},"200":{"start":{"line":201,"column":0},"end":{"line":201,"column":2}}},"s":{"1":1,"2":1,"4":1,"6":1,"14":1,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"42":0,"43":0,"44":0,"46":0,"49":0,"51":0,"53":0,"54":0,"55":0,"56":0,"57":0,"59":0,"60":0,"61":0,"62":0,"64":0,"65":0,"66":1,"74":1,"75":1,"76":0,"77":0,"78":0,"79":0,"80":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"101":0,"106":0,"108":0,"109":0,"110":0,"112":0,"113":0,"114":1,"120":1,"121":1,"122":0,"123":0,"124":0,"125":0,"126":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"135":0,"136":0,"138":0,"139":0,"140":0,"143":0,"144":0,"145":1,"151":1,"152":1,"153":0,"154":0,"155":0,"156":0,"157":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"168":0,"169":0,"170":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"191":0,"192":0,"194":0,"195":0,"196":0,"198":0,"199":0,"200":1},"branchMap":{},"b":{},"fnMap":{},"f":{}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/middleware/studentAuthMiddleware.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/middleware/studentAuthMiddleware.ts","all":false,"statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":31}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":49}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":46}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":34}},"18":{"start":{"line":19,"column":0},"end":{"line":19,"column":43}},"19":{"start":{"line":20,"column":0},"end":{"line":20,"column":90}},"20":{"start":{"line":21,"column":0},"end":{"line":21,"column":34}},"22":{"start":{"line":23,"column":0},"end":{"line":23,"column":8}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":34}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":52}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":7}},"26":{"start":{"line":27,"column":0},"end":{"line":27,"column":11}},"27":{"start":{"line":28,"column":0},"end":{"line":28,"column":56}},"29":{"start":{"line":30,"column":0},"end":{"line":30,"column":35}},"30":{"start":{"line":31,"column":0},"end":{"line":31,"column":16}},"31":{"start":{"line":32,"column":0},"end":{"line":32,"column":42}},"32":{"start":{"line":33,"column":0},"end":{"line":33,"column":24}},"35":{"start":{"line":36,"column":0},"end":{"line":36,"column":57}},"36":{"start":{"line":37,"column":0},"end":{"line":37,"column":74}},"37":{"start":{"line":38,"column":0},"end":{"line":38,"column":91}},"38":{"start":{"line":39,"column":0},"end":{"line":39,"column":11}},"40":{"start":{"line":41,"column":0},"end":{"line":41,"column":23}},"41":{"start":{"line":42,"column":0},"end":{"line":42,"column":68}},"42":{"start":{"line":43,"column":0},"end":{"line":43,"column":75}},"43":{"start":{"line":44,"column":0},"end":{"line":44,"column":9}},"45":{"start":{"line":46,"column":0},"end":{"line":46,"column":69}},"46":{"start":{"line":47,"column":0},"end":{"line":47,"column":15}},"47":{"start":{"line":48,"column":0},"end":{"line":48,"column":23}},"48":{"start":{"line":49,"column":0},"end":{"line":49,"column":29}},"49":{"start":{"line":50,"column":0},"end":{"line":50,"column":78}},"50":{"start":{"line":51,"column":0},"end":{"line":51,"column":73}},"51":{"start":{"line":52,"column":0},"end":{"line":52,"column":7}},"52":{"start":{"line":53,"column":0},"end":{"line":53,"column":12}},"53":{"start":{"line":54,"column":0},"end":{"line":54,"column":73}},"54":{"start":{"line":55,"column":0},"end":{"line":55,"column":71}},"55":{"start":{"line":56,"column":0},"end":{"line":56,"column":5}},"56":{"start":{"line":57,"column":0},"end":{"line":57,"column":3}},"57":{"start":{"line":58,"column":0},"end":{"line":58,"column":2}}},"s":{"0":1,"1":1,"2":1,"5":1,"18":1,"19":1,"20":28,"22":28,"23":28,"24":28,"25":28,"26":28,"27":28,"29":28,"30":28,"31":28,"32":28,"35":28,"36":28,"37":28,"38":28,"40":28,"41":2,"42":2,"43":2,"45":26,"46":26,"47":28,"48":0,"49":0,"50":0,"51":0,"52":28,"53":0,"54":0,"55":0,"56":28,"57":1},"branchMap":{"0":{"type":"branch","line":20,"loc":{"start":{"line":20,"column":2},"end":{"line":57,"column":3}},"locations":[{"start":{"line":20,"column":2},"end":{"line":57,"column":3}}]},"1":{"type":"branch","line":41,"loc":{"start":{"line":41,"column":22},"end":{"line":44,"column":9}},"locations":[{"start":{"line":41,"column":22},"end":{"line":44,"column":9}}]},"2":{"type":"branch","line":44,"loc":{"start":{"line":44,"column":8},"end":{"line":48,"column":15}},"locations":[{"start":{"line":44,"column":8},"end":{"line":48,"column":15}}]},"3":{"type":"branch","line":48,"loc":{"start":{"line":48,"column":6},"end":{"line":52,"column":7}},"locations":[{"start":{"line":48,"column":6},"end":{"line":52,"column":7}}]},"4":{"type":"branch","line":53,"loc":{"start":{"line":53,"column":4},"end":{"line":56,"column":5}},"locations":[{"start":{"line":53,"column":4},"end":{"line":56,"column":5}}]}},"b":{"0":[28],"1":[2],"2":[26],"3":[0],"4":[0]},"fnMap":{},"f":{}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/middleware/teacherAuthMiddleware.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/middleware/teacherAuthMiddleware.ts","all":false,"statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":31}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":49}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":46}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":76}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":34}},"12":{"start":{"line":13,"column":0},"end":{"line":13,"column":113}},"13":{"start":{"line":14,"column":0},"end":{"line":14,"column":30}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":16}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":52}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":65}},"17":{"start":{"line":18,"column":0},"end":{"line":18,"column":3}},"19":{"start":{"line":20,"column":0},"end":{"line":20,"column":73}},"20":{"start":{"line":21,"column":0},"end":{"line":21,"column":17}},"21":{"start":{"line":22,"column":0},"end":{"line":22,"column":93}},"22":{"start":{"line":23,"column":0},"end":{"line":23,"column":42}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":3}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":52}},"26":{"start":{"line":27,"column":0},"end":{"line":27,"column":2}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":43}},"29":{"start":{"line":30,"column":0},"end":{"line":30,"column":90}},"30":{"start":{"line":31,"column":0},"end":{"line":31,"column":34}},"32":{"start":{"line":33,"column":0},"end":{"line":33,"column":8}},"33":{"start":{"line":34,"column":0},"end":{"line":34,"column":34}},"34":{"start":{"line":35,"column":0},"end":{"line":35,"column":52}},"35":{"start":{"line":36,"column":0},"end":{"line":36,"column":7}},"36":{"start":{"line":37,"column":0},"end":{"line":37,"column":11}},"37":{"start":{"line":38,"column":0},"end":{"line":38,"column":56}},"38":{"start":{"line":39,"column":0},"end":{"line":39,"column":90}},"41":{"start":{"line":42,"column":0},"end":{"line":42,"column":57}},"42":{"start":{"line":43,"column":0},"end":{"line":43,"column":40}},"43":{"start":{"line":44,"column":0},"end":{"line":44,"column":86}},"44":{"start":{"line":45,"column":0},"end":{"line":45,"column":11}},"46":{"start":{"line":47,"column":0},"end":{"line":47,"column":23}},"48":{"start":{"line":49,"column":0},"end":{"line":49,"column":71}},"49":{"start":{"line":50,"column":0},"end":{"line":50,"column":17}},"50":{"start":{"line":51,"column":0},"end":{"line":51,"column":9}},"52":{"start":{"line":53,"column":0},"end":{"line":53,"column":86}},"53":{"start":{"line":54,"column":0},"end":{"line":54,"column":15}},"54":{"start":{"line":55,"column":0},"end":{"line":55,"column":23}},"55":{"start":{"line":56,"column":0},"end":{"line":56,"column":29}},"57":{"start":{"line":58,"column":0},"end":{"line":58,"column":78}},"58":{"start":{"line":59,"column":0},"end":{"line":59,"column":15}},"59":{"start":{"line":60,"column":0},"end":{"line":60,"column":7}},"60":{"start":{"line":61,"column":0},"end":{"line":61,"column":12}},"62":{"start":{"line":63,"column":0},"end":{"line":63,"column":73}},"63":{"start":{"line":64,"column":0},"end":{"line":64,"column":13}},"64":{"start":{"line":65,"column":0},"end":{"line":65,"column":5}},"65":{"start":{"line":66,"column":0},"end":{"line":66,"column":3}},"66":{"start":{"line":67,"column":0},"end":{"line":67,"column":2}}},"s":{"0":1,"1":1,"2":1,"4":1,"6":1,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"19":0,"20":0,"21":0,"22":0,"23":0,"25":0,"26":0,"28":1,"29":1,"30":65,"32":65,"33":65,"34":65,"35":65,"36":65,"37":65,"38":65,"41":65,"42":65,"43":65,"44":65,"46":65,"48":3,"49":3,"50":3,"52":62,"53":62,"54":65,"55":0,"57":0,"58":0,"59":0,"60":65,"62":0,"63":0,"64":0,"65":65,"66":1},"branchMap":{"0":{"type":"branch","line":30,"loc":{"start":{"line":30,"column":2},"end":{"line":66,"column":3}},"locations":[{"start":{"line":30,"column":2},"end":{"line":66,"column":3}}]},"1":{"type":"branch","line":47,"loc":{"start":{"line":47,"column":22},"end":{"line":51,"column":9}},"locations":[{"start":{"line":47,"column":22},"end":{"line":51,"column":9}}]},"2":{"type":"branch","line":51,"loc":{"start":{"line":51,"column":8},"end":{"line":55,"column":15}},"locations":[{"start":{"line":51,"column":8},"end":{"line":55,"column":15}}]},"3":{"type":"branch","line":55,"loc":{"start":{"line":55,"column":6},"end":{"line":60,"column":7}},"locations":[{"start":{"line":55,"column":6},"end":{"line":60,"column":7}}]},"4":{"type":"branch","line":61,"loc":{"start":{"line":61,"column":4},"end":{"line":65,"column":5}},"locations":[{"start":{"line":61,"column":4},"end":{"line":65,"column":5}}]}},"b":{"0":[65],"1":[3],"2":[62],"3":[0],"4":[0]},"fnMap":{"0":{"name":"isTeacher","decl":{"start":{"line":13,"column":25},"end":{"line":27,"column":2}},"loc":{"start":{"line":13,"column":25},"end":{"line":27,"column":2}},"line":13}},"f":{"0":0}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/middleware/teamValidationMiddleware.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/middleware/teamValidationMiddleware.ts","all":false,"statementMap":{"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":49}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":22}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":143}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":65}},"9":{"start":{"line":10,"column":0},"end":{"line":10,"column":30}},"10":{"start":{"line":11,"column":0},"end":{"line":11,"column":87}},"11":{"start":{"line":12,"column":0},"end":{"line":12,"column":15}},"12":{"start":{"line":13,"column":0},"end":{"line":13,"column":5}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":11}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":3}},"18":{"start":{"line":19,"column":0},"end":{"line":19,"column":137}},"19":{"start":{"line":20,"column":0},"end":{"line":20,"column":59}},"21":{"start":{"line":22,"column":0},"end":{"line":22,"column":30}},"22":{"start":{"line":23,"column":0},"end":{"line":23,"column":81}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":15}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":5}},"26":{"start":{"line":27,"column":0},"end":{"line":27,"column":11}},"27":{"start":{"line":28,"column":0},"end":{"line":28,"column":3}},"29":{"start":{"line":30,"column":0},"end":{"line":30,"column":37}},"30":{"start":{"line":31,"column":0},"end":{"line":31,"column":74}},"31":{"start":{"line":32,"column":0},"end":{"line":32,"column":24}},"32":{"start":{"line":33,"column":0},"end":{"line":33,"column":35}},"33":{"start":{"line":34,"column":0},"end":{"line":34,"column":72}},"34":{"start":{"line":35,"column":0},"end":{"line":35,"column":3}},"36":{"start":{"line":37,"column":0},"end":{"line":37,"column":66}},"37":{"start":{"line":38,"column":0},"end":{"line":38,"column":40}},"38":{"start":{"line":39,"column":0},"end":{"line":39,"column":3}},"44":{"start":{"line":45,"column":0},"end":{"line":45,"column":62}},"45":{"start":{"line":46,"column":0},"end":{"line":46,"column":92}},"46":{"start":{"line":47,"column":0},"end":{"line":47,"column":35}},"48":{"start":{"line":49,"column":0},"end":{"line":49,"column":68}},"49":{"start":{"line":50,"column":0},"end":{"line":50,"column":30}},"50":{"start":{"line":51,"column":0},"end":{"line":51,"column":65}},"51":{"start":{"line":52,"column":0},"end":{"line":52,"column":19}},"52":{"start":{"line":53,"column":0},"end":{"line":53,"column":9}},"54":{"start":{"line":55,"column":0},"end":{"line":55,"column":37}},"55":{"start":{"line":56,"column":0},"end":{"line":56,"column":15}},"56":{"start":{"line":57,"column":0},"end":{"line":57,"column":5}},"57":{"start":{"line":58,"column":0},"end":{"line":58,"column":2}},"66":{"start":{"line":67,"column":0},"end":{"line":67,"column":73}},"67":{"start":{"line":68,"column":0},"end":{"line":68,"column":92}},"68":{"start":{"line":69,"column":0},"end":{"line":69,"column":35}},"70":{"start":{"line":71,"column":0},"end":{"line":71,"column":80}},"71":{"start":{"line":72,"column":0},"end":{"line":72,"column":30}},"72":{"start":{"line":73,"column":0},"end":{"line":73,"column":65}},"73":{"start":{"line":74,"column":0},"end":{"line":74,"column":19}},"74":{"start":{"line":75,"column":0},"end":{"line":75,"column":9}},"76":{"start":{"line":77,"column":0},"end":{"line":77,"column":37}},"77":{"start":{"line":78,"column":0},"end":{"line":78,"column":15}},"78":{"start":{"line":79,"column":0},"end":{"line":79,"column":5}},"79":{"start":{"line":80,"column":0},"end":{"line":80,"column":2}}},"s":{"2":1,"3":1,"6":1,"7":0,"9":0,"10":0,"11":0,"12":0,"14":0,"15":0,"18":1,"19":0,"21":0,"22":0,"23":0,"24":0,"26":0,"27":0,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"36":1,"37":1,"38":1,"44":1,"45":1,"46":0,"48":0,"49":0,"50":0,"51":0,"52":0,"54":0,"55":0,"56":0,"57":1,"66":1,"67":1,"68":0,"70":0,"71":0,"72":0,"73":0,"74":0,"76":0,"77":0,"78":0,"79":1},"branchMap":{},"b":{},"fnMap":{},"f":{}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/middleware/validateRequest.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/middleware/validateRequest.ts","all":false,"statementMap":{"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":64}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":41}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":36}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":31}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":48}},"9":{"start":{"line":10,"column":0},"end":{"line":10,"column":8}},"10":{"start":{"line":11,"column":0},"end":{"line":11,"column":2}},"21":{"start":{"line":22,"column":0},"end":{"line":22,"column":30}},"22":{"start":{"line":23,"column":0},"end":{"line":23,"column":5}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":36}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":68}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":70}},"26":{"start":{"line":27,"column":0},"end":{"line":27,"column":68}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":71}},"29":{"start":{"line":30,"column":0},"end":{"line":30,"column":92}},"30":{"start":{"line":31,"column":0},"end":{"line":31,"column":25}},"31":{"start":{"line":32,"column":0},"end":{"line":32,"column":62}},"32":{"start":{"line":33,"column":0},"end":{"line":33,"column":38}},"33":{"start":{"line":34,"column":0},"end":{"line":34,"column":81}},"34":{"start":{"line":35,"column":0},"end":{"line":35,"column":13}},"35":{"start":{"line":36,"column":0},"end":{"line":36,"column":9}},"37":{"start":{"line":38,"column":0},"end":{"line":38,"column":27}},"38":{"start":{"line":39,"column":0},"end":{"line":39,"column":68}},"39":{"start":{"line":40,"column":0},"end":{"line":40,"column":40}},"40":{"start":{"line":41,"column":0},"end":{"line":41,"column":85}},"41":{"start":{"line":42,"column":0},"end":{"line":42,"column":13}},"42":{"start":{"line":43,"column":0},"end":{"line":43,"column":9}},"44":{"start":{"line":45,"column":0},"end":{"line":45,"column":26}},"45":{"start":{"line":46,"column":0},"end":{"line":46,"column":65}},"46":{"start":{"line":47,"column":0},"end":{"line":47,"column":39}},"47":{"start":{"line":48,"column":0},"end":{"line":48,"column":83}},"48":{"start":{"line":49,"column":0},"end":{"line":49,"column":13}},"49":{"start":{"line":50,"column":0},"end":{"line":50,"column":9}},"51":{"start":{"line":52,"column":0},"end":{"line":52,"column":39}},"52":{"start":{"line":53,"column":0},"end":{"line":53,"column":34}},"53":{"start":{"line":54,"column":0},"end":{"line":54,"column":42}},"54":{"start":{"line":55,"column":0},"end":{"line":55,"column":83}},"55":{"start":{"line":56,"column":0},"end":{"line":56,"column":39}},"56":{"start":{"line":57,"column":0},"end":{"line":57,"column":15}},"57":{"start":{"line":58,"column":0},"end":{"line":58,"column":19}},"58":{"start":{"line":59,"column":0},"end":{"line":59,"column":9}},"60":{"start":{"line":61,"column":0},"end":{"line":61,"column":15}},"61":{"start":{"line":62,"column":0},"end":{"line":62,"column":6}}},"s":{"4":1,"5":7,"6":8,"7":8,"8":8,"9":7,"10":7,"21":1,"22":1,"23":28,"24":28,"25":28,"26":28,"28":28,"29":23,"30":23,"31":15,"32":15,"33":3,"34":3,"35":15,"37":23,"38":23,"39":23,"40":4,"41":4,"42":23,"44":23,"45":0,"46":0,"47":0,"48":0,"49":0,"51":23,"52":6,"53":6,"54":6,"55":6,"56":6,"57":6,"58":6,"60":17,"61":17},"branchMap":{"0":{"type":"branch","line":5,"loc":{"start":{"line":5,"column":24},"end":{"line":11,"column":2}},"locations":[{"start":{"line":5,"column":24},"end":{"line":11,"column":2}}]},"1":{"type":"branch","line":6,"loc":{"start":{"line":6,"column":28},"end":{"line":10,"column":6}},"locations":[{"start":{"line":6,"column":28},"end":{"line":10,"column":6}}]},"2":{"type":"branch","line":23,"loc":{"start":{"line":23,"column":4},"end":{"line":62,"column":6}},"locations":[{"start":{"line":23,"column":4},"end":{"line":62,"column":6}}]},"3":{"type":"branch","line":29,"loc":{"start":{"line":29,"column":4},"end":{"line":62,"column":6}},"locations":[{"start":{"line":29,"column":4},"end":{"line":62,"column":6}}]},"4":{"type":"branch","line":31,"loc":{"start":{"line":31,"column":24},"end":{"line":36,"column":9}},"locations":[{"start":{"line":31,"column":24},"end":{"line":36,"column":9}}]},"5":{"type":"branch","line":33,"loc":{"start":{"line":33,"column":37},"end":{"line":35,"column":13}},"locations":[{"start":{"line":33,"column":37},"end":{"line":35,"column":13}}]},"6":{"type":"branch","line":40,"loc":{"start":{"line":40,"column":39},"end":{"line":42,"column":13}},"locations":[{"start":{"line":40,"column":39},"end":{"line":42,"column":13}}]},"7":{"type":"branch","line":45,"loc":{"start":{"line":45,"column":25},"end":{"line":50,"column":9}},"locations":[{"start":{"line":45,"column":25},"end":{"line":50,"column":9}}]},"8":{"type":"branch","line":52,"loc":{"start":{"line":52,"column":38},"end":{"line":59,"column":9}},"locations":[{"start":{"line":52,"column":38},"end":{"line":59,"column":9}}]},"9":{"type":"branch","line":55,"loc":{"start":{"line":55,"column":25},"end":{"line":55,"column":83}},"locations":[{"start":{"line":55,"column":25},"end":{"line":55,"column":83}}]},"10":{"type":"branch","line":59,"loc":{"start":{"line":59,"column":8},"end":{"line":62,"column":6}},"locations":[{"start":{"line":59,"column":8},"end":{"line":62,"column":6}}]}},"b":{"0":[7],"1":[8],"2":[28],"3":[23],"4":[15],"5":[3],"6":[4],"7":[0],"8":[6],"9":[0],"10":[17]},"fnMap":{"0":{"name":"formatZodErrors","decl":{"start":{"line":5,"column":24},"end":{"line":11,"column":2}},"loc":{"start":{"line":5,"column":24},"end":{"line":11,"column":2}},"line":5},"1":{"name":"validateRequest","decl":{"start":{"line":23,"column":4},"end":{"line":62,"column":6}},"loc":{"start":{"line":23,"column":4},"end":{"line":62,"column":6}},"line":23}},"f":{"0":7,"1":28}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/assignmentRoutes.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/assignmentRoutes.ts","all":false,"statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":40}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":73}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":40}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":46}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":60}},"9":{"start":{"line":10,"column":0},"end":{"line":10,"column":22}}},"s":{"0":1,"1":1,"3":1,"4":1,"7":1,"9":1},"branchMap":{},"b":{},"fnMap":{},"f":{}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/progressRoutes.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/progressRoutes.ts","all":false,"statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":42}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":8}},"10":{"start":{"line":11,"column":0},"end":{"line":11,"column":69}},"11":{"start":{"line":12,"column":0},"end":{"line":12,"column":69}},"13":{"start":{"line":14,"column":0},"end":{"line":14,"column":40}},"27":{"start":{"line":28,"column":0},"end":{"line":28,"column":74}},"35":{"start":{"line":36,"column":0},"end":{"line":36,"column":77}},"43":{"start":{"line":44,"column":0},"end":{"line":44,"column":75}},"54":{"start":{"line":55,"column":0},"end":{"line":55,"column":71}},"63":{"start":{"line":64,"column":0},"end":{"line":64,"column":94}},"72":{"start":{"line":73,"column":0},"end":{"line":73,"column":88}},"88":{"start":{"line":89,"column":0},"end":{"line":89,"column":71}},"97":{"start":{"line":98,"column":0},"end":{"line":98,"column":91}},"99":{"start":{"line":100,"column":0},"end":{"line":100,"column":22}}},"s":{"0":1,"1":1,"10":1,"11":1,"13":1,"27":1,"35":1,"43":1,"54":1,"63":1,"72":1,"88":1,"97":1,"99":1},"branchMap":{},"b":{},"fnMap":{},"f":{}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/learningObject/learningObjectRoutes.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/learningObject/learningObjectRoutes.ts","all":false,"statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":30}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":8}},"9":{"start":{"line":10,"column":0},"end":{"line":10,"column":72}},"11":{"start":{"line":12,"column":0},"end":{"line":12,"column":32}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":27}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":49}},"17":{"start":{"line":18,"column":0},"end":{"line":18,"column":55}},"18":{"start":{"line":19,"column":0},"end":{"line":19,"column":65}},"22":{"start":{"line":23,"column":0},"end":{"line":23,"column":69}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":48}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":22}}},"s":{"0":1,"1":1,"9":1,"11":1,"14":1,"16":1,"17":1,"18":1,"22":1,"24":1,"28":1},"branchMap":{},"b":{},"fnMap":{},"f":{}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/learningPath/learningPathRoutes.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/learningPath/learningPathRoutes.ts","all":false,"statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":42}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":9}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":72}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":40}},"10":{"start":{"line":11,"column":0},"end":{"line":11,"column":27}},"13":{"start":{"line":14,"column":0},"end":{"line":14,"column":47}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":54}},"18":{"start":{"line":19,"column":0},"end":{"line":19,"column":22}}},"s":{"0":1,"1":1,"5":1,"7":1,"10":1,"13":1,"16":1,"18":1},"branchMap":{},"b":{},"fnMap":{},"f":{}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/question/questionRoutes.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/question/questionRoutes.ts","all":false,"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":30}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":8}},"17":{"start":{"line":18,"column":0},"end":{"line":18,"column":72}},"18":{"start":{"line":19,"column":0},"end":{"line":19,"column":8}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":32}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":27}},"31":{"start":{"line":32,"column":0},"end":{"line":32,"column":74}},"34":{"start":{"line":35,"column":0},"end":{"line":35,"column":72}},"37":{"start":{"line":38,"column":0},"end":{"line":38,"column":78}},"40":{"start":{"line":41,"column":0},"end":{"line":41,"column":70}},"42":{"start":{"line":43,"column":0},"end":{"line":43,"column":103}},"45":{"start":{"line":46,"column":0},"end":{"line":46,"column":59}},"48":{"start":{"line":49,"column":0},"end":{"line":49,"column":76}},"51":{"start":{"line":52,"column":0},"end":{"line":52,"column":46}},"54":{"start":{"line":55,"column":0},"end":{"line":55,"column":49}},"57":{"start":{"line":58,"column":0},"end":{"line":58,"column":79}},"60":{"start":{"line":61,"column":0},"end":{"line":61,"column":65}},"63":{"start":{"line":64,"column":0},"end":{"line":64,"column":104}},"65":{"start":{"line":66,"column":0},"end":{"line":66,"column":22}}},"s":{"1":1,"2":1,"17":1,"18":1,"25":1,"28":1,"31":1,"34":1,"37":1,"40":1,"42":1,"45":1,"48":1,"51":1,"54":1,"57":1,"60":1,"63":1,"65":1},"branchMap":{},"b":{},"fnMap":{},"f":{}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/student/studentAssignmentRoutes.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/student/studentAssignmentRoutes.ts","all":false,"statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":42}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":94}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":72}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":40}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":55}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":22}}},"s":{"0":1,"1":1,"2":1,"4":1,"6":1,"8":1},"branchMap":{},"b":{},"fnMap":{},"f":{}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/student/studentAuthRoutes.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/student/studentAuthRoutes.ts","all":false,"statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":40}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":79}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":67}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":40}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":42}},"10":{"start":{"line":11,"column":0},"end":{"line":11,"column":36}},"12":{"start":{"line":13,"column":0},"end":{"line":13,"column":22}}},"s":{"0":1,"1":1,"2":1,"4":1,"7":1,"10":1,"12":1},"branchMap":{},"b":{},"fnMap":{},"f":{}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/student/studentClassRoutes.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/student/studentClassRoutes.ts","all":false,"statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":30}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":72}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":88}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":85}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":32}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":27}},"10":{"start":{"line":11,"column":0},"end":{"line":11,"column":40}},"11":{"start":{"line":12,"column":0},"end":{"line":12,"column":35}},"13":{"start":{"line":14,"column":0},"end":{"line":14,"column":22}}},"s":{"0":1,"1":1,"2":1,"3":1,"5":1,"8":1,"10":1,"11":1,"13":1},"branchMap":{},"b":{},"fnMap":{},"f":{}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/student/studentSubmissionRoute.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/student/studentSubmissionRoute.ts","all":false,"statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":40}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":79}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":70}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":40}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":27}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":80}},"10":{"start":{"line":11,"column":0},"end":{"line":11,"column":94}},"11":{"start":{"line":12,"column":0},"end":{"line":12,"column":104}},"13":{"start":{"line":14,"column":0},"end":{"line":14,"column":22}}},"s":{"0":1,"1":1,"2":1,"4":1,"6":1,"8":1,"10":1,"11":1,"13":1},"branchMap":{},"b":{},"fnMap":{},"f":{}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/student/studentTeamRoutes.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/student/studentTeamRoutes.ts","all":false,"statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":42}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":9}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":72}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":40}},"11":{"start":{"line":12,"column":0},"end":{"line":12,"column":49}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":66}},"17":{"start":{"line":18,"column":0},"end":{"line":18,"column":63}},"19":{"start":{"line":20,"column":0},"end":{"line":20,"column":22}}},"s":{"0":1,"1":1,"6":1,"8":1,"11":1,"14":1,"17":1,"19":1},"branchMap":{},"b":{},"fnMap":{},"f":{}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/teacher/feedbackRoutes.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/teacher/feedbackRoutes.ts","all":false,"statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":30}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":70}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":70}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":32}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":120}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":92}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":97}},"9":{"start":{"line":10,"column":0},"end":{"line":10,"column":98}},"11":{"start":{"line":12,"column":0},"end":{"line":12,"column":60}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":22}}},"s":{"0":1,"1":1,"2":1,"4":1,"6":1,"7":1,"8":1,"9":1,"11":1,"14":1},"branchMap":{},"b":{},"fnMap":{},"f":{}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/teacher/teacherAssignmentRoutes.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/teacher/teacherAssignmentRoutes.ts","all":false,"statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":40}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":100}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":70}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":40}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":53}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":70}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":80}},"9":{"start":{"line":10,"column":0},"end":{"line":10,"column":76}},"10":{"start":{"line":11,"column":0},"end":{"line":11,"column":77}},"12":{"start":{"line":13,"column":0},"end":{"line":13,"column":22}}},"s":{"0":1,"1":1,"2":1,"4":1,"5":1,"7":1,"8":1,"9":1,"10":1,"12":1},"branchMap":{},"b":{},"fnMap":{},"f":{}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/teacher/teacherAuthRoutes.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/teacher/teacherAuthRoutes.ts","all":false,"statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":40}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":79}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":67}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":40}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":42}},"10":{"start":{"line":11,"column":0},"end":{"line":11,"column":36}},"12":{"start":{"line":13,"column":0},"end":{"line":13,"column":22}}},"s":{"0":1,"1":1,"2":1,"4":1,"7":1,"10":1,"12":1},"branchMap":{},"b":{},"fnMap":{},"f":{}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/teacher/teacherClassRoutes.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/teacher/teacherClassRoutes.ts","all":false,"statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":30}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":72}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":8}},"10":{"start":{"line":11,"column":0},"end":{"line":11,"column":8}},"17":{"start":{"line":18,"column":0},"end":{"line":18,"column":8}},"21":{"start":{"line":22,"column":0},"end":{"line":22,"column":67}},"22":{"start":{"line":23,"column":0},"end":{"line":23,"column":8}},"31":{"start":{"line":32,"column":0},"end":{"line":32,"column":32}},"34":{"start":{"line":35,"column":0},"end":{"line":35,"column":27}},"37":{"start":{"line":38,"column":0},"end":{"line":38,"column":35}},"38":{"start":{"line":39,"column":0},"end":{"line":39,"column":34}},"39":{"start":{"line":40,"column":0},"end":{"line":40,"column":44}},"40":{"start":{"line":41,"column":0},"end":{"line":41,"column":47}},"41":{"start":{"line":42,"column":0},"end":{"line":42,"column":67}},"42":{"start":{"line":43,"column":0},"end":{"line":43,"column":55}},"45":{"start":{"line":46,"column":0},"end":{"line":46,"column":12}},"46":{"start":{"line":47,"column":0},"end":{"line":47,"column":24}},"47":{"start":{"line":48,"column":0},"end":{"line":48,"column":20}},"48":{"start":{"line":49,"column":0},"end":{"line":49,"column":46}},"49":{"start":{"line":50,"column":0},"end":{"line":50,"column":31}},"50":{"start":{"line":51,"column":0},"end":{"line":51,"column":32}},"51":{"start":{"line":52,"column":0},"end":{"line":52,"column":6}},"52":{"start":{"line":53,"column":0},"end":{"line":53,"column":16}},"53":{"start":{"line":54,"column":0},"end":{"line":54,"column":2}},"54":{"start":{"line":55,"column":0},"end":{"line":55,"column":11}},"55":{"start":{"line":56,"column":0},"end":{"line":56,"column":24}},"56":{"start":{"line":57,"column":0},"end":{"line":57,"column":86}},"57":{"start":{"line":58,"column":0},"end":{"line":58,"column":29}},"58":{"start":{"line":59,"column":0},"end":{"line":59,"column":2}},"59":{"start":{"line":60,"column":0},"end":{"line":60,"column":14}},"60":{"start":{"line":61,"column":0},"end":{"line":61,"column":34}},"61":{"start":{"line":62,"column":0},"end":{"line":62,"column":83}},"62":{"start":{"line":63,"column":0},"end":{"line":63,"column":16}},"63":{"start":{"line":64,"column":0},"end":{"line":64,"column":2}},"64":{"start":{"line":65,"column":0},"end":{"line":65,"column":13}},"65":{"start":{"line":66,"column":0},"end":{"line":66,"column":25}},"66":{"start":{"line":67,"column":0},"end":{"line":67,"column":20}},"67":{"start":{"line":68,"column":0},"end":{"line":68,"column":44}},"68":{"start":{"line":69,"column":0},"end":{"line":69,"column":31}},"69":{"start":{"line":70,"column":0},"end":{"line":70,"column":32}},"70":{"start":{"line":71,"column":0},"end":{"line":71,"column":6}},"71":{"start":{"line":72,"column":0},"end":{"line":72,"column":22}},"72":{"start":{"line":73,"column":0},"end":{"line":73,"column":2}},"73":{"start":{"line":74,"column":0},"end":{"line":74,"column":52}},"76":{"start":{"line":77,"column":0},"end":{"line":77,"column":62}},"77":{"start":{"line":78,"column":0},"end":{"line":78,"column":76}},"79":{"start":{"line":80,"column":0},"end":{"line":80,"column":22}}},"s":{"0":1,"1":1,"2":1,"10":1,"17":1,"21":1,"22":1,"31":1,"34":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"76":1,"77":1,"79":1},"branchMap":{},"b":{},"fnMap":{},"f":{}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/teacher/teacherLocalLearningObjectRoutes.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/teacher/teacherLocalLearningObjectRoutes.ts","all":false,"statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":30}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":8}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":72}},"10":{"start":{"line":11,"column":0},"end":{"line":11,"column":32}},"13":{"start":{"line":14,"column":0},"end":{"line":14,"column":27}},"19":{"start":{"line":20,"column":0},"end":{"line":20,"column":6}},"20":{"start":{"line":21,"column":0},"end":{"line":21,"column":13}},"21":{"start":{"line":22,"column":0},"end":{"line":22,"column":34}},"22":{"start":{"line":23,"column":0},"end":{"line":23,"column":32}},"29":{"start":{"line":30,"column":0},"end":{"line":30,"column":6}},"30":{"start":{"line":31,"column":0},"end":{"line":31,"column":16}},"31":{"start":{"line":32,"column":0},"end":{"line":32,"column":34}},"32":{"start":{"line":33,"column":0},"end":{"line":33,"column":35}},"33":{"start":{"line":34,"column":0},"end":{"line":34,"column":37}},"35":{"start":{"line":36,"column":0},"end":{"line":36,"column":22}}},"s":{"0":1,"1":1,"8":1,"10":1,"13":1,"19":1,"20":1,"21":1,"22":1,"29":1,"30":1,"31":1,"32":1,"33":1,"35":1},"branchMap":{},"b":{},"fnMap":{},"f":{}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/teacher/teacherLocalLearningPathNodesRoutes.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/teacher/teacherLocalLearningPathNodesRoutes.ts","all":false,"statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":33}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":72}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":8}},"9":{"start":{"line":10,"column":0},"end":{"line":10,"column":24}},"10":{"start":{"line":11,"column":0},"end":{"line":11,"column":27}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":46}},"22":{"start":{"line":23,"column":0},"end":{"line":23,"column":49}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":58}},"34":{"start":{"line":35,"column":0},"end":{"line":35,"column":60}},"36":{"start":{"line":37,"column":0},"end":{"line":37,"column":22}}},"s":{"0":1,"1":1,"2":1,"9":1,"10":1,"16":1,"22":1,"28":1,"34":1,"36":1},"branchMap":{},"b":{},"fnMap":{},"f":{}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/teacher/teacherLocalLearningPathRoutes.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/teacher/teacherLocalLearningPathRoutes.ts","all":false,"statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":33}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":72}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":8}},"10":{"start":{"line":11,"column":0},"end":{"line":11,"column":24}},"13":{"start":{"line":14,"column":0},"end":{"line":14,"column":27}},"19":{"start":{"line":20,"column":0},"end":{"line":20,"column":42}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":39}},"31":{"start":{"line":32,"column":0},"end":{"line":32,"column":49}},"37":{"start":{"line":38,"column":0},"end":{"line":38,"column":50}},"43":{"start":{"line":44,"column":0},"end":{"line":44,"column":51}},"45":{"start":{"line":46,"column":0},"end":{"line":46,"column":22}}},"s":{"0":1,"1":1,"2":1,"10":1,"13":1,"19":1,"25":1,"31":1,"37":1,"43":1,"45":1},"branchMap":{},"b":{},"fnMap":{},"f":{}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/teacher/teacherSubmissionRoute.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/teacher/teacherSubmissionRoute.ts","all":false,"statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":40}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":79}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":70}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":40}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":27}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":71}},"9":{"start":{"line":10,"column":0},"end":{"line":10,"column":62}},"11":{"start":{"line":12,"column":0},"end":{"line":12,"column":106}},"12":{"start":{"line":13,"column":0},"end":{"line":13,"column":97}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":22}}},"s":{"0":1,"1":1,"2":1,"4":1,"6":1,"8":1,"9":1,"11":1,"12":1,"15":1},"branchMap":{},"b":{},"fnMap":{},"f":{}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/teacher/teacherTeamsRoutes.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/teacher/teacherTeamsRoutes.ts","all":false,"statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":40}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":8}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":8}},"13":{"start":{"line":14,"column":0},"end":{"line":14,"column":70}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":61}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":134}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":82}},"31":{"start":{"line":32,"column":0},"end":{"line":32,"column":133}},"34":{"start":{"line":35,"column":0},"end":{"line":35,"column":88}},"36":{"start":{"line":37,"column":0},"end":{"line":37,"column":22}}},"s":{"0":1,"1":1,"7":1,"13":1,"16":1,"25":1,"28":1,"31":1,"34":1,"36":1},"branchMap":{},"b":{},"fnMap":{},"f":{}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/assignmentService.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/assignmentService.ts","all":false,"statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":58}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":34}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":40}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":84}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":41}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":34}},"9":{"start":{"line":10,"column":0},"end":{"line":10,"column":7}},"10":{"start":{"line":11,"column":0},"end":{"line":11,"column":3}},"11":{"start":{"line":12,"column":0},"end":{"line":12,"column":1}}},"s":{"0":1,"2":1,"4":1,"5":1,"6":1,"7":1,"9":1,"10":1,"11":1},"branchMap":{"0":{"type":"branch","line":6,"loc":{"start":{"line":6,"column":2},"end":{"line":11,"column":3}},"locations":[{"start":{"line":6,"column":2},"end":{"line":11,"column":3}}]}},"b":{"0":[1]},"fnMap":{"0":{"name":"getAssignmentById","decl":{"start":{"line":6,"column":2},"end":{"line":11,"column":3}},"loc":{"start":{"line":6,"column":2},"end":{"line":11,"column":3}},"line":6}},"f":{"0":1}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/authorizationService.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/authorizationService.ts","all":false,"statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":52}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":34}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":35}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":17}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":21}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":18}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":24}},"9":{"start":{"line":10,"column":0},"end":{"line":10,"column":45}},"10":{"start":{"line":11,"column":0},"end":{"line":11,"column":26}},"11":{"start":{"line":12,"column":0},"end":{"line":12,"column":57}},"12":{"start":{"line":13,"column":0},"end":{"line":13,"column":5}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":47}},"17":{"start":{"line":18,"column":0},"end":{"line":18,"column":44}},"19":{"start":{"line":20,"column":0},"end":{"line":20,"column":80}},"20":{"start":{"line":21,"column":0},"end":{"line":21,"column":80}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":49}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":62}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":44}},"26":{"start":{"line":27,"column":0},"end":{"line":27,"column":7}},"27":{"start":{"line":28,"column":0},"end":{"line":28,"column":33}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":3}},"31":{"start":{"line":32,"column":0},"end":{"line":32,"column":49}},"32":{"start":{"line":33,"column":0},"end":{"line":33,"column":58}},"33":{"start":{"line":34,"column":0},"end":{"line":34,"column":44}},"34":{"start":{"line":35,"column":0},"end":{"line":35,"column":7}},"35":{"start":{"line":36,"column":0},"end":{"line":36,"column":29}},"36":{"start":{"line":37,"column":0},"end":{"line":37,"column":3}},"38":{"start":{"line":39,"column":0},"end":{"line":39,"column":14}},"39":{"start":{"line":40,"column":0},"end":{"line":40,"column":2}},"41":{"start":{"line":42,"column":0},"end":{"line":42,"column":40}},"42":{"start":{"line":43,"column":0},"end":{"line":43,"column":17}},"43":{"start":{"line":44,"column":0},"end":{"line":44,"column":22}},"44":{"start":{"line":45,"column":0},"end":{"line":45,"column":24}},"45":{"start":{"line":46,"column":0},"end":{"line":46,"column":64}},"49":{"start":{"line":50,"column":0},"end":{"line":50,"column":50}},"50":{"start":{"line":51,"column":0},"end":{"line":51,"column":40}},"51":{"start":{"line":52,"column":0},"end":{"line":52,"column":35}},"52":{"start":{"line":53,"column":0},"end":{"line":53,"column":32}},"53":{"start":{"line":54,"column":0},"end":{"line":54,"column":7}},"56":{"start":{"line":57,"column":0},"end":{"line":57,"column":64}},"57":{"start":{"line":58,"column":0},"end":{"line":58,"column":12}},"58":{"start":{"line":59,"column":0},"end":{"line":59,"column":19}},"59":{"start":{"line":60,"column":0},"end":{"line":60,"column":63}},"60":{"start":{"line":61,"column":0},"end":{"line":61,"column":6}},"61":{"start":{"line":62,"column":0},"end":{"line":62,"column":5}},"62":{"start":{"line":63,"column":0},"end":{"line":63,"column":32}},"63":{"start":{"line":64,"column":0},"end":{"line":64,"column":2}}},"s":{"0":1,"2":1,"4":1,"5":12,"6":12,"7":12,"8":12,"9":12,"10":12,"11":12,"12":12,"14":12,"17":12,"19":12,"20":12,"23":12,"24":8,"25":8,"26":8,"27":8,"28":8,"31":12,"32":0,"33":0,"34":0,"35":0,"36":0,"38":4,"39":4,"41":1,"42":4,"43":4,"44":4,"45":4,"49":4,"50":4,"51":4,"52":4,"53":4,"56":4,"57":4,"58":4,"59":4,"60":4,"61":4,"62":4,"63":4},"branchMap":{"0":{"type":"branch","line":5,"loc":{"start":{"line":5,"column":28},"end":{"line":40,"column":2}},"locations":[{"start":{"line":5,"column":28},"end":{"line":40,"column":2}}]},"1":{"type":"branch","line":15,"loc":{"start":{"line":15,"column":13},"end":{"line":15,"column":47}},"locations":[{"start":{"line":15,"column":13},"end":{"line":15,"column":47}}]},"2":{"type":"branch","line":18,"loc":{"start":{"line":18,"column":32},"end":{"line":18,"column":44}},"locations":[{"start":{"line":18,"column":32},"end":{"line":18,"column":44}}]},"3":{"type":"branch","line":20,"loc":{"start":{"line":20,"column":67},"end":{"line":20,"column":80}},"locations":[{"start":{"line":20,"column":67},"end":{"line":20,"column":80}}]},"4":{"type":"branch","line":21,"loc":{"start":{"line":21,"column":28},"end":{"line":21,"column":67}},"locations":[{"start":{"line":21,"column":28},"end":{"line":21,"column":67}}]},"5":{"type":"branch","line":21,"loc":{"start":{"line":21,"column":67},"end":{"line":21,"column":80}},"locations":[{"start":{"line":21,"column":67},"end":{"line":21,"column":80}}]},"6":{"type":"branch","line":24,"loc":{"start":{"line":24,"column":48},"end":{"line":29,"column":3}},"locations":[{"start":{"line":24,"column":48},"end":{"line":29,"column":3}}]},"7":{"type":"branch","line":29,"loc":{"start":{"line":29,"column":2},"end":{"line":32,"column":39}},"locations":[{"start":{"line":29,"column":2},"end":{"line":32,"column":39}}]},"8":{"type":"branch","line":32,"loc":{"start":{"line":32,"column":28},"end":{"line":32,"column":48}},"locations":[{"start":{"line":32,"column":28},"end":{"line":32,"column":48}}]},"9":{"type":"branch","line":32,"loc":{"start":{"line":32,"column":48},"end":{"line":37,"column":3}},"locations":[{"start":{"line":32,"column":48},"end":{"line":37,"column":3}}]},"10":{"type":"branch","line":37,"loc":{"start":{"line":37,"column":2},"end":{"line":40,"column":2}},"locations":[{"start":{"line":37,"column":2},"end":{"line":40,"column":2}}]},"11":{"type":"branch","line":42,"loc":{"start":{"line":42,"column":33},"end":{"line":64,"column":2}},"locations":[{"start":{"line":42,"column":33},"end":{"line":64,"column":2}}]},"12":{"type":"branch","line":46,"loc":{"start":{"line":46,"column":51},"end":{"line":46,"column":64}},"locations":[{"start":{"line":46,"column":51},"end":{"line":46,"column":64}}]},"13":{"type":"branch","line":60,"loc":{"start":{"line":60,"column":43},"end":{"line":60,"column":59}},"locations":[{"start":{"line":60,"column":43},"end":{"line":60,"column":59}}]}},"b":{"0":[12],"1":[0],"2":[0],"3":[0],"4":[0],"5":[0],"6":[8],"7":[4],"8":[0],"9":[0],"10":[4],"11":[4],"12":[0],"13":[6]},"fnMap":{"0":{"name":"isAuthorized","decl":{"start":{"line":5,"column":28},"end":{"line":40,"column":2}},"loc":{"start":{"line":5,"column":28},"end":{"line":40,"column":2}},"line":5},"1":{"name":"canUpdateOrDelete","decl":{"start":{"line":42,"column":33},"end":{"line":64,"column":2}},"loc":{"start":{"line":42,"column":33},"end":{"line":64,"column":2}},"line":42}},"f":{"0":12,"1":4}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/classService.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/classService.ts","all":false,"statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":94}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":28}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":84}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":34}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":35}},"9":{"start":{"line":10,"column":0},"end":{"line":10,"column":80}},"11":{"start":{"line":12,"column":0},"end":{"line":12,"column":57}},"13":{"start":{"line":14,"column":0},"end":{"line":14,"column":53}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":19}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":66}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":70}},"17":{"start":{"line":18,"column":0},"end":{"line":18,"column":13}},"18":{"start":{"line":19,"column":0},"end":{"line":19,"column":11}},"21":{"start":{"line":22,"column":0},"end":{"line":22,"column":42}},"22":{"start":{"line":23,"column":0},"end":{"line":23,"column":19}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":78}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":79}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":13}},"26":{"start":{"line":27,"column":0},"end":{"line":27,"column":11}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":25}},"29":{"start":{"line":30,"column":0},"end":{"line":30,"column":6}},"33":{"start":{"line":34,"column":0},"end":{"line":34,"column":99}},"35":{"start":{"line":36,"column":0},"end":{"line":36,"column":57}},"36":{"start":{"line":37,"column":0},"end":{"line":37,"column":35}},"37":{"start":{"line":38,"column":0},"end":{"line":38,"column":11}},"38":{"start":{"line":39,"column":0},"end":{"line":39,"column":25}},"39":{"start":{"line":40,"column":0},"end":{"line":40,"column":74}},"40":{"start":{"line":41,"column":0},"end":{"line":41,"column":9}},"43":{"start":{"line":44,"column":0},"end":{"line":44,"column":74}},"44":{"start":{"line":45,"column":0},"end":{"line":45,"column":25}},"45":{"start":{"line":46,"column":0},"end":{"line":46,"column":109}},"46":{"start":{"line":47,"column":0},"end":{"line":47,"column":9}},"47":{"start":{"line":48,"column":0},"end":{"line":48,"column":15}},"48":{"start":{"line":49,"column":0},"end":{"line":49,"column":5}},"51":{"start":{"line":52,"column":0},"end":{"line":52,"column":83}},"52":{"start":{"line":53,"column":0},"end":{"line":53,"column":61}},"53":{"start":{"line":54,"column":0},"end":{"line":54,"column":166}},"54":{"start":{"line":55,"column":0},"end":{"line":55,"column":6}},"57":{"start":{"line":58,"column":0},"end":{"line":58,"column":76}},"59":{"start":{"line":60,"column":0},"end":{"line":60,"column":38}},"60":{"start":{"line":61,"column":0},"end":{"line":61,"column":20}},"61":{"start":{"line":62,"column":0},"end":{"line":62,"column":31}},"62":{"start":{"line":63,"column":0},"end":{"line":63,"column":27}},"63":{"start":{"line":64,"column":0},"end":{"line":64,"column":79}},"64":{"start":{"line":65,"column":0},"end":{"line":65,"column":22}},"65":{"start":{"line":66,"column":0},"end":{"line":66,"column":18}},"66":{"start":{"line":67,"column":0},"end":{"line":67,"column":13}},"67":{"start":{"line":68,"column":0},"end":{"line":68,"column":11}},"68":{"start":{"line":69,"column":0},"end":{"line":69,"column":6}},"71":{"start":{"line":72,"column":0},"end":{"line":72,"column":76}},"73":{"start":{"line":74,"column":0},"end":{"line":74,"column":38}},"74":{"start":{"line":75,"column":0},"end":{"line":75,"column":20}},"75":{"start":{"line":76,"column":0},"end":{"line":76,"column":29}},"76":{"start":{"line":77,"column":0},"end":{"line":77,"column":27}},"77":{"start":{"line":78,"column":0},"end":{"line":78,"column":79}},"78":{"start":{"line":79,"column":0},"end":{"line":79,"column":22}},"79":{"start":{"line":80,"column":0},"end":{"line":80,"column":18}},"80":{"start":{"line":81,"column":0},"end":{"line":81,"column":13}},"81":{"start":{"line":82,"column":0},"end":{"line":82,"column":11}},"82":{"start":{"line":83,"column":0},"end":{"line":83,"column":6}},"85":{"start":{"line":86,"column":0},"end":{"line":86,"column":89}},"86":{"start":{"line":87,"column":0},"end":{"line":87,"column":88}},"87":{"start":{"line":88,"column":0},"end":{"line":88,"column":20}},"88":{"start":{"line":89,"column":0},"end":{"line":89,"column":36}},"89":{"start":{"line":90,"column":0},"end":{"line":90,"column":41}},"90":{"start":{"line":91,"column":0},"end":{"line":91,"column":37}},"91":{"start":{"line":92,"column":0},"end":{"line":92,"column":18}},"92":{"start":{"line":93,"column":0},"end":{"line":93,"column":14}},"93":{"start":{"line":94,"column":0},"end":{"line":94,"column":11}},"94":{"start":{"line":95,"column":0},"end":{"line":95,"column":37}},"95":{"start":{"line":96,"column":0},"end":{"line":96,"column":6}},"98":{"start":{"line":99,"column":0},"end":{"line":99,"column":111}},"99":{"start":{"line":100,"column":0},"end":{"line":100,"column":61}},"101":{"start":{"line":102,"column":0},"end":{"line":102,"column":66}},"102":{"start":{"line":103,"column":0},"end":{"line":103,"column":31}},"103":{"start":{"line":104,"column":0},"end":{"line":104,"column":22}},"104":{"start":{"line":105,"column":0},"end":{"line":105,"column":26}},"105":{"start":{"line":106,"column":0},"end":{"line":106,"column":68}},"106":{"start":{"line":107,"column":0},"end":{"line":107,"column":17}},"107":{"start":{"line":108,"column":0},"end":{"line":108,"column":13}},"108":{"start":{"line":109,"column":0},"end":{"line":109,"column":11}},"109":{"start":{"line":110,"column":0},"end":{"line":110,"column":53}},"110":{"start":{"line":111,"column":0},"end":{"line":111,"column":6}},"112":{"start":{"line":113,"column":0},"end":{"line":113,"column":95}},"113":{"start":{"line":114,"column":0},"end":{"line":114,"column":43}},"114":{"start":{"line":115,"column":0},"end":{"line":115,"column":19}},"115":{"start":{"line":116,"column":0},"end":{"line":116,"column":26}},"116":{"start":{"line":117,"column":0},"end":{"line":117,"column":24}},"117":{"start":{"line":118,"column":0},"end":{"line":118,"column":14}},"118":{"start":{"line":119,"column":0},"end":{"line":119,"column":11}},"119":{"start":{"line":120,"column":0},"end":{"line":120,"column":6}},"122":{"start":{"line":123,"column":0},"end":{"line":123,"column":99}},"123":{"start":{"line":124,"column":0},"end":{"line":124,"column":95}},"124":{"start":{"line":125,"column":0},"end":{"line":125,"column":6}},"126":{"start":{"line":127,"column":0},"end":{"line":127,"column":100}},"127":{"start":{"line":128,"column":0},"end":{"line":128,"column":43}},"128":{"start":{"line":129,"column":0},"end":{"line":129,"column":20}},"129":{"start":{"line":130,"column":0},"end":{"line":130,"column":36}},"130":{"start":{"line":131,"column":0},"end":{"line":131,"column":30}},"131":{"start":{"line":132,"column":0},"end":{"line":132,"column":28}},"132":{"start":{"line":133,"column":0},"end":{"line":133,"column":18}},"133":{"start":{"line":134,"column":0},"end":{"line":134,"column":14}},"134":{"start":{"line":135,"column":0},"end":{"line":135,"column":11}},"135":{"start":{"line":136,"column":0},"end":{"line":136,"column":6}},"138":{"start":{"line":139,"column":0},"end":{"line":139,"column":52}},"140":{"start":{"line":141,"column":0},"end":{"line":141,"column":39}},"141":{"start":{"line":142,"column":0},"end":{"line":142,"column":6}},"144":{"start":{"line":145,"column":0},"end":{"line":145,"column":66}},"145":{"start":{"line":146,"column":0},"end":{"line":146,"column":40}},"146":{"start":{"line":147,"column":0},"end":{"line":147,"column":28}},"147":{"start":{"line":148,"column":0},"end":{"line":148,"column":11}},"148":{"start":{"line":149,"column":0},"end":{"line":149,"column":6}},"151":{"start":{"line":152,"column":0},"end":{"line":152,"column":84}},"152":{"start":{"line":153,"column":0},"end":{"line":153,"column":36}},"153":{"start":{"line":154,"column":0},"end":{"line":154,"column":33}},"154":{"start":{"line":155,"column":0},"end":{"line":155,"column":34}},"155":{"start":{"line":156,"column":0},"end":{"line":156,"column":11}},"156":{"start":{"line":157,"column":0},"end":{"line":157,"column":6}},"159":{"start":{"line":160,"column":0},"end":{"line":160,"column":87}},"160":{"start":{"line":161,"column":0},"end":{"line":161,"column":24}},"161":{"start":{"line":162,"column":0},"end":{"line":162,"column":72}},"162":{"start":{"line":163,"column":0},"end":{"line":163,"column":9}},"163":{"start":{"line":164,"column":0},"end":{"line":164,"column":40}},"164":{"start":{"line":165,"column":0},"end":{"line":165,"column":95}},"165":{"start":{"line":166,"column":0},"end":{"line":166,"column":22}},"166":{"start":{"line":167,"column":0},"end":{"line":167,"column":33}},"167":{"start":{"line":168,"column":0},"end":{"line":168,"column":13}},"168":{"start":{"line":169,"column":0},"end":{"line":169,"column":11}},"169":{"start":{"line":170,"column":0},"end":{"line":170,"column":6}},"171":{"start":{"line":172,"column":0},"end":{"line":172,"column":83}},"172":{"start":{"line":173,"column":0},"end":{"line":173,"column":57}},"173":{"start":{"line":174,"column":0},"end":{"line":174,"column":35}},"174":{"start":{"line":175,"column":0},"end":{"line":175,"column":63}},"175":{"start":{"line":176,"column":0},"end":{"line":176,"column":11}},"176":{"start":{"line":177,"column":0},"end":{"line":177,"column":25}},"177":{"start":{"line":178,"column":0},"end":{"line":178,"column":74}},"178":{"start":{"line":179,"column":0},"end":{"line":179,"column":9}},"181":{"start":{"line":182,"column":0},"end":{"line":182,"column":74}},"182":{"start":{"line":183,"column":0},"end":{"line":183,"column":25}},"183":{"start":{"line":184,"column":0},"end":{"line":184,"column":109}},"184":{"start":{"line":185,"column":0},"end":{"line":185,"column":9}},"186":{"start":{"line":187,"column":0},"end":{"line":187,"column":30}},"187":{"start":{"line":188,"column":0},"end":{"line":188,"column":6}},"190":{"start":{"line":191,"column":0},"end":{"line":191,"column":56}},"191":{"start":{"line":192,"column":0},"end":{"line":192,"column":29}},"192":{"start":{"line":193,"column":0},"end":{"line":193,"column":37}},"194":{"start":{"line":195,"column":0},"end":{"line":195,"column":27}},"196":{"start":{"line":197,"column":0},"end":{"line":197,"column":64}},"199":{"start":{"line":200,"column":0},"end":{"line":200,"column":65}},"200":{"start":{"line":201,"column":0},"end":{"line":201,"column":45}},"201":{"start":{"line":202,"column":0},"end":{"line":202,"column":15}},"203":{"start":{"line":204,"column":0},"end":{"line":204,"column":33}},"204":{"start":{"line":205,"column":0},"end":{"line":205,"column":32}},"205":{"start":{"line":206,"column":0},"end":{"line":206,"column":13}},"206":{"start":{"line":207,"column":0},"end":{"line":207,"column":9}},"208":{"start":{"line":209,"column":0},"end":{"line":209,"column":27}},"209":{"start":{"line":210,"column":0},"end":{"line":210,"column":6}},"212":{"start":{"line":213,"column":0},"end":{"line":213,"column":90}},"213":{"start":{"line":214,"column":0},"end":{"line":214,"column":61}},"216":{"start":{"line":217,"column":0},"end":{"line":217,"column":60}},"219":{"start":{"line":220,"column":0},"end":{"line":220,"column":56}},"220":{"start":{"line":221,"column":0},"end":{"line":221,"column":35}},"221":{"start":{"line":222,"column":0},"end":{"line":222,"column":40}},"222":{"start":{"line":223,"column":0},"end":{"line":223,"column":11}},"224":{"start":{"line":225,"column":0},"end":{"line":225,"column":33}},"225":{"start":{"line":226,"column":0},"end":{"line":226,"column":6}},"226":{"start":{"line":227,"column":0},"end":{"line":227,"column":1}}},"s":{"0":1,"1":1,"2":1,"4":1,"8":1,"9":1,"11":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"28":1,"29":1,"33":1,"35":8,"36":8,"37":8,"38":8,"39":2,"40":2,"43":6,"44":8,"45":3,"46":3,"47":3,"48":8,"51":1,"52":2,"53":1,"54":2,"57":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"71":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"85":1,"86":31,"87":31,"88":31,"89":31,"90":31,"91":31,"92":31,"93":31,"94":31,"95":31,"98":1,"99":3,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"109":1,"110":3,"112":1,"113":1,"114":1,"115":1,"116":1,"117":1,"118":1,"119":1,"122":1,"123":6,"124":6,"126":1,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"138":1,"140":0,"141":0,"144":1,"145":7,"146":7,"147":7,"148":7,"151":1,"152":0,"153":0,"154":0,"155":0,"156":0,"159":1,"160":7,"161":0,"162":0,"163":7,"164":7,"165":7,"166":7,"167":7,"168":7,"169":7,"171":1,"172":3,"173":3,"174":3,"175":3,"176":3,"177":1,"178":1,"181":2,"182":3,"183":1,"184":1,"186":1,"187":3,"190":1,"191":2,"192":2,"194":2,"196":2,"199":2,"200":2,"201":2,"203":2,"204":2,"205":2,"206":2,"208":2,"209":2,"212":1,"213":3,"216":1,"219":1,"220":1,"221":1,"222":1,"224":1,"225":3,"226":1},"branchMap":{"0":{"type":"branch","line":10,"loc":{"start":{"line":10,"column":4},"end":{"line":30,"column":6}},"locations":[{"start":{"line":10,"column":4},"end":{"line":30,"column":6}}]},"1":{"type":"branch","line":34,"loc":{"start":{"line":34,"column":4},"end":{"line":49,"column":5}},"locations":[{"start":{"line":34,"column":4},"end":{"line":49,"column":5}}]},"2":{"type":"branch","line":39,"loc":{"start":{"line":39,"column":24},"end":{"line":41,"column":9}},"locations":[{"start":{"line":39,"column":24},"end":{"line":41,"column":9}}]},"3":{"type":"branch","line":41,"loc":{"start":{"line":41,"column":8},"end":{"line":45,"column":24}},"locations":[{"start":{"line":41,"column":8},"end":{"line":45,"column":24}}]},"4":{"type":"branch","line":45,"loc":{"start":{"line":45,"column":24},"end":{"line":48,"column":15}},"locations":[{"start":{"line":45,"column":24},"end":{"line":48,"column":15}}]},"5":{"type":"branch","line":52,"loc":{"start":{"line":52,"column":4},"end":{"line":55,"column":6}},"locations":[{"start":{"line":52,"column":4},"end":{"line":55,"column":6}}]},"6":{"type":"branch","line":53,"loc":{"start":{"line":53,"column":59},"end":{"line":54,"column":166}},"locations":[{"start":{"line":53,"column":59},"end":{"line":54,"column":166}}]},"7":{"type":"branch","line":58,"loc":{"start":{"line":58,"column":4},"end":{"line":69,"column":6}},"locations":[{"start":{"line":58,"column":4},"end":{"line":69,"column":6}}]},"8":{"type":"branch","line":72,"loc":{"start":{"line":72,"column":4},"end":{"line":83,"column":6}},"locations":[{"start":{"line":72,"column":4},"end":{"line":83,"column":6}}]},"9":{"type":"branch","line":86,"loc":{"start":{"line":86,"column":4},"end":{"line":96,"column":6}},"locations":[{"start":{"line":86,"column":4},"end":{"line":96,"column":6}}]},"10":{"type":"branch","line":99,"loc":{"start":{"line":99,"column":4},"end":{"line":111,"column":6}},"locations":[{"start":{"line":99,"column":4},"end":{"line":111,"column":6}}]},"11":{"type":"branch","line":100,"loc":{"start":{"line":100,"column":59},"end":{"line":110,"column":53}},"locations":[{"start":{"line":100,"column":59},"end":{"line":110,"column":53}}]},"12":{"type":"branch","line":110,"loc":{"start":{"line":110,"column":33},"end":{"line":110,"column":51}},"locations":[{"start":{"line":110,"column":33},"end":{"line":110,"column":51}}]},"13":{"type":"branch","line":113,"loc":{"start":{"line":113,"column":4},"end":{"line":120,"column":6}},"locations":[{"start":{"line":113,"column":4},"end":{"line":120,"column":6}}]},"14":{"type":"branch","line":123,"loc":{"start":{"line":123,"column":4},"end":{"line":125,"column":6}},"locations":[{"start":{"line":123,"column":4},"end":{"line":125,"column":6}}]},"15":{"type":"branch","line":124,"loc":{"start":{"line":124,"column":41},"end":{"line":124,"column":93}},"locations":[{"start":{"line":124,"column":41},"end":{"line":124,"column":93}}]},"16":{"type":"branch","line":145,"loc":{"start":{"line":145,"column":4},"end":{"line":149,"column":6}},"locations":[{"start":{"line":145,"column":4},"end":{"line":149,"column":6}}]},"17":{"type":"branch","line":160,"loc":{"start":{"line":160,"column":4},"end":{"line":170,"column":6}},"locations":[{"start":{"line":160,"column":4},"end":{"line":170,"column":6}}]},"18":{"type":"branch","line":161,"loc":{"start":{"line":161,"column":23},"end":{"line":163,"column":9}},"locations":[{"start":{"line":161,"column":23},"end":{"line":163,"column":9}}]},"19":{"type":"branch","line":172,"loc":{"start":{"line":172,"column":4},"end":{"line":188,"column":6}},"locations":[{"start":{"line":172,"column":4},"end":{"line":188,"column":6}}]},"20":{"type":"branch","line":177,"loc":{"start":{"line":177,"column":24},"end":{"line":179,"column":9}},"locations":[{"start":{"line":177,"column":24},"end":{"line":179,"column":9}}]},"21":{"type":"branch","line":179,"loc":{"start":{"line":179,"column":8},"end":{"line":183,"column":24}},"locations":[{"start":{"line":179,"column":8},"end":{"line":183,"column":24}}]},"22":{"type":"branch","line":183,"loc":{"start":{"line":183,"column":24},"end":{"line":187,"column":30}},"locations":[{"start":{"line":183,"column":24},"end":{"line":187,"column":30}}]},"23":{"type":"branch","line":191,"loc":{"start":{"line":191,"column":4},"end":{"line":210,"column":6}},"locations":[{"start":{"line":191,"column":4},"end":{"line":210,"column":6}}]},"24":{"type":"branch","line":213,"loc":{"start":{"line":213,"column":4},"end":{"line":226,"column":6}},"locations":[{"start":{"line":213,"column":4},"end":{"line":226,"column":6}}]},"25":{"type":"branch","line":214,"loc":{"start":{"line":214,"column":59},"end":{"line":225,"column":33}},"locations":[{"start":{"line":214,"column":59},"end":{"line":225,"column":33}}]}},"b":{"0":[1],"1":[8],"2":[2],"3":[6],"4":[3],"5":[2],"6":[1],"7":[1],"8":[1],"9":[31],"10":[3],"11":[1],"12":[2],"13":[1],"14":[6],"15":[1],"16":[7],"17":[7],"18":[0],"19":[3],"20":[1],"21":[2],"22":[1],"23":[2],"24":[3],"25":[1]},"fnMap":{"0":{"name":"createClass","decl":{"start":{"line":10,"column":4},"end":{"line":30,"column":6}},"loc":{"start":{"line":10,"column":4},"end":{"line":30,"column":6}},"line":10},"1":{"name":"verifyClassAndTeacher","decl":{"start":{"line":34,"column":4},"end":{"line":49,"column":5}},"loc":{"start":{"line":34,"column":4},"end":{"line":49,"column":5}},"line":34},"2":{"name":"deleteClass","decl":{"start":{"line":52,"column":4},"end":{"line":55,"column":6}},"loc":{"start":{"line":52,"column":4},"end":{"line":55,"column":6}},"line":52},"3":{"name":"getClassesByTeacher","decl":{"start":{"line":58,"column":4},"end":{"line":69,"column":6}},"loc":{"start":{"line":58,"column":4},"end":{"line":69,"column":6}},"line":58},"4":{"name":"getClassesByStudent","decl":{"start":{"line":72,"column":4},"end":{"line":83,"column":6}},"loc":{"start":{"line":72,"column":4},"end":{"line":83,"column":6}},"line":72},"5":{"name":"isTeacherOfClass","decl":{"start":{"line":86,"column":4},"end":{"line":96,"column":6}},"loc":{"start":{"line":86,"column":4},"end":{"line":96,"column":6}},"line":86},"6":{"name":"getStudentsByClass","decl":{"start":{"line":99,"column":4},"end":{"line":111,"column":6}},"loc":{"start":{"line":99,"column":4},"end":{"line":111,"column":6}},"line":99},"7":{"name":"addStudentToClass","decl":{"start":{"line":113,"column":4},"end":{"line":120,"column":6}},"loc":{"start":{"line":113,"column":4},"end":{"line":120,"column":6}},"line":113},"8":{"name":"isStudentInClass","decl":{"start":{"line":123,"column":4},"end":{"line":125,"column":6}},"loc":{"start":{"line":123,"column":4},"end":{"line":125,"column":6}},"line":123},"9":{"name":"removeStudentFromClass","decl":{"start":{"line":127,"column":4},"end":{"line":136,"column":6}},"loc":{"start":{"line":127,"column":4},"end":{"line":136,"column":6}},"line":127},"10":{"name":"getAllClasses","decl":{"start":{"line":139,"column":4},"end":{"line":142,"column":6}},"loc":{"start":{"line":139,"column":4},"end":{"line":142,"column":6}},"line":139},"11":{"name":"getClassById","decl":{"start":{"line":145,"column":4},"end":{"line":149,"column":6}},"loc":{"start":{"line":145,"column":4},"end":{"line":149,"column":6}},"line":145},"12":{"name":"updateClassName","decl":{"start":{"line":152,"column":4},"end":{"line":157,"column":6}},"loc":{"start":{"line":152,"column":4},"end":{"line":157,"column":6}},"line":152},"13":{"name":"getClassByJoinCode","decl":{"start":{"line":160,"column":4},"end":{"line":170,"column":6}},"loc":{"start":{"line":160,"column":4},"end":{"line":170,"column":6}},"line":160},"14":{"name":"getJoinCode","decl":{"start":{"line":172,"column":4},"end":{"line":188,"column":6}},"loc":{"start":{"line":172,"column":4},"end":{"line":188,"column":6}},"line":172},"15":{"name":"generateUniqueCode","decl":{"start":{"line":191,"column":4},"end":{"line":210,"column":6}},"loc":{"start":{"line":191,"column":4},"end":{"line":210,"column":6}},"line":191},"16":{"name":"regenerateJoinCode","decl":{"start":{"line":213,"column":4},"end":{"line":226,"column":6}},"loc":{"start":{"line":213,"column":4},"end":{"line":226,"column":6}},"line":213}},"f":{"0":1,"1":8,"2":2,"3":1,"4":1,"5":31,"6":3,"7":1,"8":6,"9":0,"10":0,"11":7,"12":0,"13":7,"14":3,"15":2,"16":3}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/combinedLearningObjectService.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/combinedLearningObjectService.ts","all":false,"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":8}},"10":{"start":{"line":11,"column":0},"end":{"line":11,"column":10}},"21":{"start":{"line":22,"column":0},"end":{"line":22,"column":46}},"22":{"start":{"line":23,"column":0},"end":{"line":23,"column":22}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":35}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":62}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":63}},"26":{"start":{"line":27,"column":0},"end":{"line":27,"column":41}},"27":{"start":{"line":28,"column":0},"end":{"line":28,"column":3}},"32":{"start":{"line":33,"column":0},"end":{"line":33,"column":46}},"33":{"start":{"line":34,"column":0},"end":{"line":34,"column":23}},"34":{"start":{"line":35,"column":0},"end":{"line":35,"column":22}},"35":{"start":{"line":36,"column":0},"end":{"line":36,"column":35}},"36":{"start":{"line":37,"column":0},"end":{"line":37,"column":75}},"37":{"start":{"line":38,"column":0},"end":{"line":38,"column":81}},"38":{"start":{"line":39,"column":0},"end":{"line":39,"column":47}},"39":{"start":{"line":40,"column":0},"end":{"line":40,"column":3}},"44":{"start":{"line":45,"column":0},"end":{"line":45,"column":46}},"45":{"start":{"line":46,"column":0},"end":{"line":46,"column":15}},"46":{"start":{"line":47,"column":0},"end":{"line":47,"column":22}},"47":{"start":{"line":48,"column":0},"end":{"line":48,"column":40}},"49":{"start":{"line":50,"column":0},"end":{"line":50,"column":66}},"50":{"start":{"line":51,"column":0},"end":{"line":51,"column":38}},"53":{"start":{"line":54,"column":0},"end":{"line":54,"column":70}},"54":{"start":{"line":55,"column":0},"end":{"line":55,"column":36}},"56":{"start":{"line":57,"column":0},"end":{"line":57,"column":16}},"57":{"start":{"line":58,"column":0},"end":{"line":58,"column":3}},"63":{"start":{"line":64,"column":0},"end":{"line":64,"column":50}},"64":{"start":{"line":65,"column":0},"end":{"line":65,"column":19}},"65":{"start":{"line":66,"column":0},"end":{"line":66,"column":22}},"66":{"start":{"line":67,"column":0},"end":{"line":67,"column":35}},"67":{"start":{"line":68,"column":0},"end":{"line":68,"column":60}},"68":{"start":{"line":69,"column":0},"end":{"line":69,"column":3}},"71":{"start":{"line":72,"column":0},"end":{"line":72,"column":60}},"72":{"start":{"line":73,"column":0},"end":{"line":73,"column":18}},"73":{"start":{"line":74,"column":0},"end":{"line":74,"column":21}},"74":{"start":{"line":75,"column":0},"end":{"line":75,"column":20}},"75":{"start":{"line":76,"column":0},"end":{"line":76,"column":22}},"76":{"start":{"line":77,"column":0},"end":{"line":77,"column":40}},"78":{"start":{"line":79,"column":0},"end":{"line":79,"column":65}},"79":{"start":{"line":80,"column":0},"end":{"line":80,"column":12}},"80":{"start":{"line":81,"column":0},"end":{"line":81,"column":15}},"81":{"start":{"line":82,"column":0},"end":{"line":82,"column":14}},"82":{"start":{"line":83,"column":0},"end":{"line":83,"column":15}},"83":{"start":{"line":84,"column":0},"end":{"line":84,"column":6}},"84":{"start":{"line":85,"column":0},"end":{"line":85,"column":38}},"87":{"start":{"line":88,"column":0},"end":{"line":88,"column":69}},"88":{"start":{"line":89,"column":0},"end":{"line":89,"column":12}},"89":{"start":{"line":90,"column":0},"end":{"line":90,"column":15}},"90":{"start":{"line":91,"column":0},"end":{"line":91,"column":14}},"91":{"start":{"line":92,"column":0},"end":{"line":92,"column":15}},"92":{"start":{"line":93,"column":0},"end":{"line":93,"column":6}},"93":{"start":{"line":94,"column":0},"end":{"line":94,"column":36}},"95":{"start":{"line":96,"column":0},"end":{"line":96,"column":16}},"96":{"start":{"line":97,"column":0},"end":{"line":97,"column":3}}},"s":{"1":1,"10":1,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"32":1,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"44":1,"45":0,"46":0,"47":0,"49":0,"50":0,"53":0,"54":0,"56":0,"57":0,"63":1,"64":0,"65":0,"66":0,"67":0,"68":0,"71":1,"72":0,"73":0,"74":0,"75":0,"76":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"95":0,"96":0},"branchMap":{},"b":{},"fnMap":{"0":{"name":"getAllLearningObjects","decl":{"start":{"line":22,"column":2},"end":{"line":28,"column":3}},"loc":{"start":{"line":22,"column":2},"end":{"line":28,"column":3}},"line":22},"1":{"name":"searchLearningObjects","decl":{"start":{"line":33,"column":2},"end":{"line":40,"column":3}},"loc":{"start":{"line":33,"column":2},"end":{"line":40,"column":3}},"line":33},"2":{"name":"getLearningObjectById","decl":{"start":{"line":45,"column":2},"end":{"line":58,"column":3}},"loc":{"start":{"line":45,"column":2},"end":{"line":58,"column":3}},"line":45},"3":{"name":"getLearningObjectsForPath","decl":{"start":{"line":64,"column":2},"end":{"line":69,"column":3}},"loc":{"start":{"line":64,"column":2},"end":{"line":69,"column":3}},"line":64},"4":{"name":"getLearningObjectByHruidLangVersion","decl":{"start":{"line":72,"column":2},"end":{"line":97,"column":3}},"loc":{"start":{"line":72,"column":2},"end":{"line":97,"column":3}},"line":72}},"f":{"0":0,"1":0,"2":0,"3":0,"4":0}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/dwengoLearningObjectService.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/dwengoLearningObjectService.ts","all":false,"statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":48}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":18}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":28}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":34}},"9":{"start":{"line":10,"column":0},"end":{"line":10,"column":42}},"10":{"start":{"line":11,"column":0},"end":{"line":11,"column":30}},"11":{"start":{"line":12,"column":0},"end":{"line":12,"column":28}},"12":{"start":{"line":13,"column":0},"end":{"line":13,"column":18}},"13":{"start":{"line":14,"column":0},"end":{"line":14,"column":54}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":50}},"20":{"start":{"line":21,"column":0},"end":{"line":21,"column":31}},"21":{"start":{"line":22,"column":0},"end":{"line":22,"column":39}},"22":{"start":{"line":23,"column":0},"end":{"line":23,"column":45}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":53}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":41}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":39}},"26":{"start":{"line":27,"column":0},"end":{"line":27,"column":29}},"27":{"start":{"line":28,"column":0},"end":{"line":28,"column":65}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":61}},"29":{"start":{"line":30,"column":0},"end":{"line":30,"column":2}},"81":{"start":{"line":82,"column":0},"end":{"line":82,"column":79}},"82":{"start":{"line":83,"column":0},"end":{"line":83,"column":10}},"83":{"start":{"line":84,"column":0},"end":{"line":84,"column":28}},"84":{"start":{"line":85,"column":0},"end":{"line":85,"column":31}},"85":{"start":{"line":86,"column":0},"end":{"line":86,"column":33}},"86":{"start":{"line":87,"column":0},"end":{"line":87,"column":36}},"87":{"start":{"line":88,"column":0},"end":{"line":88,"column":39}},"88":{"start":{"line":89,"column":0},"end":{"line":89,"column":33}},"89":{"start":{"line":90,"column":0},"end":{"line":90,"column":45}},"90":{"start":{"line":91,"column":0},"end":{"line":91,"column":16}},"91":{"start":{"line":92,"column":0},"end":{"line":92,"column":28}},"92":{"start":{"line":93,"column":0},"end":{"line":93,"column":76}},"93":{"start":{"line":94,"column":0},"end":{"line":94,"column":34}},"94":{"start":{"line":95,"column":0},"end":{"line":95,"column":39}},"95":{"start":{"line":96,"column":0},"end":{"line":96,"column":44}},"96":{"start":{"line":97,"column":0},"end":{"line":97,"column":59}},"97":{"start":{"line":98,"column":0},"end":{"line":98,"column":48}},"98":{"start":{"line":99,"column":0},"end":{"line":99,"column":41}},"99":{"start":{"line":100,"column":0},"end":{"line":100,"column":37}},"100":{"start":{"line":101,"column":0},"end":{"line":101,"column":42}},"101":{"start":{"line":102,"column":0},"end":{"line":102,"column":49}},"102":{"start":{"line":103,"column":0},"end":{"line":103,"column":44}},"103":{"start":{"line":104,"column":0},"end":{"line":104,"column":54}},"104":{"start":{"line":105,"column":0},"end":{"line":105,"column":42}},"105":{"start":{"line":106,"column":0},"end":{"line":106,"column":41}},"106":{"start":{"line":107,"column":0},"end":{"line":107,"column":21}},"107":{"start":{"line":108,"column":0},"end":{"line":108,"column":4}},"108":{"start":{"line":109,"column":0},"end":{"line":109,"column":1}},"111":{"start":{"line":112,"column":0},"end":{"line":112,"column":95}},"112":{"start":{"line":113,"column":0},"end":{"line":113,"column":7}},"113":{"start":{"line":114,"column":0},"end":{"line":114,"column":43}},"114":{"start":{"line":115,"column":0},"end":{"line":115,"column":21}},"115":{"start":{"line":116,"column":0},"end":{"line":116,"column":39}},"116":{"start":{"line":117,"column":0},"end":{"line":117,"column":30}},"117":{"start":{"line":118,"column":0},"end":{"line":118,"column":5}},"118":{"start":{"line":119,"column":0},"end":{"line":119,"column":83}},"119":{"start":{"line":120,"column":0},"end":{"line":120,"column":61}},"120":{"start":{"line":121,"column":0},"end":{"line":121,"column":44}},"121":{"start":{"line":122,"column":0},"end":{"line":122,"column":19}},"122":{"start":{"line":123,"column":0},"end":{"line":123,"column":60}},"123":{"start":{"line":124,"column":0},"end":{"line":124,"column":48}},"124":{"start":{"line":125,"column":0},"end":{"line":125,"column":3}},"125":{"start":{"line":126,"column":0},"end":{"line":126,"column":1}},"128":{"start":{"line":129,"column":0},"end":{"line":129,"column":44}},"129":{"start":{"line":130,"column":0},"end":{"line":130,"column":13}},"130":{"start":{"line":131,"column":0},"end":{"line":131,"column":20}},"131":{"start":{"line":132,"column":0},"end":{"line":132,"column":38}},"132":{"start":{"line":133,"column":0},"end":{"line":133,"column":7}},"133":{"start":{"line":134,"column":0},"end":{"line":134,"column":31}},"134":{"start":{"line":135,"column":0},"end":{"line":135,"column":88}},"135":{"start":{"line":136,"column":0},"end":{"line":136,"column":58}},"136":{"start":{"line":137,"column":0},"end":{"line":137,"column":47}},"138":{"start":{"line":139,"column":0},"end":{"line":139,"column":71}},"139":{"start":{"line":140,"column":0},"end":{"line":140,"column":18}},"140":{"start":{"line":141,"column":0},"end":{"line":141,"column":5}},"141":{"start":{"line":142,"column":0},"end":{"line":142,"column":18}},"142":{"start":{"line":143,"column":0},"end":{"line":143,"column":24}},"143":{"start":{"line":144,"column":0},"end":{"line":144,"column":58}},"144":{"start":{"line":145,"column":0},"end":{"line":145,"column":18}},"145":{"start":{"line":146,"column":0},"end":{"line":146,"column":5}},"146":{"start":{"line":147,"column":0},"end":{"line":147,"column":60}},"147":{"start":{"line":148,"column":0},"end":{"line":148,"column":16}},"148":{"start":{"line":149,"column":0},"end":{"line":149,"column":3}},"149":{"start":{"line":150,"column":0},"end":{"line":150,"column":1}},"152":{"start":{"line":153,"column":0},"end":{"line":153,"column":58}},"153":{"start":{"line":154,"column":0},"end":{"line":154,"column":16}},"154":{"start":{"line":155,"column":0},"end":{"line":155,"column":19}},"155":{"start":{"line":156,"column":0},"end":{"line":156,"column":18}},"156":{"start":{"line":157,"column":0},"end":{"line":157,"column":20}},"157":{"start":{"line":158,"column":0},"end":{"line":158,"column":38}},"158":{"start":{"line":159,"column":0},"end":{"line":159,"column":7}},"160":{"start":{"line":161,"column":0},"end":{"line":161,"column":48}},"161":{"start":{"line":162,"column":0},"end":{"line":162,"column":42}},"163":{"start":{"line":164,"column":0},"end":{"line":164,"column":88}},"164":{"start":{"line":165,"column":0},"end":{"line":165,"column":58}},"165":{"start":{"line":166,"column":0},"end":{"line":166,"column":47}},"167":{"start":{"line":168,"column":0},"end":{"line":168,"column":71}},"168":{"start":{"line":169,"column":0},"end":{"line":169,"column":18}},"169":{"start":{"line":170,"column":0},"end":{"line":170,"column":5}},"170":{"start":{"line":171,"column":0},"end":{"line":171,"column":18}},"171":{"start":{"line":172,"column":0},"end":{"line":172,"column":24}},"172":{"start":{"line":173,"column":0},"end":{"line":173,"column":58}},"173":{"start":{"line":174,"column":0},"end":{"line":174,"column":18}},"174":{"start":{"line":175,"column":0},"end":{"line":175,"column":5}},"175":{"start":{"line":176,"column":0},"end":{"line":176,"column":74}},"176":{"start":{"line":177,"column":0},"end":{"line":177,"column":16}},"177":{"start":{"line":178,"column":0},"end":{"line":178,"column":3}},"178":{"start":{"line":179,"column":0},"end":{"line":179,"column":1}},"181":{"start":{"line":182,"column":0},"end":{"line":182,"column":42}},"182":{"start":{"line":183,"column":0},"end":{"line":183,"column":21}},"183":{"start":{"line":184,"column":0},"end":{"line":184,"column":20}},"184":{"start":{"line":185,"column":0},"end":{"line":185,"column":33}},"185":{"start":{"line":186,"column":0},"end":{"line":186,"column":7}},"186":{"start":{"line":187,"column":0},"end":{"line":187,"column":43}},"187":{"start":{"line":188,"column":0},"end":{"line":188,"column":21}},"188":{"start":{"line":189,"column":0},"end":{"line":189,"column":39}},"189":{"start":{"line":190,"column":0},"end":{"line":190,"column":30}},"190":{"start":{"line":191,"column":0},"end":{"line":191,"column":5}},"191":{"start":{"line":192,"column":0},"end":{"line":192,"column":21}},"192":{"start":{"line":193,"column":0},"end":{"line":193,"column":37}},"193":{"start":{"line":194,"column":0},"end":{"line":194,"column":5}},"194":{"start":{"line":195,"column":0},"end":{"line":195,"column":83}},"195":{"start":{"line":196,"column":0},"end":{"line":196,"column":61}},"196":{"start":{"line":197,"column":0},"end":{"line":197,"column":44}},"197":{"start":{"line":198,"column":0},"end":{"line":198,"column":19}},"198":{"start":{"line":199,"column":0},"end":{"line":199,"column":58}},"199":{"start":{"line":200,"column":0},"end":{"line":200,"column":50}},"200":{"start":{"line":201,"column":0},"end":{"line":201,"column":3}},"201":{"start":{"line":202,"column":0},"end":{"line":202,"column":1}},"204":{"start":{"line":205,"column":0},"end":{"line":205,"column":46}},"205":{"start":{"line":206,"column":0},"end":{"line":206,"column":17}},"206":{"start":{"line":207,"column":0},"end":{"line":207,"column":20}},"207":{"start":{"line":208,"column":0},"end":{"line":208,"column":33}},"208":{"start":{"line":209,"column":0},"end":{"line":209,"column":7}},"209":{"start":{"line":210,"column":0},"end":{"line":210,"column":94}},"210":{"start":{"line":211,"column":0},"end":{"line":211,"column":42}},"211":{"start":{"line":212,"column":0},"end":{"line":212,"column":66}},"212":{"start":{"line":213,"column":0},"end":{"line":213,"column":24}},"213":{"start":{"line":214,"column":0},"end":{"line":214,"column":77}},"214":{"start":{"line":215,"column":0},"end":{"line":215,"column":16}},"215":{"start":{"line":216,"column":0},"end":{"line":216,"column":5}},"216":{"start":{"line":217,"column":0},"end":{"line":217,"column":43}},"217":{"start":{"line":218,"column":0},"end":{"line":218,"column":44}},"219":{"start":{"line":220,"column":0},"end":{"line":220,"column":31}},"220":{"start":{"line":221,"column":0},"end":{"line":221,"column":11}},"221":{"start":{"line":222,"column":0},"end":{"line":222,"column":24}},"222":{"start":{"line":223,"column":0},"end":{"line":223,"column":43}},"223":{"start":{"line":224,"column":0},"end":{"line":224,"column":32}},"224":{"start":{"line":225,"column":0},"end":{"line":225,"column":34}},"225":{"start":{"line":226,"column":0},"end":{"line":226,"column":10}},"226":{"start":{"line":227,"column":0},"end":{"line":227,"column":92}},"227":{"start":{"line":228,"column":0},"end":{"line":228,"column":62}},"228":{"start":{"line":229,"column":0},"end":{"line":229,"column":51}},"230":{"start":{"line":231,"column":0},"end":{"line":231,"column":75}},"231":{"start":{"line":232,"column":0},"end":{"line":232,"column":19}},"232":{"start":{"line":233,"column":0},"end":{"line":233,"column":9}},"233":{"start":{"line":234,"column":0},"end":{"line":234,"column":29}},"234":{"start":{"line":235,"column":0},"end":{"line":235,"column":21}},"235":{"start":{"line":236,"column":0},"end":{"line":236,"column":53}},"236":{"start":{"line":237,"column":0},"end":{"line":237,"column":7}},"237":{"start":{"line":238,"column":0},"end":{"line":238,"column":5}},"238":{"start":{"line":239,"column":0},"end":{"line":239,"column":19}},"239":{"start":{"line":240,"column":0},"end":{"line":240,"column":19}},"240":{"start":{"line":241,"column":0},"end":{"line":241,"column":62}},"241":{"start":{"line":242,"column":0},"end":{"line":242,"column":14}},"242":{"start":{"line":243,"column":0},"end":{"line":243,"column":3}},"243":{"start":{"line":244,"column":0},"end":{"line":244,"column":1}}},"s":{"0":1,"6":7,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"160":0,"161":0,"163":0,"164":0,"165":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0},"branchMap":{"0":{"type":"branch","line":7,"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":18}},"locations":[{"start":{"line":7,"column":0},"end":{"line":7,"column":18}}]}},"b":{"0":[7]},"fnMap":{"0":{"name":"mapDwengoToLocal","decl":{"start":{"line":82,"column":0},"end":{"line":109,"column":1}},"loc":{"start":{"line":82,"column":0},"end":{"line":109,"column":1}},"line":82},"1":{"name":"fetchAllDwengoObjects","decl":{"start":{"line":112,"column":0},"end":{"line":126,"column":1}},"loc":{"start":{"line":112,"column":0},"end":{"line":126,"column":1}},"line":112},"2":{"name":"fetchDwengoObjectById","decl":{"start":{"line":129,"column":0},"end":{"line":150,"column":1}},"loc":{"start":{"line":129,"column":0},"end":{"line":150,"column":1}},"line":129},"3":{"name":"fetchDwengoObjectByHruidLangVersion","decl":{"start":{"line":153,"column":0},"end":{"line":179,"column":1}},"loc":{"start":{"line":153,"column":0},"end":{"line":179,"column":1}},"line":153},"4":{"name":"searchDwengoObjects","decl":{"start":{"line":182,"column":0},"end":{"line":202,"column":1}},"loc":{"start":{"line":182,"column":0},"end":{"line":202,"column":1}},"line":182},"5":{"name":"getDwengoObjectsForPath","decl":{"start":{"line":205,"column":0},"end":{"line":244,"column":1}},"loc":{"start":{"line":205,"column":0},"end":{"line":244,"column":1}},"line":205}},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/feedbackService.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/feedbackService.ts","all":false,"statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":56}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":34}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":38}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":130}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":71}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":82}},"9":{"start":{"line":10,"column":0},"end":{"line":10,"column":9}},"11":{"start":{"line":12,"column":0},"end":{"line":12,"column":41}},"12":{"start":{"line":13,"column":0},"end":{"line":13,"column":20}},"13":{"start":{"line":14,"column":0},"end":{"line":14,"column":29}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":47}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":46}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":18}},"17":{"start":{"line":18,"column":0},"end":{"line":18,"column":14}},"18":{"start":{"line":19,"column":0},"end":{"line":19,"column":22}},"19":{"start":{"line":20,"column":0},"end":{"line":20,"column":33}},"20":{"start":{"line":21,"column":0},"end":{"line":21,"column":14}},"21":{"start":{"line":22,"column":0},"end":{"line":22,"column":11}},"22":{"start":{"line":23,"column":0},"end":{"line":23,"column":5}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":114}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":71}},"26":{"start":{"line":27,"column":0},"end":{"line":27,"column":82}},"27":{"start":{"line":28,"column":0},"end":{"line":28,"column":9}},"30":{"start":{"line":31,"column":0},"end":{"line":31,"column":60}},"31":{"start":{"line":32,"column":0},"end":{"line":32,"column":20}},"32":{"start":{"line":33,"column":0},"end":{"line":33,"column":30}},"33":{"start":{"line":34,"column":0},"end":{"line":34,"column":27}},"34":{"start":{"line":35,"column":0},"end":{"line":35,"column":51}},"35":{"start":{"line":36,"column":0},"end":{"line":36,"column":22}},"36":{"start":{"line":37,"column":0},"end":{"line":37,"column":17}},"43":{"start":{"line":44,"column":0},"end":{"line":44,"column":13}},"44":{"start":{"line":45,"column":0},"end":{"line":45,"column":11}},"47":{"start":{"line":48,"column":0},"end":{"line":48,"column":32}},"48":{"start":{"line":49,"column":0},"end":{"line":49,"column":52}},"49":{"start":{"line":50,"column":0},"end":{"line":50,"column":9}},"51":{"start":{"line":52,"column":0},"end":{"line":52,"column":39}},"52":{"start":{"line":53,"column":0},"end":{"line":53,"column":19}},"53":{"start":{"line":54,"column":0},"end":{"line":54,"column":43}},"54":{"start":{"line":55,"column":0},"end":{"line":55,"column":37}},"55":{"start":{"line":56,"column":0},"end":{"line":56,"column":41}},"56":{"start":{"line":57,"column":0},"end":{"line":57,"column":14}},"57":{"start":{"line":58,"column":0},"end":{"line":58,"column":11}},"58":{"start":{"line":59,"column":0},"end":{"line":59,"column":5}},"60":{"start":{"line":61,"column":0},"end":{"line":61,"column":110}},"61":{"start":{"line":62,"column":0},"end":{"line":62,"column":71}},"62":{"start":{"line":63,"column":0},"end":{"line":63,"column":82}},"63":{"start":{"line":64,"column":0},"end":{"line":64,"column":9}},"65":{"start":{"line":66,"column":0},"end":{"line":66,"column":43}},"66":{"start":{"line":67,"column":0},"end":{"line":67,"column":20}},"67":{"start":{"line":68,"column":0},"end":{"line":68,"column":43}},"68":{"start":{"line":69,"column":0},"end":{"line":69,"column":13}},"69":{"start":{"line":70,"column":0},"end":{"line":70,"column":11}},"70":{"start":{"line":71,"column":0},"end":{"line":71,"column":5}},"72":{"start":{"line":73,"column":0},"end":{"line":73,"column":127}},"73":{"start":{"line":74,"column":0},"end":{"line":74,"column":71}},"74":{"start":{"line":75,"column":0},"end":{"line":75,"column":82}},"75":{"start":{"line":76,"column":0},"end":{"line":76,"column":9}},"77":{"start":{"line":78,"column":0},"end":{"line":78,"column":39}},"78":{"start":{"line":79,"column":0},"end":{"line":79,"column":20}},"79":{"start":{"line":80,"column":0},"end":{"line":80,"column":43}},"80":{"start":{"line":81,"column":0},"end":{"line":81,"column":14}},"81":{"start":{"line":82,"column":0},"end":{"line":82,"column":19}},"82":{"start":{"line":83,"column":0},"end":{"line":83,"column":41}},"83":{"start":{"line":84,"column":0},"end":{"line":84,"column":14}},"84":{"start":{"line":85,"column":0},"end":{"line":85,"column":11}},"85":{"start":{"line":86,"column":0},"end":{"line":86,"column":5}},"87":{"start":{"line":88,"column":0},"end":{"line":88,"column":106}},"88":{"start":{"line":89,"column":0},"end":{"line":89,"column":71}},"89":{"start":{"line":90,"column":0},"end":{"line":90,"column":82}},"90":{"start":{"line":91,"column":0},"end":{"line":91,"column":9}},"92":{"start":{"line":93,"column":0},"end":{"line":93,"column":39}},"93":{"start":{"line":94,"column":0},"end":{"line":94,"column":20}},"94":{"start":{"line":95,"column":0},"end":{"line":95,"column":43}},"95":{"start":{"line":96,"column":0},"end":{"line":96,"column":14}},"96":{"start":{"line":97,"column":0},"end":{"line":97,"column":11}},"98":{"start":{"line":99,"column":0},"end":{"line":99,"column":5}},"100":{"start":{"line":101,"column":0},"end":{"line":101,"column":79}},"102":{"start":{"line":103,"column":0},"end":{"line":103,"column":66}},"103":{"start":{"line":104,"column":0},"end":{"line":104,"column":20}},"104":{"start":{"line":105,"column":0},"end":{"line":105,"column":34}},"105":{"start":{"line":106,"column":0},"end":{"line":106,"column":26}},"106":{"start":{"line":107,"column":0},"end":{"line":107,"column":27}},"107":{"start":{"line":108,"column":0},"end":{"line":108,"column":32}},"108":{"start":{"line":109,"column":0},"end":{"line":109,"column":42}},"109":{"start":{"line":110,"column":0},"end":{"line":110,"column":39}},"110":{"start":{"line":111,"column":0},"end":{"line":111,"column":49}},"111":{"start":{"line":112,"column":0},"end":{"line":112,"column":57}},"112":{"start":{"line":113,"column":0},"end":{"line":113,"column":37}},"113":{"start":{"line":114,"column":0},"end":{"line":114,"column":33}},"114":{"start":{"line":115,"column":0},"end":{"line":115,"column":29}},"115":{"start":{"line":116,"column":0},"end":{"line":116,"column":25}},"116":{"start":{"line":117,"column":0},"end":{"line":117,"column":21}},"117":{"start":{"line":118,"column":0},"end":{"line":118,"column":17}},"118":{"start":{"line":119,"column":0},"end":{"line":119,"column":13}},"119":{"start":{"line":120,"column":0},"end":{"line":120,"column":9}},"120":{"start":{"line":121,"column":0},"end":{"line":121,"column":10}},"122":{"start":{"line":123,"column":0},"end":{"line":123,"column":42}},"123":{"start":{"line":124,"column":0},"end":{"line":124,"column":5}},"125":{"start":{"line":126,"column":0},"end":{"line":126,"column":79}},"127":{"start":{"line":128,"column":0},"end":{"line":128,"column":70}},"128":{"start":{"line":129,"column":0},"end":{"line":129,"column":20}},"129":{"start":{"line":130,"column":0},"end":{"line":130,"column":34}},"130":{"start":{"line":131,"column":0},"end":{"line":131,"column":26}},"131":{"start":{"line":132,"column":0},"end":{"line":132,"column":27}},"132":{"start":{"line":133,"column":0},"end":{"line":133,"column":32}},"133":{"start":{"line":134,"column":0},"end":{"line":134,"column":42}},"134":{"start":{"line":135,"column":0},"end":{"line":135,"column":39}},"135":{"start":{"line":136,"column":0},"end":{"line":136,"column":49}},"136":{"start":{"line":137,"column":0},"end":{"line":137,"column":54}},"137":{"start":{"line":138,"column":0},"end":{"line":138,"column":51}},"138":{"start":{"line":139,"column":0},"end":{"line":139,"column":75}},"139":{"start":{"line":140,"column":0},"end":{"line":140,"column":45}},"140":{"start":{"line":141,"column":0},"end":{"line":141,"column":41}},"141":{"start":{"line":142,"column":0},"end":{"line":142,"column":37}},"142":{"start":{"line":143,"column":0},"end":{"line":143,"column":33}},"143":{"start":{"line":144,"column":0},"end":{"line":144,"column":29}},"144":{"start":{"line":145,"column":0},"end":{"line":145,"column":25}},"145":{"start":{"line":146,"column":0},"end":{"line":146,"column":21}},"146":{"start":{"line":147,"column":0},"end":{"line":147,"column":17}},"147":{"start":{"line":148,"column":0},"end":{"line":148,"column":13}},"148":{"start":{"line":149,"column":0},"end":{"line":149,"column":9}},"149":{"start":{"line":150,"column":0},"end":{"line":150,"column":10}},"152":{"start":{"line":153,"column":0},"end":{"line":153,"column":37}},"153":{"start":{"line":154,"column":0},"end":{"line":154,"column":5}},"154":{"start":{"line":155,"column":0},"end":{"line":155,"column":1}}},"s":{"0":1,"3":1,"5":1,"6":1,"7":0,"8":0,"9":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"24":1,"25":0,"26":0,"27":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"43":0,"44":0,"47":0,"48":0,"49":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":1,"61":0,"62":0,"63":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"72":1,"73":0,"74":0,"75":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"87":1,"88":0,"89":0,"90":0,"92":0,"93":0,"94":0,"95":0,"96":0,"98":0,"100":1,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"122":0,"123":0,"125":1,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"152":0,"153":0,"154":1},"branchMap":{},"b":{},"fnMap":{"0":{"name":"getAllFeedbackForEvaluation","decl":{"start":{"line":7,"column":4},"end":{"line":23,"column":5}},"loc":{"start":{"line":7,"column":4},"end":{"line":23,"column":5}},"line":7},"1":{"name":"createFeedback","decl":{"start":{"line":25,"column":4},"end":{"line":59,"column":5}},"loc":{"start":{"line":25,"column":4},"end":{"line":59,"column":5}},"line":25},"2":{"name":"getFeedbackForSubmission","decl":{"start":{"line":61,"column":4},"end":{"line":71,"column":5}},"loc":{"start":{"line":61,"column":4},"end":{"line":71,"column":5}},"line":61},"3":{"name":"updateFeedbackForSubmission","decl":{"start":{"line":73,"column":4},"end":{"line":86,"column":5}},"loc":{"start":{"line":73,"column":4},"end":{"line":86,"column":5}},"line":73},"4":{"name":"deleteFeedbackForSubmission","decl":{"start":{"line":88,"column":4},"end":{"line":99,"column":5}},"loc":{"start":{"line":88,"column":4},"end":{"line":99,"column":5}},"line":88},"5":{"name":"hasAssignmentRights","decl":{"start":{"line":101,"column":4},"end":{"line":124,"column":5}},"loc":{"start":{"line":101,"column":4},"end":{"line":124,"column":5}},"line":101},"6":{"name":"hasSubmissionRights","decl":{"start":{"line":126,"column":4},"end":{"line":154,"column":5}},"loc":{"start":{"line":126,"column":4},"end":{"line":154,"column":5}},"line":126}},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/inviteService.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/inviteService.ts","all":false,"statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":80}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":42}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":99}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":34}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":36}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":107}},"9":{"start":{"line":10,"column":0},"end":{"line":10,"column":69}},"10":{"start":{"line":11,"column":0},"end":{"line":11,"column":20}},"11":{"start":{"line":12,"column":0},"end":{"line":12,"column":25}},"12":{"start":{"line":13,"column":0},"end":{"line":13,"column":31}},"13":{"start":{"line":14,"column":0},"end":{"line":14,"column":50}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":13}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":11}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":22}},"17":{"start":{"line":18,"column":0},"end":{"line":18,"column":85}},"18":{"start":{"line":19,"column":0},"end":{"line":19,"column":9}},"19":{"start":{"line":20,"column":0},"end":{"line":20,"column":22}},"20":{"start":{"line":21,"column":0},"end":{"line":21,"column":5}},"22":{"start":{"line":23,"column":0},"end":{"line":23,"column":113}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":81}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":25}},"26":{"start":{"line":27,"column":0},"end":{"line":27,"column":58}},"27":{"start":{"line":28,"column":0},"end":{"line":28,"column":9}},"30":{"start":{"line":31,"column":0},"end":{"line":31,"column":96}},"31":{"start":{"line":32,"column":0},"end":{"line":32,"column":25}},"32":{"start":{"line":33,"column":0},"end":{"line":33,"column":83}},"33":{"start":{"line":34,"column":0},"end":{"line":34,"column":9}},"36":{"start":{"line":37,"column":0},"end":{"line":37,"column":69}},"37":{"start":{"line":38,"column":0},"end":{"line":38,"column":20}},"38":{"start":{"line":39,"column":0},"end":{"line":39,"column":31}},"39":{"start":{"line":40,"column":0},"end":{"line":40,"column":24}},"40":{"start":{"line":41,"column":0},"end":{"line":41,"column":50}},"41":{"start":{"line":42,"column":0},"end":{"line":42,"column":14}},"42":{"start":{"line":43,"column":0},"end":{"line":43,"column":11}},"43":{"start":{"line":44,"column":0},"end":{"line":44,"column":21}},"44":{"start":{"line":45,"column":0},"end":{"line":45,"column":106}},"45":{"start":{"line":46,"column":0},"end":{"line":46,"column":9}},"48":{"start":{"line":49,"column":0},"end":{"line":49,"column":103}},"49":{"start":{"line":50,"column":0},"end":{"line":50,"column":31}},"50":{"start":{"line":51,"column":0},"end":{"line":51,"column":74}},"51":{"start":{"line":52,"column":0},"end":{"line":52,"column":9}},"54":{"start":{"line":55,"column":0},"end":{"line":55,"column":43}},"55":{"start":{"line":56,"column":0},"end":{"line":56,"column":19}},"56":{"start":{"line":57,"column":0},"end":{"line":57,"column":31}},"57":{"start":{"line":58,"column":0},"end":{"line":58,"column":31}},"58":{"start":{"line":59,"column":0},"end":{"line":59,"column":24}},"59":{"start":{"line":60,"column":0},"end":{"line":60,"column":50}},"60":{"start":{"line":61,"column":0},"end":{"line":61,"column":14}},"61":{"start":{"line":62,"column":0},"end":{"line":62,"column":11}},"62":{"start":{"line":63,"column":0},"end":{"line":63,"column":5}},"64":{"start":{"line":65,"column":0},"end":{"line":65,"column":104}},"66":{"start":{"line":67,"column":0},"end":{"line":67,"column":96}},"67":{"start":{"line":68,"column":0},"end":{"line":68,"column":25}},"68":{"start":{"line":69,"column":0},"end":{"line":69,"column":83}},"69":{"start":{"line":70,"column":0},"end":{"line":70,"column":9}},"70":{"start":{"line":71,"column":0},"end":{"line":71,"column":45}},"71":{"start":{"line":72,"column":0},"end":{"line":72,"column":20}},"72":{"start":{"line":73,"column":0},"end":{"line":73,"column":24}},"73":{"start":{"line":74,"column":0},"end":{"line":74,"column":49}},"74":{"start":{"line":75,"column":0},"end":{"line":75,"column":16}},"75":{"start":{"line":76,"column":0},"end":{"line":76,"column":11}},"76":{"start":{"line":77,"column":0},"end":{"line":77,"column":5}},"78":{"start":{"line":79,"column":0},"end":{"line":79,"column":84}},"79":{"start":{"line":80,"column":0},"end":{"line":80,"column":39}},"80":{"start":{"line":81,"column":0},"end":{"line":81,"column":20}},"81":{"start":{"line":82,"column":0},"end":{"line":82,"column":42}},"82":{"start":{"line":83,"column":0},"end":{"line":83,"column":155}},"83":{"start":{"line":84,"column":0},"end":{"line":84,"column":14}},"84":{"start":{"line":85,"column":0},"end":{"line":85,"column":11}},"85":{"start":{"line":86,"column":0},"end":{"line":86,"column":5}},"87":{"start":{"line":88,"column":0},"end":{"line":88,"column":97}},"89":{"start":{"line":90,"column":0},"end":{"line":90,"column":83}},"91":{"start":{"line":92,"column":0},"end":{"line":92,"column":48}},"93":{"start":{"line":94,"column":0},"end":{"line":94,"column":34}},"94":{"start":{"line":95,"column":0},"end":{"line":95,"column":24}},"95":{"start":{"line":96,"column":0},"end":{"line":96,"column":45}},"96":{"start":{"line":97,"column":0},"end":{"line":97,"column":18}},"97":{"start":{"line":98,"column":0},"end":{"line":98,"column":23}},"98":{"start":{"line":99,"column":0},"end":{"line":99,"column":55}},"99":{"start":{"line":100,"column":0},"end":{"line":100,"column":18}},"100":{"start":{"line":101,"column":0},"end":{"line":101,"column":15}},"102":{"start":{"line":103,"column":0},"end":{"line":103,"column":40}},"103":{"start":{"line":104,"column":0},"end":{"line":104,"column":23}},"104":{"start":{"line":105,"column":0},"end":{"line":105,"column":30}},"105":{"start":{"line":106,"column":0},"end":{"line":106,"column":43}},"106":{"start":{"line":107,"column":0},"end":{"line":107,"column":17}},"107":{"start":{"line":108,"column":0},"end":{"line":108,"column":14}},"108":{"start":{"line":109,"column":0},"end":{"line":109,"column":11}},"109":{"start":{"line":110,"column":0},"end":{"line":110,"column":22}},"110":{"start":{"line":111,"column":0},"end":{"line":111,"column":5}},"112":{"start":{"line":113,"column":0},"end":{"line":113,"column":86}},"114":{"start":{"line":115,"column":0},"end":{"line":115,"column":85}},"117":{"start":{"line":118,"column":0},"end":{"line":118,"column":37}},"118":{"start":{"line":119,"column":0},"end":{"line":119,"column":20}},"119":{"start":{"line":120,"column":0},"end":{"line":120,"column":41}},"120":{"start":{"line":121,"column":0},"end":{"line":121,"column":14}},"121":{"start":{"line":122,"column":0},"end":{"line":122,"column":19}},"122":{"start":{"line":123,"column":0},"end":{"line":123,"column":49}},"123":{"start":{"line":124,"column":0},"end":{"line":124,"column":13}},"124":{"start":{"line":125,"column":0},"end":{"line":125,"column":11}},"125":{"start":{"line":126,"column":0},"end":{"line":126,"column":5}},"127":{"start":{"line":128,"column":0},"end":{"line":128,"column":107}},"130":{"start":{"line":131,"column":0},"end":{"line":131,"column":96}},"131":{"start":{"line":132,"column":0},"end":{"line":132,"column":25}},"132":{"start":{"line":133,"column":0},"end":{"line":133,"column":83}},"133":{"start":{"line":134,"column":0},"end":{"line":134,"column":9}},"136":{"start":{"line":137,"column":0},"end":{"line":137,"column":43}},"137":{"start":{"line":138,"column":0},"end":{"line":138,"column":20}},"138":{"start":{"line":139,"column":0},"end":{"line":139,"column":25}},"139":{"start":{"line":140,"column":0},"end":{"line":140,"column":117}},"140":{"start":{"line":141,"column":0},"end":{"line":141,"column":14}},"141":{"start":{"line":142,"column":0},"end":{"line":142,"column":11}},"142":{"start":{"line":143,"column":0},"end":{"line":143,"column":5}},"144":{"start":{"line":145,"column":0},"end":{"line":145,"column":1}}},"s":{"0":1,"1":1,"2":1,"4":1,"6":1,"8":1,"9":4,"10":4,"11":4,"12":4,"13":4,"14":4,"15":4,"16":4,"17":2,"18":2,"19":2,"20":4,"22":1,"24":7,"25":7,"26":1,"27":1,"30":6,"31":7,"32":1,"33":1,"36":5,"37":5,"38":5,"39":5,"40":5,"41":5,"42":5,"43":7,"44":1,"45":1,"48":4,"49":7,"50":1,"51":1,"54":3,"55":3,"56":3,"57":3,"58":3,"59":3,"60":3,"61":3,"62":7,"64":1,"66":2,"67":2,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":2,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"87":1,"89":3,"91":1,"93":1,"94":1,"95":1,"96":1,"97":1,"98":1,"99":1,"100":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"109":1,"110":3,"112":1,"114":1,"117":1,"118":1,"119":1,"120":1,"121":1,"122":1,"123":1,"124":1,"125":1,"127":1,"130":4,"131":4,"132":1,"133":1,"136":3,"137":3,"138":3,"139":3,"140":3,"141":3,"142":4,"144":1},"branchMap":{"0":{"type":"branch","line":9,"loc":{"start":{"line":9,"column":4},"end":{"line":21,"column":5}},"locations":[{"start":{"line":9,"column":4},"end":{"line":21,"column":5}}]},"1":{"type":"branch","line":17,"loc":{"start":{"line":17,"column":21},"end":{"line":20,"column":22}},"locations":[{"start":{"line":17,"column":21},"end":{"line":20,"column":22}}]},"2":{"type":"branch","line":23,"loc":{"start":{"line":23,"column":4},"end":{"line":63,"column":5}},"locations":[{"start":{"line":23,"column":4},"end":{"line":63,"column":5}}]},"3":{"type":"branch","line":26,"loc":{"start":{"line":26,"column":24},"end":{"line":28,"column":9}},"locations":[{"start":{"line":26,"column":24},"end":{"line":28,"column":9}}]},"4":{"type":"branch","line":28,"loc":{"start":{"line":28,"column":8},"end":{"line":32,"column":24}},"locations":[{"start":{"line":28,"column":8},"end":{"line":32,"column":24}}]},"5":{"type":"branch","line":32,"loc":{"start":{"line":32,"column":24},"end":{"line":34,"column":9}},"locations":[{"start":{"line":32,"column":24},"end":{"line":34,"column":9}}]},"6":{"type":"branch","line":34,"loc":{"start":{"line":34,"column":8},"end":{"line":44,"column":20}},"locations":[{"start":{"line":34,"column":8},"end":{"line":44,"column":20}}]},"7":{"type":"branch","line":44,"loc":{"start":{"line":44,"column":20},"end":{"line":46,"column":9}},"locations":[{"start":{"line":44,"column":20},"end":{"line":46,"column":9}}]},"8":{"type":"branch","line":46,"loc":{"start":{"line":46,"column":8},"end":{"line":50,"column":30}},"locations":[{"start":{"line":46,"column":8},"end":{"line":50,"column":30}}]},"9":{"type":"branch","line":50,"loc":{"start":{"line":50,"column":30},"end":{"line":52,"column":9}},"locations":[{"start":{"line":50,"column":30},"end":{"line":52,"column":9}}]},"10":{"type":"branch","line":52,"loc":{"start":{"line":52,"column":8},"end":{"line":62,"column":11}},"locations":[{"start":{"line":52,"column":8},"end":{"line":62,"column":11}}]},"11":{"type":"branch","line":65,"loc":{"start":{"line":65,"column":4},"end":{"line":77,"column":5}},"locations":[{"start":{"line":65,"column":4},"end":{"line":77,"column":5}}]},"12":{"type":"branch","line":68,"loc":{"start":{"line":68,"column":24},"end":{"line":76,"column":11}},"locations":[{"start":{"line":68,"column":24},"end":{"line":76,"column":11}}]},"13":{"type":"branch","line":79,"loc":{"start":{"line":79,"column":4},"end":{"line":86,"column":5}},"locations":[{"start":{"line":79,"column":4},"end":{"line":86,"column":5}}]},"14":{"type":"branch","line":88,"loc":{"start":{"line":88,"column":4},"end":{"line":111,"column":5}},"locations":[{"start":{"line":88,"column":4},"end":{"line":111,"column":5}}]},"15":{"type":"branch","line":90,"loc":{"start":{"line":90,"column":81},"end":{"line":110,"column":22}},"locations":[{"start":{"line":90,"column":81},"end":{"line":110,"column":22}}]},"16":{"type":"branch","line":113,"loc":{"start":{"line":113,"column":4},"end":{"line":126,"column":5}},"locations":[{"start":{"line":113,"column":4},"end":{"line":126,"column":5}}]},"17":{"type":"branch","line":128,"loc":{"start":{"line":128,"column":4},"end":{"line":143,"column":5}},"locations":[{"start":{"line":128,"column":4},"end":{"line":143,"column":5}}]},"18":{"type":"branch","line":132,"loc":{"start":{"line":132,"column":24},"end":{"line":134,"column":9}},"locations":[{"start":{"line":132,"column":24},"end":{"line":134,"column":9}}]},"19":{"type":"branch","line":134,"loc":{"start":{"line":134,"column":8},"end":{"line":142,"column":11}},"locations":[{"start":{"line":134,"column":8},"end":{"line":142,"column":11}}]}},"b":{"0":[4],"1":[2],"2":[7],"3":[1],"4":[6],"5":[1],"6":[5],"7":[1],"8":[4],"9":[1],"10":[3],"11":[2],"12":[1],"13":[1],"14":[3],"15":[1],"16":[1],"17":[4],"18":[1],"19":[3]},"fnMap":{"0":{"name":"validateInvitePending","decl":{"start":{"line":9,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":9,"column":4},"end":{"line":21,"column":5}},"line":9},"1":{"name":"createInvite","decl":{"start":{"line":23,"column":4},"end":{"line":63,"column":5}},"loc":{"start":{"line":23,"column":4},"end":{"line":63,"column":5}},"line":23},"2":{"name":"getPendingInvitesForClass","decl":{"start":{"line":65,"column":4},"end":{"line":77,"column":5}},"loc":{"start":{"line":65,"column":4},"end":{"line":77,"column":5}},"line":65},"3":{"name":"getPendingInvitesForTeacher","decl":{"start":{"line":79,"column":4},"end":{"line":86,"column":5}},"loc":{"start":{"line":79,"column":4},"end":{"line":86,"column":5}},"line":79},"4":{"name":"acceptInviteAndJoinClass","decl":{"start":{"line":88,"column":4},"end":{"line":111,"column":5}},"loc":{"start":{"line":88,"column":4},"end":{"line":111,"column":5}},"line":88},"5":{"name":"declineInvite","decl":{"start":{"line":113,"column":4},"end":{"line":126,"column":5}},"loc":{"start":{"line":113,"column":4},"end":{"line":126,"column":5}},"line":113},"6":{"name":"deleteInvite","decl":{"start":{"line":128,"column":4},"end":{"line":143,"column":5}},"loc":{"start":{"line":128,"column":4},"end":{"line":143,"column":5}},"line":128}},"f":{"0":4,"1":7,"2":2,"3":1,"4":3,"5":1,"6":4}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/joinRequestService.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/joinRequestService.ts","all":false,"statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":76}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":42}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":79}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":84}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":34}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":41}},"11":{"start":{"line":12,"column":0},"end":{"line":12,"column":89}},"12":{"start":{"line":13,"column":0},"end":{"line":13,"column":97}},"13":{"start":{"line":14,"column":0},"end":{"line":14,"column":25}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":78}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":9}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":25}},"17":{"start":{"line":18,"column":0},"end":{"line":18,"column":5}},"19":{"start":{"line":20,"column":0},"end":{"line":20,"column":155}},"21":{"start":{"line":22,"column":0},"end":{"line":22,"column":91}},"22":{"start":{"line":23,"column":0},"end":{"line":23,"column":25}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":100}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":9}},"26":{"start":{"line":27,"column":0},"end":{"line":27,"column":84}},"27":{"start":{"line":28,"column":0},"end":{"line":28,"column":77}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":11}},"29":{"start":{"line":30,"column":0},"end":{"line":30,"column":27}},"30":{"start":{"line":31,"column":0},"end":{"line":31,"column":109}},"31":{"start":{"line":32,"column":0},"end":{"line":32,"column":9}},"34":{"start":{"line":35,"column":0},"end":{"line":35,"column":64}},"35":{"start":{"line":36,"column":0},"end":{"line":36,"column":33}},"36":{"start":{"line":37,"column":0},"end":{"line":37,"column":37}},"37":{"start":{"line":38,"column":0},"end":{"line":38,"column":11}},"39":{"start":{"line":40,"column":0},"end":{"line":40,"column":30}},"40":{"start":{"line":41,"column":0},"end":{"line":41,"column":5}},"42":{"start":{"line":43,"column":0},"end":{"line":43,"column":94}},"43":{"start":{"line":44,"column":0},"end":{"line":44,"column":42}},"44":{"start":{"line":45,"column":0},"end":{"line":45,"column":19}},"45":{"start":{"line":46,"column":0},"end":{"line":46,"column":26}},"46":{"start":{"line":47,"column":0},"end":{"line":47,"column":33}},"47":{"start":{"line":48,"column":0},"end":{"line":48,"column":50}},"48":{"start":{"line":49,"column":0},"end":{"line":49,"column":14}},"49":{"start":{"line":50,"column":0},"end":{"line":50,"column":11}},"50":{"start":{"line":51,"column":0},"end":{"line":51,"column":5}},"52":{"start":{"line":53,"column":0},"end":{"line":53,"column":100}},"53":{"start":{"line":54,"column":0},"end":{"line":54,"column":13}},"54":{"start":{"line":55,"column":0},"end":{"line":55,"column":87}},"57":{"start":{"line":58,"column":0},"end":{"line":58,"column":76}},"58":{"start":{"line":59,"column":0},"end":{"line":59,"column":111}},"59":{"start":{"line":60,"column":0},"end":{"line":60,"column":13}},"62":{"start":{"line":63,"column":0},"end":{"line":63,"column":92}},"63":{"start":{"line":64,"column":0},"end":{"line":64,"column":24}},"64":{"start":{"line":65,"column":0},"end":{"line":65,"column":30}},"65":{"start":{"line":66,"column":0},"end":{"line":66,"column":42}},"66":{"start":{"line":67,"column":0},"end":{"line":67,"column":54}},"67":{"start":{"line":68,"column":0},"end":{"line":68,"column":18}},"68":{"start":{"line":69,"column":0},"end":{"line":69,"column":15}},"69":{"start":{"line":70,"column":0},"end":{"line":70,"column":34}},"70":{"start":{"line":71,"column":0},"end":{"line":71,"column":135}},"71":{"start":{"line":72,"column":0},"end":{"line":72,"column":13}},"73":{"start":{"line":74,"column":0},"end":{"line":74,"column":73}},"74":{"start":{"line":75,"column":0},"end":{"line":75,"column":25}},"75":{"start":{"line":76,"column":0},"end":{"line":76,"column":67}},"80":{"start":{"line":81,"column":0},"end":{"line":81,"column":24}},"81":{"start":{"line":82,"column":0},"end":{"line":82,"column":9}},"82":{"start":{"line":83,"column":0},"end":{"line":83,"column":6}},"84":{"start":{"line":85,"column":0},"end":{"line":85,"column":130}},"85":{"start":{"line":86,"column":0},"end":{"line":86,"column":13}},"86":{"start":{"line":87,"column":0},"end":{"line":87,"column":143}},"89":{"start":{"line":90,"column":0},"end":{"line":90,"column":84}},"90":{"start":{"line":91,"column":0},"end":{"line":91,"column":34}},"91":{"start":{"line":92,"column":0},"end":{"line":92,"column":25}},"92":{"start":{"line":93,"column":0},"end":{"line":93,"column":102}},"93":{"start":{"line":94,"column":0},"end":{"line":94,"column":24}},"94":{"start":{"line":95,"column":0},"end":{"line":95,"column":9}},"95":{"start":{"line":96,"column":0},"end":{"line":96,"column":6}},"97":{"start":{"line":98,"column":0},"end":{"line":98,"column":111}},"98":{"start":{"line":99,"column":0},"end":{"line":99,"column":13}},"99":{"start":{"line":100,"column":0},"end":{"line":100,"column":112}},"100":{"start":{"line":101,"column":0},"end":{"line":101,"column":25}},"101":{"start":{"line":102,"column":0},"end":{"line":102,"column":100}},"102":{"start":{"line":103,"column":0},"end":{"line":103,"column":24}},"103":{"start":{"line":104,"column":0},"end":{"line":104,"column":9}},"104":{"start":{"line":105,"column":0},"end":{"line":105,"column":6}},"106":{"start":{"line":107,"column":0},"end":{"line":107,"column":101}},"107":{"start":{"line":108,"column":0},"end":{"line":108,"column":13}},"108":{"start":{"line":109,"column":0},"end":{"line":109,"column":95}},"109":{"start":{"line":110,"column":0},"end":{"line":110,"column":29}},"110":{"start":{"line":111,"column":0},"end":{"line":111,"column":104}},"111":{"start":{"line":112,"column":0},"end":{"line":112,"column":13}},"112":{"start":{"line":113,"column":0},"end":{"line":113,"column":54}},"113":{"start":{"line":114,"column":0},"end":{"line":114,"column":34}},"114":{"start":{"line":115,"column":0},"end":{"line":115,"column":15}},"115":{"start":{"line":116,"column":0},"end":{"line":116,"column":25}},"116":{"start":{"line":117,"column":0},"end":{"line":117,"column":89}},"117":{"start":{"line":118,"column":0},"end":{"line":118,"column":22}},"118":{"start":{"line":119,"column":0},"end":{"line":119,"column":9}},"119":{"start":{"line":120,"column":0},"end":{"line":120,"column":5}},"121":{"start":{"line":122,"column":0},"end":{"line":122,"column":67}},"122":{"start":{"line":123,"column":0},"end":{"line":123,"column":61}},"123":{"start":{"line":124,"column":0},"end":{"line":124,"column":71}},"124":{"start":{"line":125,"column":0},"end":{"line":125,"column":44}},"125":{"start":{"line":126,"column":0},"end":{"line":126,"column":59}},"126":{"start":{"line":127,"column":0},"end":{"line":127,"column":24}},"127":{"start":{"line":128,"column":0},"end":{"line":128,"column":9}},"128":{"start":{"line":129,"column":0},"end":{"line":129,"column":63}},"129":{"start":{"line":130,"column":0},"end":{"line":130,"column":5}},"130":{"start":{"line":131,"column":0},"end":{"line":131,"column":1}}},"s":{"0":1,"1":1,"3":1,"4":1,"6":1,"8":1,"11":1,"12":7,"13":7,"14":1,"15":1,"16":6,"17":7,"19":1,"21":5,"22":5,"23":1,"24":1,"26":4,"27":4,"28":4,"29":5,"30":2,"31":2,"34":2,"35":2,"36":2,"37":2,"39":2,"40":5,"42":1,"43":4,"44":4,"45":4,"46":4,"47":4,"48":4,"49":4,"50":4,"52":1,"53":7,"54":7,"57":7,"58":1,"59":1,"62":5,"63":5,"64":5,"65":5,"66":5,"67":5,"68":5,"69":7,"70":1,"71":1,"73":4,"74":4,"75":3,"80":3,"81":3,"82":7,"84":1,"85":4,"86":4,"89":1,"90":1,"91":4,"92":3,"93":3,"94":3,"95":4,"97":1,"98":1,"99":1,"100":1,"101":0,"102":0,"103":0,"104":1,"106":1,"107":2,"108":2,"109":2,"110":1,"111":1,"112":1,"113":1,"114":1,"115":1,"116":1,"117":1,"118":1,"119":2,"121":1,"122":7,"123":0,"124":7,"125":7,"126":7,"127":7,"128":0,"129":7,"130":1},"branchMap":{"0":{"type":"branch","line":12,"loc":{"start":{"line":12,"column":4},"end":{"line":18,"column":5}},"locations":[{"start":{"line":12,"column":4},"end":{"line":18,"column":5}}]},"1":{"type":"branch","line":14,"loc":{"start":{"line":14,"column":24},"end":{"line":16,"column":9}},"locations":[{"start":{"line":14,"column":24},"end":{"line":16,"column":9}}]},"2":{"type":"branch","line":16,"loc":{"start":{"line":16,"column":8},"end":{"line":17,"column":25}},"locations":[{"start":{"line":16,"column":8},"end":{"line":17,"column":25}}]},"3":{"type":"branch","line":20,"loc":{"start":{"line":20,"column":4},"end":{"line":41,"column":5}},"locations":[{"start":{"line":20,"column":4},"end":{"line":41,"column":5}}]},"4":{"type":"branch","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":25,"column":9}},"locations":[{"start":{"line":23,"column":24},"end":{"line":25,"column":9}}]},"5":{"type":"branch","line":25,"loc":{"start":{"line":25,"column":8},"end":{"line":30,"column":26}},"locations":[{"start":{"line":25,"column":8},"end":{"line":30,"column":26}}]},"6":{"type":"branch","line":30,"loc":{"start":{"line":30,"column":26},"end":{"line":40,"column":30}},"locations":[{"start":{"line":30,"column":26},"end":{"line":40,"column":30}}]},"7":{"type":"branch","line":43,"loc":{"start":{"line":43,"column":4},"end":{"line":51,"column":5}},"locations":[{"start":{"line":43,"column":4},"end":{"line":51,"column":5}}]},"8":{"type":"branch","line":53,"loc":{"start":{"line":53,"column":4},"end":{"line":83,"column":6}},"locations":[{"start":{"line":53,"column":4},"end":{"line":83,"column":6}}]},"9":{"type":"branch","line":55,"loc":{"start":{"line":55,"column":85},"end":{"line":58,"column":75}},"locations":[{"start":{"line":55,"column":85},"end":{"line":58,"column":75}}]},"10":{"type":"branch","line":58,"loc":{"start":{"line":58,"column":75},"end":{"line":60,"column":13}},"locations":[{"start":{"line":58,"column":75},"end":{"line":60,"column":13}}]},"11":{"type":"branch","line":60,"loc":{"start":{"line":60,"column":12},"end":{"line":70,"column":33}},"locations":[{"start":{"line":60,"column":12},"end":{"line":70,"column":33}}]},"12":{"type":"branch","line":70,"loc":{"start":{"line":70,"column":33},"end":{"line":72,"column":13}},"locations":[{"start":{"line":70,"column":33},"end":{"line":72,"column":13}}]},"13":{"type":"branch","line":72,"loc":{"start":{"line":72,"column":12},"end":{"line":82,"column":9}},"locations":[{"start":{"line":72,"column":12},"end":{"line":82,"column":9}}]},"14":{"type":"branch","line":75,"loc":{"start":{"line":75,"column":8},"end":{"line":82,"column":9}},"locations":[{"start":{"line":75,"column":8},"end":{"line":82,"column":9}}]},"15":{"type":"branch","line":85,"loc":{"start":{"line":85,"column":4},"end":{"line":96,"column":6}},"locations":[{"start":{"line":85,"column":4},"end":{"line":96,"column":6}}]},"16":{"type":"branch","line":87,"loc":{"start":{"line":87,"column":141},"end":{"line":92,"column":17}},"locations":[{"start":{"line":87,"column":141},"end":{"line":92,"column":17}}]},"17":{"type":"branch","line":92,"loc":{"start":{"line":92,"column":8},"end":{"line":95,"column":9}},"locations":[{"start":{"line":92,"column":8},"end":{"line":95,"column":9}}]},"18":{"type":"branch","line":98,"loc":{"start":{"line":98,"column":4},"end":{"line":105,"column":6}},"locations":[{"start":{"line":98,"column":4},"end":{"line":105,"column":6}}]},"19":{"type":"branch","line":101,"loc":{"start":{"line":101,"column":8},"end":{"line":104,"column":9}},"locations":[{"start":{"line":101,"column":8},"end":{"line":104,"column":9}}]},"20":{"type":"branch","line":107,"loc":{"start":{"line":107,"column":4},"end":{"line":120,"column":5}},"locations":[{"start":{"line":107,"column":4},"end":{"line":120,"column":5}}]},"21":{"type":"branch","line":110,"loc":{"start":{"line":110,"column":28},"end":{"line":119,"column":9}},"locations":[{"start":{"line":110,"column":28},"end":{"line":119,"column":9}}]},"22":{"type":"branch","line":122,"loc":{"start":{"line":122,"column":19},"end":{"line":130,"column":5}},"locations":[{"start":{"line":122,"column":19},"end":{"line":130,"column":5}}]},"23":{"type":"branch","line":123,"loc":{"start":{"line":123,"column":60},"end":{"line":125,"column":19}},"locations":[{"start":{"line":123,"column":60},"end":{"line":125,"column":19}}]},"24":{"type":"branch","line":128,"loc":{"start":{"line":128,"column":8},"end":{"line":129,"column":63}},"locations":[{"start":{"line":128,"column":8},"end":{"line":129,"column":63}}]}},"b":{"0":[7],"1":[1],"2":[6],"3":[5],"4":[1],"5":[4],"6":[2],"7":[4],"8":[7],"9":[6],"10":[1],"11":[5],"12":[1],"13":[4],"14":[3],"15":[4],"16":[1],"17":[3],"18":[1],"19":[0],"20":[2],"21":[1],"22":[7],"23":[0],"24":[0]},"fnMap":{"0":{"name":"validateClassExists","decl":{"start":{"line":12,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":12,"column":4},"end":{"line":18,"column":5}},"line":12},"1":{"name":"updateAndValidateRequest","decl":{"start":{"line":20,"column":4},"end":{"line":41,"column":5}},"loc":{"start":{"line":20,"column":4},"end":{"line":41,"column":5}},"line":20},"2":{"name":"createJoinRequest","decl":{"start":{"line":43,"column":4},"end":{"line":51,"column":5}},"loc":{"start":{"line":43,"column":4},"end":{"line":51,"column":5}},"line":43},"3":{"name":"createValidJoinRequest","decl":{"start":{"line":53,"column":4},"end":{"line":83,"column":6}},"loc":{"start":{"line":53,"column":4},"end":{"line":83,"column":6}},"line":53},"4":{"name":"approveRequestAndAddStudentToClass","decl":{"start":{"line":85,"column":4},"end":{"line":96,"column":6}},"loc":{"start":{"line":85,"column":4},"end":{"line":96,"column":6}},"line":85},"5":{"name":"denyJoinRequest","decl":{"start":{"line":98,"column":4},"end":{"line":105,"column":6}},"loc":{"start":{"line":98,"column":4},"end":{"line":105,"column":6}},"line":98},"6":{"name":"getJoinRequestsByClass","decl":{"start":{"line":107,"column":4},"end":{"line":120,"column":5}},"loc":{"start":{"line":107,"column":4},"end":{"line":120,"column":5}},"line":107},"7":{"name":"handleError","decl":{"start":{"line":122,"column":19},"end":{"line":130,"column":5}},"loc":{"start":{"line":122,"column":19},"end":{"line":130,"column":5}},"line":122}},"f":{"0":7,"1":5,"2":4,"3":7,"4":4,"5":1,"6":2,"7":7}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/learningPathService.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/learningPathService.ts","all":false,"statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":48}},"19":{"start":{"line":20,"column":0},"end":{"line":20,"column":65}},"20":{"start":{"line":21,"column":0},"end":{"line":21,"column":10}},"21":{"start":{"line":22,"column":0},"end":{"line":22,"column":30}},"22":{"start":{"line":23,"column":0},"end":{"line":23,"column":34}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":40}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":34}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":46}},"26":{"start":{"line":27,"column":0},"end":{"line":27,"column":34}},"27":{"start":{"line":28,"column":0},"end":{"line":28,"column":41}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":51}},"29":{"start":{"line":30,"column":0},"end":{"line":30,"column":34}},"30":{"start":{"line":31,"column":0},"end":{"line":31,"column":43}},"31":{"start":{"line":32,"column":0},"end":{"line":32,"column":42}},"32":{"start":{"line":33,"column":0},"end":{"line":33,"column":4}},"33":{"start":{"line":34,"column":0},"end":{"line":34,"column":1}},"41":{"start":{"line":42,"column":0},"end":{"line":42,"column":42}},"42":{"start":{"line":43,"column":0},"end":{"line":43,"column":12}},"48":{"start":{"line":49,"column":0},"end":{"line":49,"column":8}},"49":{"start":{"line":50,"column":0},"end":{"line":50,"column":31}},"50":{"start":{"line":51,"column":0},"end":{"line":51,"column":7}},"52":{"start":{"line":53,"column":0},"end":{"line":53,"column":43}},"56":{"start":{"line":57,"column":0},"end":{"line":57,"column":61}},"57":{"start":{"line":58,"column":0},"end":{"line":58,"column":52}},"58":{"start":{"line":59,"column":0},"end":{"line":59,"column":52}},"59":{"start":{"line":60,"column":0},"end":{"line":60,"column":70}},"62":{"start":{"line":63,"column":0},"end":{"line":63,"column":36}},"64":{"start":{"line":65,"column":0},"end":{"line":65,"column":31}},"65":{"start":{"line":66,"column":0},"end":{"line":66,"column":5}},"68":{"start":{"line":69,"column":0},"end":{"line":69,"column":70}},"69":{"start":{"line":70,"column":0},"end":{"line":70,"column":13}},"70":{"start":{"line":71,"column":0},"end":{"line":71,"column":7}},"71":{"start":{"line":72,"column":0},"end":{"line":72,"column":60}},"74":{"start":{"line":75,"column":0},"end":{"line":75,"column":57}},"75":{"start":{"line":76,"column":0},"end":{"line":76,"column":19}},"76":{"start":{"line":77,"column":0},"end":{"line":77,"column":19}},"77":{"start":{"line":78,"column":0},"end":{"line":78,"column":58}},"78":{"start":{"line":79,"column":0},"end":{"line":79,"column":63}},"79":{"start":{"line":80,"column":0},"end":{"line":80,"column":3}},"80":{"start":{"line":81,"column":0},"end":{"line":81,"column":1}},"89":{"start":{"line":90,"column":0},"end":{"line":90,"column":49}},"90":{"start":{"line":91,"column":0},"end":{"line":91,"column":19}},"91":{"start":{"line":92,"column":0},"end":{"line":92,"column":36}},"92":{"start":{"line":93,"column":0},"end":{"line":93,"column":7}},"94":{"start":{"line":95,"column":0},"end":{"line":95,"column":31}},"95":{"start":{"line":96,"column":0},"end":{"line":96,"column":70}},"96":{"start":{"line":97,"column":0},"end":{"line":97,"column":13}},"97":{"start":{"line":98,"column":0},"end":{"line":98,"column":7}},"98":{"start":{"line":99,"column":0},"end":{"line":99,"column":35}},"101":{"start":{"line":102,"column":0},"end":{"line":102,"column":32}},"102":{"start":{"line":103,"column":0},"end":{"line":103,"column":65}},"103":{"start":{"line":104,"column":0},"end":{"line":104,"column":6}},"104":{"start":{"line":105,"column":0},"end":{"line":105,"column":28}},"106":{"start":{"line":107,"column":0},"end":{"line":107,"column":39}},"107":{"start":{"line":108,"column":0},"end":{"line":108,"column":19}},"108":{"start":{"line":109,"column":0},"end":{"line":109,"column":65}},"109":{"start":{"line":110,"column":0},"end":{"line":110,"column":16}},"110":{"start":{"line":111,"column":0},"end":{"line":111,"column":3}},"111":{"start":{"line":112,"column":0},"end":{"line":112,"column":1}}},"s":{"0":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"41":0,"42":0,"48":0,"49":0,"50":0,"52":0,"56":0,"57":0,"58":0,"59":0,"62":0,"64":0,"65":0,"68":0,"69":0,"70":0,"71":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"89":0,"90":0,"91":0,"92":0,"94":0,"95":0,"96":0,"97":0,"98":0,"101":0,"102":0,"103":0,"104":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0},"branchMap":{},"b":{},"fnMap":{"0":{"name":"mapDwengoPathToLocal","decl":{"start":{"line":20,"column":0},"end":{"line":34,"column":1}},"loc":{"start":{"line":20,"column":0},"end":{"line":34,"column":1}},"line":20},"1":{"name":"searchLearningPaths","decl":{"start":{"line":42,"column":0},"end":{"line":81,"column":1}},"loc":{"start":{"line":42,"column":0},"end":{"line":81,"column":1}},"line":42},"2":{"name":"getLearningPathByIdOrHruid","decl":{"start":{"line":90,"column":0},"end":{"line":112,"column":1}},"loc":{"start":{"line":90,"column":0},"end":{"line":112,"column":1}},"line":90}},"f":{"0":0,"1":0,"2":0}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/localDBLearningObjectService.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/localDBLearningObjectService.ts","all":false,"statementMap":{"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":62}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":34}},"11":{"start":{"line":12,"column":0},"end":{"line":12,"column":89}},"12":{"start":{"line":13,"column":0},"end":{"line":13,"column":10}},"13":{"start":{"line":14,"column":0},"end":{"line":14,"column":20}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":24}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":26}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":30}},"17":{"start":{"line":18,"column":0},"end":{"line":18,"column":32}},"18":{"start":{"line":19,"column":0},"end":{"line":19,"column":26}},"19":{"start":{"line":20,"column":0},"end":{"line":20,"column":38}},"20":{"start":{"line":21,"column":0},"end":{"line":21,"column":38}},"21":{"start":{"line":22,"column":0},"end":{"line":22,"column":32}},"22":{"start":{"line":23,"column":0},"end":{"line":23,"column":36}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":48}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":40}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":34}},"26":{"start":{"line":27,"column":0},"end":{"line":27,"column":30}},"27":{"start":{"line":28,"column":0},"end":{"line":28,"column":36}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":42}},"29":{"start":{"line":30,"column":0},"end":{"line":30,"column":34}},"30":{"start":{"line":31,"column":0},"end":{"line":31,"column":52}},"31":{"start":{"line":32,"column":0},"end":{"line":32,"column":48}},"32":{"start":{"line":33,"column":0},"end":{"line":33,"column":48}},"33":{"start":{"line":34,"column":0},"end":{"line":34,"column":20}},"34":{"start":{"line":35,"column":0},"end":{"line":35,"column":4}},"35":{"start":{"line":36,"column":0},"end":{"line":36,"column":1}},"41":{"start":{"line":42,"column":0},"end":{"line":42,"column":46}},"42":{"start":{"line":43,"column":0},"end":{"line":43,"column":20}},"43":{"start":{"line":44,"column":0},"end":{"line":44,"column":33}},"44":{"start":{"line":45,"column":0},"end":{"line":45,"column":31}},"45":{"start":{"line":46,"column":0},"end":{"line":46,"column":8}},"46":{"start":{"line":47,"column":0},"end":{"line":47,"column":51}},"48":{"start":{"line":49,"column":0},"end":{"line":49,"column":61}},"49":{"start":{"line":50,"column":0},"end":{"line":50,"column":23}},"50":{"start":{"line":51,"column":0},"end":{"line":51,"column":35}},"51":{"start":{"line":52,"column":0},"end":{"line":52,"column":5}},"53":{"start":{"line":54,"column":0},"end":{"line":54,"column":66}},"54":{"start":{"line":55,"column":0},"end":{"line":55,"column":1}},"59":{"start":{"line":60,"column":0},"end":{"line":60,"column":49}},"60":{"start":{"line":61,"column":0},"end":{"line":61,"column":13}},"61":{"start":{"line":62,"column":0},"end":{"line":62,"column":20}},"62":{"start":{"line":63,"column":0},"end":{"line":63,"column":38}},"63":{"start":{"line":64,"column":0},"end":{"line":64,"column":77}},"64":{"start":{"line":65,"column":0},"end":{"line":65,"column":29}},"66":{"start":{"line":67,"column":0},"end":{"line":67,"column":73}},"67":{"start":{"line":68,"column":0},"end":{"line":68,"column":16}},"68":{"start":{"line":69,"column":0},"end":{"line":69,"column":3}},"69":{"start":{"line":70,"column":0},"end":{"line":70,"column":44}},"70":{"start":{"line":71,"column":0},"end":{"line":71,"column":1}},"75":{"start":{"line":76,"column":0},"end":{"line":76,"column":49}},"76":{"start":{"line":77,"column":0},"end":{"line":77,"column":21}},"77":{"start":{"line":78,"column":0},"end":{"line":78,"column":20}},"78":{"start":{"line":79,"column":0},"end":{"line":79,"column":33}},"79":{"start":{"line":80,"column":0},"end":{"line":80,"column":28}},"80":{"start":{"line":81,"column":0},"end":{"line":81,"column":9}},"81":{"start":{"line":82,"column":0},"end":{"line":82,"column":63}},"82":{"start":{"line":83,"column":0},"end":{"line":83,"column":69}},"83":{"start":{"line":84,"column":0},"end":{"line":84,"column":40}},"84":{"start":{"line":85,"column":0},"end":{"line":85,"column":6}},"85":{"start":{"line":86,"column":0},"end":{"line":86,"column":4}},"87":{"start":{"line":88,"column":0},"end":{"line":88,"column":19}},"88":{"start":{"line":89,"column":0},"end":{"line":89,"column":73}},"89":{"start":{"line":90,"column":0},"end":{"line":90,"column":3}},"91":{"start":{"line":92,"column":0},"end":{"line":92,"column":61}},"92":{"start":{"line":93,"column":0},"end":{"line":93,"column":23}},"93":{"start":{"line":94,"column":0},"end":{"line":94,"column":35}},"94":{"start":{"line":95,"column":0},"end":{"line":95,"column":5}},"96":{"start":{"line":97,"column":0},"end":{"line":97,"column":66}},"97":{"start":{"line":98,"column":0},"end":{"line":98,"column":1}},"100":{"start":{"line":101,"column":0},"end":{"line":101,"column":63}},"101":{"start":{"line":102,"column":0},"end":{"line":102,"column":16}},"102":{"start":{"line":103,"column":0},"end":{"line":103,"column":19}},"103":{"start":{"line":104,"column":0},"end":{"line":104,"column":18}},"104":{"start":{"line":105,"column":0},"end":{"line":105,"column":20}},"105":{"start":{"line":106,"column":0},"end":{"line":106,"column":38}},"106":{"start":{"line":107,"column":0},"end":{"line":107,"column":59}},"110":{"start":{"line":111,"column":0},"end":{"line":111,"column":13}},"111":{"start":{"line":112,"column":0},"end":{"line":112,"column":13}},"112":{"start":{"line":113,"column":0},"end":{"line":113,"column":16}},"113":{"start":{"line":114,"column":0},"end":{"line":114,"column":15}},"114":{"start":{"line":115,"column":0},"end":{"line":115,"column":7}},"115":{"start":{"line":116,"column":0},"end":{"line":116,"column":6}},"117":{"start":{"line":118,"column":0},"end":{"line":118,"column":29}},"119":{"start":{"line":120,"column":0},"end":{"line":120,"column":73}},"120":{"start":{"line":121,"column":0},"end":{"line":121,"column":16}},"121":{"start":{"line":122,"column":0},"end":{"line":122,"column":3}},"122":{"start":{"line":123,"column":0},"end":{"line":123,"column":44}},"123":{"start":{"line":124,"column":0},"end":{"line":124,"column":1}}},"s":{"2":1,"5":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"48":0,"49":0,"50":0,"51":0,"53":0,"54":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"66":0,"67":0,"68":0,"69":0,"70":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"87":0,"88":0,"89":0,"91":0,"92":0,"93":0,"94":0,"96":0,"97":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"117":0,"119":0,"120":0,"121":0,"122":0,"123":0},"branchMap":{},"b":{},"fnMap":{"0":{"name":"mapLocalToDto","decl":{"start":{"line":12,"column":0},"end":{"line":36,"column":1}},"loc":{"start":{"line":12,"column":0},"end":{"line":36,"column":1}},"line":12},"1":{"name":"getLocalLearningObjects","decl":{"start":{"line":42,"column":0},"end":{"line":55,"column":1}},"loc":{"start":{"line":42,"column":0},"end":{"line":55,"column":1}},"line":42},"2":{"name":"getLocalLearningObjectById","decl":{"start":{"line":60,"column":0},"end":{"line":71,"column":1}},"loc":{"start":{"line":60,"column":0},"end":{"line":71,"column":1}},"line":60},"3":{"name":"searchLocalLearningObjects","decl":{"start":{"line":76,"column":0},"end":{"line":98,"column":1}},"loc":{"start":{"line":76,"column":0},"end":{"line":98,"column":1}},"line":76},"4":{"name":"getLocalLearningObjectByHruidLangVersion","decl":{"start":{"line":101,"column":0},"end":{"line":124,"column":1}},"loc":{"start":{"line":101,"column":0},"end":{"line":124,"column":1}},"line":101}},"f":{"0":0,"1":0,"2":0,"3":0,"4":0}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/localLearningObjectService.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/localLearningObjectService.ts","all":false,"statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":73}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":34}},"21":{"start":{"line":22,"column":0},"end":{"line":22,"column":49}},"26":{"start":{"line":27,"column":0},"end":{"line":27,"column":36}},"27":{"start":{"line":28,"column":0},"end":{"line":28,"column":22}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":33}},"29":{"start":{"line":30,"column":0},"end":{"line":30,"column":30}},"31":{"start":{"line":32,"column":0},"end":{"line":32,"column":41}},"32":{"start":{"line":33,"column":0},"end":{"line":33,"column":13}},"33":{"start":{"line":34,"column":0},"end":{"line":34,"column":59}},"34":{"start":{"line":35,"column":0},"end":{"line":35,"column":44}},"35":{"start":{"line":36,"column":0},"end":{"line":36,"column":26}},"36":{"start":{"line":37,"column":0},"end":{"line":37,"column":38}},"37":{"start":{"line":38,"column":0},"end":{"line":38,"column":38}},"38":{"start":{"line":39,"column":0},"end":{"line":39,"column":38}},"39":{"start":{"line":40,"column":0},"end":{"line":40,"column":42}},"40":{"start":{"line":41,"column":0},"end":{"line":41,"column":57}},"41":{"start":{"line":42,"column":0},"end":{"line":42,"column":46}},"42":{"start":{"line":43,"column":0},"end":{"line":43,"column":40}},"43":{"start":{"line":44,"column":0},"end":{"line":44,"column":48}},"44":{"start":{"line":45,"column":0},"end":{"line":45,"column":41}},"45":{"start":{"line":46,"column":0},"end":{"line":46,"column":47}},"46":{"start":{"line":47,"column":0},"end":{"line":47,"column":42}},"47":{"start":{"line":48,"column":0},"end":{"line":48,"column":52}},"48":{"start":{"line":49,"column":0},"end":{"line":49,"column":29}},"49":{"start":{"line":50,"column":0},"end":{"line":50,"column":8}},"50":{"start":{"line":51,"column":0},"end":{"line":51,"column":7}},"51":{"start":{"line":52,"column":0},"end":{"line":52,"column":3}},"57":{"start":{"line":58,"column":0},"end":{"line":58,"column":66}},"58":{"start":{"line":59,"column":0},"end":{"line":59,"column":58}},"59":{"start":{"line":60,"column":0},"end":{"line":60,"column":38}},"60":{"start":{"line":61,"column":0},"end":{"line":61,"column":37}},"61":{"start":{"line":62,"column":0},"end":{"line":62,"column":7}},"62":{"start":{"line":63,"column":0},"end":{"line":63,"column":19}},"63":{"start":{"line":64,"column":0},"end":{"line":64,"column":3}},"69":{"start":{"line":70,"column":0},"end":{"line":70,"column":50}},"70":{"start":{"line":71,"column":0},"end":{"line":71,"column":45}},"71":{"start":{"line":72,"column":0},"end":{"line":72,"column":20}},"72":{"start":{"line":73,"column":0},"end":{"line":73,"column":7}},"73":{"start":{"line":74,"column":0},"end":{"line":74,"column":3}},"79":{"start":{"line":80,"column":0},"end":{"line":80,"column":36}},"80":{"start":{"line":81,"column":0},"end":{"line":81,"column":15}},"81":{"start":{"line":82,"column":0},"end":{"line":82,"column":42}},"82":{"start":{"line":83,"column":0},"end":{"line":83,"column":5}},"84":{"start":{"line":85,"column":0},"end":{"line":85,"column":41}},"85":{"start":{"line":86,"column":0},"end":{"line":86,"column":20}},"86":{"start":{"line":87,"column":0},"end":{"line":87,"column":13}},"89":{"start":{"line":90,"column":0},"end":{"line":90,"column":26}},"90":{"start":{"line":91,"column":0},"end":{"line":91,"column":38}},"91":{"start":{"line":92,"column":0},"end":{"line":92,"column":38}},"92":{"start":{"line":93,"column":0},"end":{"line":93,"column":32}},"93":{"start":{"line":94,"column":0},"end":{"line":94,"column":36}},"94":{"start":{"line":95,"column":0},"end":{"line":95,"column":48}},"95":{"start":{"line":96,"column":0},"end":{"line":96,"column":40}},"96":{"start":{"line":97,"column":0},"end":{"line":97,"column":34}},"97":{"start":{"line":98,"column":0},"end":{"line":98,"column":30}},"98":{"start":{"line":99,"column":0},"end":{"line":99,"column":36}},"99":{"start":{"line":100,"column":0},"end":{"line":100,"column":42}},"100":{"start":{"line":101,"column":0},"end":{"line":101,"column":34}},"101":{"start":{"line":102,"column":0},"end":{"line":102,"column":46}},"102":{"start":{"line":103,"column":0},"end":{"line":103,"column":8}},"103":{"start":{"line":104,"column":0},"end":{"line":104,"column":7}},"104":{"start":{"line":105,"column":0},"end":{"line":105,"column":3}},"109":{"start":{"line":110,"column":0},"end":{"line":110,"column":49}},"110":{"start":{"line":111,"column":0},"end":{"line":111,"column":41}},"111":{"start":{"line":112,"column":0},"end":{"line":112,"column":20}},"112":{"start":{"line":113,"column":0},"end":{"line":113,"column":7}},"113":{"start":{"line":114,"column":0},"end":{"line":114,"column":3}},"114":{"start":{"line":115,"column":0},"end":{"line":115,"column":1}}},"s":{"0":1,"2":1,"21":1,"26":1,"27":10,"28":10,"29":10,"31":10,"32":10,"33":10,"34":10,"35":10,"36":10,"37":10,"38":10,"39":10,"40":10,"41":10,"42":10,"43":10,"44":10,"45":10,"46":10,"47":10,"48":10,"49":10,"50":10,"51":10,"57":1,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"69":1,"70":0,"71":0,"72":0,"73":0,"79":1,"80":0,"81":0,"82":0,"84":0,"85":0,"86":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"109":1,"110":0,"111":0,"112":0,"113":0,"114":1},"branchMap":{"0":{"type":"branch","line":27,"loc":{"start":{"line":27,"column":2},"end":{"line":52,"column":3}},"locations":[{"start":{"line":27,"column":2},"end":{"line":52,"column":3}}]}},"b":{"0":[10]},"fnMap":{"0":{"name":"createLearningObject","decl":{"start":{"line":27,"column":2},"end":{"line":52,"column":3}},"loc":{"start":{"line":27,"column":2},"end":{"line":52,"column":3}},"line":27},"1":{"name":"getAllLearningObjectsByTeacher","decl":{"start":{"line":58,"column":2},"end":{"line":64,"column":3}},"loc":{"start":{"line":58,"column":2},"end":{"line":64,"column":3}},"line":58},"2":{"name":"getLearningObjectById","decl":{"start":{"line":70,"column":2},"end":{"line":74,"column":3}},"loc":{"start":{"line":70,"column":2},"end":{"line":74,"column":3}},"line":70},"3":{"name":"updateLearningObject","decl":{"start":{"line":80,"column":2},"end":{"line":105,"column":3}},"loc":{"start":{"line":80,"column":2},"end":{"line":105,"column":3}},"line":80},"4":{"name":"deleteLearningObject","decl":{"start":{"line":110,"column":2},"end":{"line":114,"column":3}},"loc":{"start":{"line":110,"column":2},"end":{"line":114,"column":3}},"line":110}},"f":{"0":10,"1":0,"2":0,"3":0,"4":0}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/localLearningPathNodeService.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/localLearningPathNodeService.ts","all":false,"statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":64}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":48}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":34}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":36}},"27":{"start":{"line":28,"column":0},"end":{"line":28,"column":73}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":55}},"29":{"start":{"line":30,"column":0},"end":{"line":30,"column":28}},"30":{"start":{"line":31,"column":0},"end":{"line":31,"column":7}},"31":{"start":{"line":32,"column":0},"end":{"line":32,"column":16}},"32":{"start":{"line":33,"column":0},"end":{"line":33,"column":48}},"33":{"start":{"line":34,"column":0},"end":{"line":34,"column":5}},"34":{"start":{"line":35,"column":0},"end":{"line":35,"column":39}},"35":{"start":{"line":36,"column":0},"end":{"line":36,"column":67}},"36":{"start":{"line":37,"column":0},"end":{"line":37,"column":5}},"37":{"start":{"line":38,"column":0},"end":{"line":38,"column":3}},"42":{"start":{"line":43,"column":0},"end":{"line":43,"column":27}},"43":{"start":{"line":44,"column":0},"end":{"line":44,"column":22}},"44":{"start":{"line":45,"column":0},"end":{"line":45,"column":18}},"45":{"start":{"line":46,"column":0},"end":{"line":46,"column":34}},"46":{"start":{"line":47,"column":0},"end":{"line":47,"column":55}},"47":{"start":{"line":48,"column":0},"end":{"line":48,"column":45}},"48":{"start":{"line":49,"column":0},"end":{"line":49,"column":40}},"49":{"start":{"line":50,"column":0},"end":{"line":50,"column":36}},"50":{"start":{"line":51,"column":0},"end":{"line":51,"column":7}},"51":{"start":{"line":52,"column":0},"end":{"line":52,"column":3}},"58":{"start":{"line":59,"column":0},"end":{"line":59,"column":26}},"59":{"start":{"line":60,"column":0},"end":{"line":60,"column":22}},"60":{"start":{"line":61,"column":0},"end":{"line":61,"column":19}},"61":{"start":{"line":62,"column":0},"end":{"line":62,"column":18}},"62":{"start":{"line":63,"column":0},"end":{"line":63,"column":32}},"63":{"start":{"line":64,"column":0},"end":{"line":64,"column":55}},"66":{"start":{"line":67,"column":0},"end":{"line":67,"column":26}},"67":{"start":{"line":68,"column":0},"end":{"line":68,"column":10}},"68":{"start":{"line":69,"column":0},"end":{"line":69,"column":28}},"69":{"start":{"line":70,"column":0},"end":{"line":70,"column":31}},"70":{"start":{"line":71,"column":0},"end":{"line":71,"column":46}},"71":{"start":{"line":72,"column":0},"end":{"line":72,"column":9}},"72":{"start":{"line":73,"column":0},"end":{"line":73,"column":24}},"73":{"start":{"line":74,"column":0},"end":{"line":74,"column":77}},"74":{"start":{"line":75,"column":0},"end":{"line":75,"column":10}},"75":{"start":{"line":76,"column":0},"end":{"line":76,"column":7}},"76":{"start":{"line":77,"column":0},"end":{"line":77,"column":38}},"77":{"start":{"line":78,"column":0},"end":{"line":78,"column":25}},"78":{"start":{"line":79,"column":0},"end":{"line":79,"column":28}},"79":{"start":{"line":80,"column":0},"end":{"line":80,"column":26}},"80":{"start":{"line":81,"column":0},"end":{"line":81,"column":8}},"81":{"start":{"line":82,"column":0},"end":{"line":82,"column":12}},"82":{"start":{"line":83,"column":0},"end":{"line":83,"column":40}},"83":{"start":{"line":84,"column":0},"end":{"line":84,"column":72}},"84":{"start":{"line":85,"column":0},"end":{"line":85,"column":7}},"85":{"start":{"line":86,"column":0},"end":{"line":86,"column":65}},"86":{"start":{"line":87,"column":0},"end":{"line":87,"column":5}},"89":{"start":{"line":90,"column":0},"end":{"line":90,"column":60}},"91":{"start":{"line":92,"column":0},"end":{"line":92,"column":56}},"92":{"start":{"line":93,"column":0},"end":{"line":93,"column":15}},"93":{"start":{"line":94,"column":0},"end":{"line":94,"column":33}},"94":{"start":{"line":95,"column":0},"end":{"line":95,"column":38}},"96":{"start":{"line":97,"column":0},"end":{"line":97,"column":48}},"97":{"start":{"line":98,"column":0},"end":{"line":98,"column":23}},"98":{"start":{"line":99,"column":0},"end":{"line":99,"column":41}},"99":{"start":{"line":100,"column":0},"end":{"line":100,"column":70}},"100":{"start":{"line":101,"column":0},"end":{"line":101,"column":76}},"101":{"start":{"line":102,"column":0},"end":{"line":102,"column":74}},"103":{"start":{"line":104,"column":0},"end":{"line":104,"column":47}},"104":{"start":{"line":105,"column":0},"end":{"line":105,"column":10}},"105":{"start":{"line":106,"column":0},"end":{"line":106,"column":9}},"108":{"start":{"line":109,"column":0},"end":{"line":109,"column":53}},"109":{"start":{"line":110,"column":0},"end":{"line":110,"column":42}},"110":{"start":{"line":111,"column":0},"end":{"line":111,"column":9}},"111":{"start":{"line":112,"column":0},"end":{"line":112,"column":36}},"112":{"start":{"line":113,"column":0},"end":{"line":113,"column":30}},"113":{"start":{"line":114,"column":0},"end":{"line":114,"column":35}},"114":{"start":{"line":115,"column":0},"end":{"line":115,"column":9}},"116":{"start":{"line":117,"column":0},"end":{"line":117,"column":21}},"117":{"start":{"line":118,"column":0},"end":{"line":118,"column":7}},"119":{"start":{"line":120,"column":0},"end":{"line":120,"column":18}},"120":{"start":{"line":121,"column":0},"end":{"line":121,"column":3}},"127":{"start":{"line":128,"column":0},"end":{"line":128,"column":26}},"128":{"start":{"line":129,"column":0},"end":{"line":129,"column":22}},"129":{"start":{"line":130,"column":0},"end":{"line":130,"column":19}},"130":{"start":{"line":131,"column":0},"end":{"line":131,"column":19}},"131":{"start":{"line":132,"column":0},"end":{"line":132,"column":18}},"132":{"start":{"line":133,"column":0},"end":{"line":133,"column":32}},"133":{"start":{"line":134,"column":0},"end":{"line":134,"column":55}},"135":{"start":{"line":136,"column":0},"end":{"line":136,"column":59}},"136":{"start":{"line":137,"column":0},"end":{"line":137,"column":24}},"137":{"start":{"line":138,"column":0},"end":{"line":138,"column":7}},"138":{"start":{"line":139,"column":0},"end":{"line":139,"column":16}},"139":{"start":{"line":140,"column":0},"end":{"line":140,"column":45}},"140":{"start":{"line":141,"column":0},"end":{"line":141,"column":5}},"141":{"start":{"line":142,"column":0},"end":{"line":142,"column":41}},"142":{"start":{"line":143,"column":0},"end":{"line":143,"column":58}},"143":{"start":{"line":144,"column":0},"end":{"line":144,"column":5}},"146":{"start":{"line":147,"column":0},"end":{"line":147,"column":61}},"148":{"start":{"line":149,"column":0},"end":{"line":149,"column":62}},"149":{"start":{"line":150,"column":0},"end":{"line":150,"column":42}},"150":{"start":{"line":151,"column":0},"end":{"line":151,"column":48}},"151":{"start":{"line":152,"column":0},"end":{"line":152,"column":46}},"154":{"start":{"line":155,"column":0},"end":{"line":155,"column":40}},"156":{"start":{"line":157,"column":0},"end":{"line":157,"column":26}},"158":{"start":{"line":159,"column":0},"end":{"line":159,"column":12}},"159":{"start":{"line":160,"column":0},"end":{"line":160,"column":30}},"160":{"start":{"line":161,"column":0},"end":{"line":161,"column":33}},"161":{"start":{"line":162,"column":0},"end":{"line":162,"column":48}},"162":{"start":{"line":163,"column":0},"end":{"line":163,"column":11}},"163":{"start":{"line":164,"column":0},"end":{"line":164,"column":26}},"164":{"start":{"line":165,"column":0},"end":{"line":165,"column":79}},"165":{"start":{"line":166,"column":0},"end":{"line":166,"column":12}},"166":{"start":{"line":167,"column":0},"end":{"line":167,"column":9}},"167":{"start":{"line":168,"column":0},"end":{"line":168,"column":40}},"168":{"start":{"line":169,"column":0},"end":{"line":169,"column":27}},"169":{"start":{"line":170,"column":0},"end":{"line":170,"column":30}},"170":{"start":{"line":171,"column":0},"end":{"line":171,"column":28}},"171":{"start":{"line":172,"column":0},"end":{"line":172,"column":10}},"174":{"start":{"line":175,"column":0},"end":{"line":175,"column":42}},"175":{"start":{"line":176,"column":0},"end":{"line":176,"column":48}},"176":{"start":{"line":177,"column":0},"end":{"line":177,"column":46}},"179":{"start":{"line":180,"column":0},"end":{"line":180,"column":40}},"180":{"start":{"line":181,"column":0},"end":{"line":181,"column":14}},"182":{"start":{"line":183,"column":0},"end":{"line":183,"column":42}},"183":{"start":{"line":184,"column":0},"end":{"line":184,"column":74}},"184":{"start":{"line":185,"column":0},"end":{"line":185,"column":9}},"185":{"start":{"line":186,"column":0},"end":{"line":186,"column":67}},"187":{"start":{"line":188,"column":0},"end":{"line":188,"column":62}},"189":{"start":{"line":190,"column":0},"end":{"line":190,"column":30}},"190":{"start":{"line":191,"column":0},"end":{"line":191,"column":33}},"191":{"start":{"line":192,"column":0},"end":{"line":192,"column":32}},"192":{"start":{"line":193,"column":0},"end":{"line":193,"column":7}},"193":{"start":{"line":194,"column":0},"end":{"line":194,"column":12}},"195":{"start":{"line":196,"column":0},"end":{"line":196,"column":26}},"197":{"start":{"line":198,"column":0},"end":{"line":198,"column":24}},"198":{"start":{"line":199,"column":0},"end":{"line":199,"column":77}},"199":{"start":{"line":200,"column":0},"end":{"line":200,"column":23}},"200":{"start":{"line":201,"column":0},"end":{"line":201,"column":86}},"201":{"start":{"line":202,"column":0},"end":{"line":202,"column":22}},"202":{"start":{"line":203,"column":0},"end":{"line":203,"column":83}},"204":{"start":{"line":205,"column":0},"end":{"line":205,"column":12}},"205":{"start":{"line":206,"column":0},"end":{"line":206,"column":43}},"206":{"start":{"line":207,"column":0},"end":{"line":207,"column":46}},"207":{"start":{"line":208,"column":0},"end":{"line":208,"column":42}},"208":{"start":{"line":209,"column":0},"end":{"line":209,"column":11}},"210":{"start":{"line":211,"column":0},"end":{"line":211,"column":68}},"211":{"start":{"line":212,"column":0},"end":{"line":212,"column":54}},"212":{"start":{"line":213,"column":0},"end":{"line":213,"column":11}},"213":{"start":{"line":214,"column":0},"end":{"line":214,"column":69}},"214":{"start":{"line":215,"column":0},"end":{"line":215,"column":9}},"216":{"start":{"line":217,"column":0},"end":{"line":217,"column":34}},"217":{"start":{"line":218,"column":0},"end":{"line":218,"column":36}},"218":{"start":{"line":219,"column":0},"end":{"line":219,"column":34}},"219":{"start":{"line":220,"column":0},"end":{"line":220,"column":14}},"221":{"start":{"line":222,"column":0},"end":{"line":222,"column":55}},"223":{"start":{"line":224,"column":0},"end":{"line":224,"column":69}},"224":{"start":{"line":225,"column":0},"end":{"line":225,"column":64}},"225":{"start":{"line":226,"column":0},"end":{"line":226,"column":9}},"226":{"start":{"line":227,"column":0},"end":{"line":227,"column":7}},"227":{"start":{"line":228,"column":0},"end":{"line":228,"column":5}},"229":{"start":{"line":230,"column":0},"end":{"line":230,"column":62}},"230":{"start":{"line":231,"column":0},"end":{"line":231,"column":24}},"231":{"start":{"line":232,"column":0},"end":{"line":232,"column":13}},"232":{"start":{"line":233,"column":0},"end":{"line":233,"column":34}},"233":{"start":{"line":234,"column":0},"end":{"line":234,"column":44}},"234":{"start":{"line":235,"column":0},"end":{"line":235,"column":16}},"235":{"start":{"line":236,"column":0},"end":{"line":236,"column":45}},"236":{"start":{"line":237,"column":0},"end":{"line":237,"column":59}},"237":{"start":{"line":238,"column":0},"end":{"line":238,"column":65}},"238":{"start":{"line":239,"column":0},"end":{"line":239,"column":63}},"239":{"start":{"line":240,"column":0},"end":{"line":240,"column":55}},"240":{"start":{"line":241,"column":0},"end":{"line":241,"column":8}},"241":{"start":{"line":242,"column":0},"end":{"line":242,"column":7}},"244":{"start":{"line":245,"column":0},"end":{"line":245,"column":23}},"245":{"start":{"line":246,"column":0},"end":{"line":246,"column":3}},"253":{"start":{"line":254,"column":0},"end":{"line":254,"column":27}},"254":{"start":{"line":255,"column":0},"end":{"line":255,"column":22}},"255":{"start":{"line":256,"column":0},"end":{"line":256,"column":19}},"256":{"start":{"line":257,"column":0},"end":{"line":257,"column":18}},"257":{"start":{"line":258,"column":0},"end":{"line":258,"column":20}},"258":{"start":{"line":259,"column":0},"end":{"line":259,"column":55}},"260":{"start":{"line":261,"column":0},"end":{"line":261,"column":59}},"261":{"start":{"line":262,"column":0},"end":{"line":262,"column":24}},"262":{"start":{"line":263,"column":0},"end":{"line":263,"column":7}},"263":{"start":{"line":264,"column":0},"end":{"line":264,"column":16}},"264":{"start":{"line":265,"column":0},"end":{"line":265,"column":45}},"265":{"start":{"line":266,"column":0},"end":{"line":266,"column":5}},"266":{"start":{"line":267,"column":0},"end":{"line":267,"column":41}},"267":{"start":{"line":268,"column":0},"end":{"line":268,"column":58}},"268":{"start":{"line":269,"column":0},"end":{"line":269,"column":5}},"270":{"start":{"line":271,"column":0},"end":{"line":271,"column":45}},"272":{"start":{"line":273,"column":0},"end":{"line":273,"column":40}},"273":{"start":{"line":274,"column":0},"end":{"line":274,"column":26}},"274":{"start":{"line":275,"column":0},"end":{"line":275,"column":9}},"277":{"start":{"line":278,"column":0},"end":{"line":278,"column":53}},"278":{"start":{"line":279,"column":0},"end":{"line":279,"column":42}},"279":{"start":{"line":280,"column":0},"end":{"line":280,"column":9}},"280":{"start":{"line":281,"column":0},"end":{"line":281,"column":36}},"281":{"start":{"line":282,"column":0},"end":{"line":282,"column":30}},"282":{"start":{"line":283,"column":0},"end":{"line":283,"column":35}},"283":{"start":{"line":284,"column":0},"end":{"line":284,"column":9}},"284":{"start":{"line":285,"column":0},"end":{"line":285,"column":7}},"285":{"start":{"line":286,"column":0},"end":{"line":286,"column":3}},"292":{"start":{"line":293,"column":0},"end":{"line":293,"column":66}},"293":{"start":{"line":294,"column":0},"end":{"line":294,"column":59}},"294":{"start":{"line":295,"column":0},"end":{"line":295,"column":26}},"295":{"start":{"line":296,"column":0},"end":{"line":296,"column":7}},"296":{"start":{"line":297,"column":0},"end":{"line":297,"column":18}},"297":{"start":{"line":298,"column":0},"end":{"line":298,"column":68}},"298":{"start":{"line":299,"column":0},"end":{"line":299,"column":5}},"299":{"start":{"line":300,"column":0},"end":{"line":300,"column":3}},"306":{"start":{"line":307,"column":0},"end":{"line":307,"column":37}},"307":{"start":{"line":308,"column":0},"end":{"line":308,"column":18}},"308":{"start":{"line":309,"column":0},"end":{"line":309,"column":21}},"309":{"start":{"line":310,"column":0},"end":{"line":310,"column":19}},"310":{"start":{"line":311,"column":0},"end":{"line":311,"column":20}},"311":{"start":{"line":312,"column":0},"end":{"line":312,"column":9}},"312":{"start":{"line":313,"column":0},"end":{"line":313,"column":39}},"313":{"start":{"line":314,"column":0},"end":{"line":314,"column":96}},"314":{"start":{"line":315,"column":0},"end":{"line":315,"column":8}},"315":{"start":{"line":316,"column":0},"end":{"line":316,"column":23}},"316":{"start":{"line":317,"column":0},"end":{"line":317,"column":24}},"317":{"start":{"line":318,"column":0},"end":{"line":318,"column":103}},"318":{"start":{"line":319,"column":0},"end":{"line":319,"column":10}},"319":{"start":{"line":320,"column":0},"end":{"line":320,"column":7}},"320":{"start":{"line":321,"column":0},"end":{"line":321,"column":24}},"321":{"start":{"line":322,"column":0},"end":{"line":322,"column":41}},"322":{"start":{"line":323,"column":0},"end":{"line":323,"column":24}},"323":{"start":{"line":324,"column":0},"end":{"line":324,"column":97}},"324":{"start":{"line":325,"column":0},"end":{"line":325,"column":10}},"325":{"start":{"line":326,"column":0},"end":{"line":326,"column":14}},"326":{"start":{"line":327,"column":0},"end":{"line":327,"column":27}},"327":{"start":{"line":328,"column":0},"end":{"line":328,"column":24}},"328":{"start":{"line":329,"column":0},"end":{"line":329,"column":36}},"329":{"start":{"line":330,"column":0},"end":{"line":330,"column":62}},"330":{"start":{"line":331,"column":0},"end":{"line":331,"column":12}},"331":{"start":{"line":332,"column":0},"end":{"line":332,"column":10}},"332":{"start":{"line":333,"column":0},"end":{"line":333,"column":7}},"333":{"start":{"line":334,"column":0},"end":{"line":334,"column":5}},"334":{"start":{"line":335,"column":0},"end":{"line":335,"column":3}},"335":{"start":{"line":336,"column":0},"end":{"line":336,"column":1}},"337":{"start":{"line":338,"column":0},"end":{"line":338,"column":50}}},"s":{"0":1,"2":1,"4":1,"23":1,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"42":1,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"89":0,"91":0,"92":0,"93":0,"94":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"103":0,"104":0,"105":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"116":0,"117":0,"119":0,"120":0,"127":1,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"146":0,"148":0,"149":0,"150":0,"151":0,"154":0,"156":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"174":0,"175":0,"176":0,"179":0,"180":0,"182":0,"183":0,"184":0,"185":0,"187":0,"189":0,"190":0,"191":0,"192":0,"193":0,"195":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"204":0,"205":0,"206":0,"207":0,"208":0,"210":0,"211":0,"212":0,"213":0,"214":0,"216":0,"217":0,"218":0,"219":0,"221":0,"223":0,"224":0,"225":0,"226":0,"227":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"244":0,"245":0,"253":1,"254":0,"255":0,"256":0,"257":0,"258":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"270":0,"272":0,"273":0,"274":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"292":1,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"306":1,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":1,"337":1},"branchMap":{},"b":{},"fnMap":{"0":{"name":"checkTeacherOwnsPath","decl":{"start":{"line":28,"column":2},"end":{"line":38,"column":3}},"loc":{"start":{"line":28,"column":2},"end":{"line":38,"column":3}},"line":28},"1":{"name":"getAllNodesForPath","decl":{"start":{"line":43,"column":2},"end":{"line":52,"column":3}},"loc":{"start":{"line":43,"column":2},"end":{"line":52,"column":3}},"line":43},"2":{"name":"createNodeForPath","decl":{"start":{"line":59,"column":2},"end":{"line":121,"column":3}},"loc":{"start":{"line":59,"column":2},"end":{"line":121,"column":3}},"line":59},"3":{"name":"updateNodeForPath","decl":{"start":{"line":128,"column":2},"end":{"line":246,"column":3}},"loc":{"start":{"line":128,"column":2},"end":{"line":246,"column":3}},"line":128},"4":{"name":"deleteNodeFromPath","decl":{"start":{"line":254,"column":2},"end":{"line":286,"column":3}},"loc":{"start":{"line":254,"column":2},"end":{"line":286,"column":3}},"line":254},"5":{"name":"validateLocalObject","decl":{"start":{"line":293,"column":2},"end":{"line":300,"column":3}},"loc":{"start":{"line":293,"column":2},"end":{"line":300,"column":3}},"line":293},"6":{"name":"validateDwengoObject","decl":{"start":{"line":307,"column":2},"end":{"line":335,"column":3}},"loc":{"start":{"line":307,"column":2},"end":{"line":335,"column":3}},"line":307}},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/localLearningPathService.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/localLearningPathService.ts","all":false,"statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":60}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":34}},"11":{"start":{"line":12,"column":0},"end":{"line":12,"column":32}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":27}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":22}},"17":{"start":{"line":18,"column":0},"end":{"line":18,"column":41}},"18":{"start":{"line":19,"column":0},"end":{"line":19,"column":28}},"19":{"start":{"line":20,"column":0},"end":{"line":20,"column":54}},"20":{"start":{"line":21,"column":0},"end":{"line":21,"column":13}},"21":{"start":{"line":22,"column":0},"end":{"line":22,"column":26}},"22":{"start":{"line":23,"column":0},"end":{"line":23,"column":32}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":44}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":26}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":21}},"26":{"start":{"line":27,"column":0},"end":{"line":27,"column":26}},"27":{"start":{"line":28,"column":0},"end":{"line":28,"column":29}},"29":{"start":{"line":30,"column":0},"end":{"line":30,"column":72}},"30":{"start":{"line":31,"column":0},"end":{"line":31,"column":8}},"31":{"start":{"line":32,"column":0},"end":{"line":32,"column":7}},"32":{"start":{"line":33,"column":0},"end":{"line":33,"column":19}},"33":{"start":{"line":34,"column":0},"end":{"line":34,"column":3}},"35":{"start":{"line":36,"column":0},"end":{"line":36,"column":82}},"36":{"start":{"line":37,"column":0},"end":{"line":37,"column":41}},"37":{"start":{"line":38,"column":0},"end":{"line":38,"column":38}},"38":{"start":{"line":39,"column":0},"end":{"line":39,"column":37}},"39":{"start":{"line":40,"column":0},"end":{"line":40,"column":7}},"40":{"start":{"line":41,"column":0},"end":{"line":41,"column":3}},"42":{"start":{"line":43,"column":0},"end":{"line":43,"column":75}},"43":{"start":{"line":44,"column":0},"end":{"line":44,"column":43}},"44":{"start":{"line":45,"column":0},"end":{"line":45,"column":28}},"45":{"start":{"line":46,"column":0},"end":{"line":46,"column":7}},"46":{"start":{"line":47,"column":0},"end":{"line":47,"column":3}},"48":{"start":{"line":49,"column":0},"end":{"line":49,"column":96}},"49":{"start":{"line":50,"column":0},"end":{"line":50,"column":54}},"50":{"start":{"line":51,"column":0},"end":{"line":51,"column":28}},"51":{"start":{"line":52,"column":0},"end":{"line":52,"column":13}},"52":{"start":{"line":53,"column":0},"end":{"line":53,"column":26}},"53":{"start":{"line":54,"column":0},"end":{"line":54,"column":32}},"54":{"start":{"line":55,"column":0},"end":{"line":55,"column":38}},"55":{"start":{"line":56,"column":0},"end":{"line":56,"column":26}},"56":{"start":{"line":57,"column":0},"end":{"line":57,"column":8}},"57":{"start":{"line":58,"column":0},"end":{"line":58,"column":7}},"58":{"start":{"line":59,"column":0},"end":{"line":59,"column":19}},"59":{"start":{"line":60,"column":0},"end":{"line":60,"column":3}},"61":{"start":{"line":62,"column":0},"end":{"line":62,"column":59}},"62":{"start":{"line":63,"column":0},"end":{"line":63,"column":38}},"63":{"start":{"line":64,"column":0},"end":{"line":64,"column":28}},"64":{"start":{"line":65,"column":0},"end":{"line":65,"column":7}},"65":{"start":{"line":66,"column":0},"end":{"line":66,"column":3}},"70":{"start":{"line":71,"column":0},"end":{"line":71,"column":55}},"71":{"start":{"line":72,"column":0},"end":{"line":72,"column":55}},"72":{"start":{"line":73,"column":0},"end":{"line":73,"column":40}},"73":{"start":{"line":74,"column":0},"end":{"line":74,"column":7}},"74":{"start":{"line":75,"column":0},"end":{"line":75,"column":38}},"75":{"start":{"line":76,"column":0},"end":{"line":76,"column":28}},"76":{"start":{"line":77,"column":0},"end":{"line":77,"column":33}},"77":{"start":{"line":78,"column":0},"end":{"line":78,"column":7}},"78":{"start":{"line":79,"column":0},"end":{"line":79,"column":3}},"79":{"start":{"line":80,"column":0},"end":{"line":80,"column":1}},"81":{"start":{"line":82,"column":0},"end":{"line":82,"column":46}}},"s":{"0":1,"2":1,"11":1,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"29":0,"30":0,"31":0,"32":0,"33":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"42":1,"43":0,"44":0,"45":0,"46":0,"48":1,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"61":1,"62":0,"63":0,"64":0,"65":0,"70":1,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":1,"81":1},"branchMap":{},"b":{},"fnMap":{"0":{"name":"createLearningPath","decl":{"start":{"line":16,"column":2},"end":{"line":34,"column":3}},"loc":{"start":{"line":16,"column":2},"end":{"line":34,"column":3}},"line":16},"1":{"name":"getAllLearningPathsByTeacher","decl":{"start":{"line":36,"column":2},"end":{"line":41,"column":3}},"loc":{"start":{"line":36,"column":2},"end":{"line":41,"column":3}},"line":36},"2":{"name":"getLearningPathById","decl":{"start":{"line":43,"column":2},"end":{"line":47,"column":3}},"loc":{"start":{"line":43,"column":2},"end":{"line":47,"column":3}},"line":43},"3":{"name":"updateLearningPath","decl":{"start":{"line":49,"column":2},"end":{"line":60,"column":3}},"loc":{"start":{"line":49,"column":2},"end":{"line":60,"column":3}},"line":49},"4":{"name":"deleteLearningPath","decl":{"start":{"line":62,"column":2},"end":{"line":66,"column":3}},"loc":{"start":{"line":62,"column":2},"end":{"line":66,"column":3}},"line":62},"5":{"name":"updateNumNodes","decl":{"start":{"line":71,"column":2},"end":{"line":79,"column":3}},"loc":{"start":{"line":71,"column":2},"end":{"line":79,"column":3}},"line":71}},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/questionsService.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/questionsService.ts","all":false,"statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":9}},"10":{"start":{"line":11,"column":0},"end":{"line":11,"column":70}},"11":{"start":{"line":12,"column":0},"end":{"line":12,"column":66}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":34}},"31":{"start":{"line":32,"column":0},"end":{"line":32,"column":56}},"38":{"start":{"line":39,"column":0},"end":{"line":39,"column":38}},"40":{"start":{"line":41,"column":0},"end":{"line":41,"column":45}},"43":{"start":{"line":44,"column":0},"end":{"line":44,"column":59}},"44":{"start":{"line":45,"column":0},"end":{"line":45,"column":42}},"47":{"start":{"line":48,"column":0},"end":{"line":48,"column":48}},"48":{"start":{"line":49,"column":0},"end":{"line":49,"column":37}},"50":{"start":{"line":51,"column":0},"end":{"line":51,"column":27}},"52":{"start":{"line":53,"column":0},"end":{"line":53,"column":55}},"53":{"start":{"line":54,"column":0},"end":{"line":54,"column":62}},"54":{"start":{"line":55,"column":0},"end":{"line":55,"column":17}},"55":{"start":{"line":56,"column":0},"end":{"line":56,"column":10}},"57":{"start":{"line":58,"column":0},"end":{"line":58,"column":68}},"58":{"start":{"line":59,"column":0},"end":{"line":59,"column":17}},"59":{"start":{"line":60,"column":0},"end":{"line":60,"column":3}},"60":{"start":{"line":61,"column":0},"end":{"line":61,"column":1}},"62":{"start":{"line":63,"column":0},"end":{"line":63,"column":38}},"69":{"start":{"line":70,"column":0},"end":{"line":70,"column":48}},"70":{"start":{"line":71,"column":0},"end":{"line":71,"column":25}},"71":{"start":{"line":72,"column":0},"end":{"line":72,"column":19}},"72":{"start":{"line":73,"column":0},"end":{"line":73,"column":22}},"73":{"start":{"line":74,"column":0},"end":{"line":74,"column":18}},"74":{"start":{"line":75,"column":0},"end":{"line":75,"column":27}},"75":{"start":{"line":76,"column":0},"end":{"line":76,"column":23}},"76":{"start":{"line":77,"column":0},"end":{"line":77,"column":23}},"77":{"start":{"line":78,"column":0},"end":{"line":78,"column":22}},"78":{"start":{"line":79,"column":0},"end":{"line":79,"column":24}},"80":{"start":{"line":81,"column":0},"end":{"line":81,"column":59}},"81":{"start":{"line":82,"column":0},"end":{"line":82,"column":34}},"82":{"start":{"line":83,"column":0},"end":{"line":83,"column":7}},"83":{"start":{"line":84,"column":0},"end":{"line":84,"column":22}},"84":{"start":{"line":85,"column":0},"end":{"line":85,"column":55}},"85":{"start":{"line":86,"column":0},"end":{"line":86,"column":5}},"88":{"start":{"line":89,"column":0},"end":{"line":89,"column":47}},"89":{"start":{"line":90,"column":0},"end":{"line":90,"column":28}},"90":{"start":{"line":91,"column":0},"end":{"line":91,"column":16}},"91":{"start":{"line":92,"column":0},"end":{"line":92,"column":29}},"92":{"start":{"line":93,"column":0},"end":{"line":93,"column":23}},"93":{"start":{"line":94,"column":0},"end":{"line":94,"column":8}},"94":{"start":{"line":95,"column":0},"end":{"line":95,"column":7}},"95":{"start":{"line":96,"column":0},"end":{"line":96,"column":16}},"96":{"start":{"line":97,"column":0},"end":{"line":97,"column":55}},"97":{"start":{"line":98,"column":0},"end":{"line":98,"column":5}},"100":{"start":{"line":101,"column":0},"end":{"line":101,"column":84}},"101":{"start":{"line":102,"column":0},"end":{"line":102,"column":79}},"102":{"start":{"line":103,"column":0},"end":{"line":103,"column":5}},"105":{"start":{"line":106,"column":0},"end":{"line":106,"column":21}},"106":{"start":{"line":107,"column":0},"end":{"line":107,"column":76}},"107":{"start":{"line":108,"column":0},"end":{"line":108,"column":27}},"108":{"start":{"line":109,"column":0},"end":{"line":109,"column":67}},"109":{"start":{"line":110,"column":0},"end":{"line":110,"column":7}},"110":{"start":{"line":111,"column":0},"end":{"line":111,"column":5}},"113":{"start":{"line":114,"column":0},"end":{"line":114,"column":65}},"114":{"start":{"line":115,"column":0},"end":{"line":115,"column":42}},"115":{"start":{"line":116,"column":0},"end":{"line":116,"column":15}},"116":{"start":{"line":117,"column":0},"end":{"line":117,"column":16}},"117":{"start":{"line":118,"column":0},"end":{"line":118,"column":15}},"118":{"start":{"line":119,"column":0},"end":{"line":119,"column":23}},"119":{"start":{"line":120,"column":0},"end":{"line":120,"column":17}},"120":{"start":{"line":121,"column":0},"end":{"line":121,"column":31}},"121":{"start":{"line":122,"column":0},"end":{"line":122,"column":19}},"122":{"start":{"line":123,"column":0},"end":{"line":123,"column":10}},"123":{"start":{"line":124,"column":0},"end":{"line":124,"column":9}},"124":{"start":{"line":125,"column":0},"end":{"line":125,"column":39}},"125":{"start":{"line":126,"column":0},"end":{"line":126,"column":15}},"126":{"start":{"line":127,"column":0},"end":{"line":127,"column":27}},"127":{"start":{"line":128,"column":0},"end":{"line":128,"column":28}},"128":{"start":{"line":129,"column":0},"end":{"line":129,"column":31}},"129":{"start":{"line":130,"column":0},"end":{"line":130,"column":10}},"130":{"start":{"line":131,"column":0},"end":{"line":131,"column":9}},"131":{"start":{"line":132,"column":0},"end":{"line":132,"column":15}},"132":{"start":{"line":133,"column":0},"end":{"line":133,"column":7}},"134":{"start":{"line":135,"column":0},"end":{"line":135,"column":23}},"135":{"start":{"line":136,"column":0},"end":{"line":136,"column":3}},"140":{"start":{"line":141,"column":0},"end":{"line":141,"column":38}},"141":{"start":{"line":142,"column":0},"end":{"line":142,"column":25}},"142":{"start":{"line":143,"column":0},"end":{"line":143,"column":19}},"143":{"start":{"line":144,"column":0},"end":{"line":144,"column":22}},"144":{"start":{"line":145,"column":0},"end":{"line":145,"column":22}},"145":{"start":{"line":146,"column":0},"end":{"line":146,"column":18}},"146":{"start":{"line":147,"column":0},"end":{"line":147,"column":17}},"147":{"start":{"line":148,"column":0},"end":{"line":148,"column":24}},"148":{"start":{"line":149,"column":0},"end":{"line":149,"column":23}},"149":{"start":{"line":150,"column":0},"end":{"line":150,"column":35}},"150":{"start":{"line":151,"column":0},"end":{"line":151,"column":25}},"151":{"start":{"line":152,"column":0},"end":{"line":152,"column":28}},"152":{"start":{"line":153,"column":0},"end":{"line":153,"column":26}},"153":{"start":{"line":154,"column":0},"end":{"line":154,"column":32}},"155":{"start":{"line":156,"column":0},"end":{"line":156,"column":61}},"156":{"start":{"line":157,"column":0},"end":{"line":157,"column":19}},"157":{"start":{"line":158,"column":0},"end":{"line":158,"column":13}},"158":{"start":{"line":159,"column":0},"end":{"line":159,"column":16}},"159":{"start":{"line":160,"column":0},"end":{"line":160,"column":12}},"160":{"start":{"line":161,"column":0},"end":{"line":161,"column":11}},"161":{"start":{"line":162,"column":0},"end":{"line":162,"column":28}},"162":{"start":{"line":163,"column":0},"end":{"line":163,"column":35}},"163":{"start":{"line":164,"column":0},"end":{"line":164,"column":15}},"164":{"start":{"line":165,"column":0},"end":{"line":165,"column":6}},"167":{"start":{"line":168,"column":0},"end":{"line":168,"column":21}},"168":{"start":{"line":169,"column":0},"end":{"line":169,"column":69}},"169":{"start":{"line":170,"column":0},"end":{"line":170,"column":85}},"170":{"start":{"line":171,"column":0},"end":{"line":171,"column":7}},"171":{"start":{"line":172,"column":0},"end":{"line":172,"column":112}},"172":{"start":{"line":173,"column":0},"end":{"line":173,"column":12}},"173":{"start":{"line":174,"column":0},"end":{"line":174,"column":35}},"174":{"start":{"line":175,"column":0},"end":{"line":175,"column":89}},"175":{"start":{"line":176,"column":0},"end":{"line":176,"column":7}},"176":{"start":{"line":177,"column":0},"end":{"line":177,"column":90}},"177":{"start":{"line":178,"column":0},"end":{"line":178,"column":5}},"179":{"start":{"line":180,"column":0},"end":{"line":180,"column":43}},"180":{"start":{"line":181,"column":0},"end":{"line":181,"column":13}},"181":{"start":{"line":182,"column":0},"end":{"line":182,"column":36}},"182":{"start":{"line":183,"column":0},"end":{"line":183,"column":19}},"183":{"start":{"line":184,"column":0},"end":{"line":184,"column":78}},"184":{"start":{"line":185,"column":0},"end":{"line":185,"column":58}},"185":{"start":{"line":186,"column":0},"end":{"line":186,"column":64}},"186":{"start":{"line":187,"column":0},"end":{"line":187,"column":62}},"187":{"start":{"line":188,"column":0},"end":{"line":188,"column":8}},"188":{"start":{"line":189,"column":0},"end":{"line":189,"column":7}},"189":{"start":{"line":190,"column":0},"end":{"line":190,"column":3}},"194":{"start":{"line":195,"column":0},"end":{"line":195,"column":37}},"195":{"start":{"line":196,"column":0},"end":{"line":196,"column":25}},"196":{"start":{"line":197,"column":0},"end":{"line":197,"column":19}},"197":{"start":{"line":198,"column":0},"end":{"line":198,"column":22}},"198":{"start":{"line":199,"column":0},"end":{"line":199,"column":22}},"199":{"start":{"line":200,"column":0},"end":{"line":200,"column":18}},"200":{"start":{"line":201,"column":0},"end":{"line":201,"column":17}},"201":{"start":{"line":202,"column":0},"end":{"line":202,"column":24}},"202":{"start":{"line":203,"column":0},"end":{"line":203,"column":23}},"203":{"start":{"line":204,"column":0},"end":{"line":204,"column":20}},"204":{"start":{"line":205,"column":0},"end":{"line":205,"column":27}},"205":{"start":{"line":206,"column":0},"end":{"line":206,"column":31}},"207":{"start":{"line":208,"column":0},"end":{"line":208,"column":61}},"208":{"start":{"line":209,"column":0},"end":{"line":209,"column":19}},"209":{"start":{"line":210,"column":0},"end":{"line":210,"column":13}},"210":{"start":{"line":211,"column":0},"end":{"line":211,"column":16}},"211":{"start":{"line":212,"column":0},"end":{"line":212,"column":12}},"212":{"start":{"line":213,"column":0},"end":{"line":213,"column":11}},"213":{"start":{"line":214,"column":0},"end":{"line":214,"column":27}},"214":{"start":{"line":215,"column":0},"end":{"line":215,"column":32}},"215":{"start":{"line":216,"column":0},"end":{"line":216,"column":15}},"216":{"start":{"line":217,"column":0},"end":{"line":217,"column":6}},"219":{"start":{"line":220,"column":0},"end":{"line":220,"column":21}},"220":{"start":{"line":221,"column":0},"end":{"line":221,"column":28}},"221":{"start":{"line":222,"column":0},"end":{"line":222,"column":91}},"222":{"start":{"line":223,"column":0},"end":{"line":223,"column":7}},"223":{"start":{"line":224,"column":0},"end":{"line":224,"column":91}},"224":{"start":{"line":225,"column":0},"end":{"line":225,"column":12}},"225":{"start":{"line":226,"column":0},"end":{"line":226,"column":74}},"226":{"start":{"line":227,"column":0},"end":{"line":227,"column":5}},"228":{"start":{"line":229,"column":0},"end":{"line":229,"column":42}},"229":{"start":{"line":230,"column":0},"end":{"line":230,"column":13}},"230":{"start":{"line":231,"column":0},"end":{"line":231,"column":36}},"231":{"start":{"line":232,"column":0},"end":{"line":232,"column":16}},"232":{"start":{"line":233,"column":0},"end":{"line":233,"column":19}},"233":{"start":{"line":234,"column":0},"end":{"line":234,"column":8}},"234":{"start":{"line":235,"column":0},"end":{"line":235,"column":7}},"235":{"start":{"line":236,"column":0},"end":{"line":236,"column":3}},"240":{"start":{"line":241,"column":0},"end":{"line":241,"column":37}},"241":{"start":{"line":242,"column":0},"end":{"line":242,"column":23}},"242":{"start":{"line":243,"column":0},"end":{"line":243,"column":19}},"243":{"start":{"line":244,"column":0},"end":{"line":244,"column":16}},"244":{"start":{"line":245,"column":0},"end":{"line":245,"column":31}},"245":{"start":{"line":246,"column":0},"end":{"line":246,"column":23}},"246":{"start":{"line":247,"column":0},"end":{"line":247,"column":59}},"247":{"start":{"line":248,"column":0},"end":{"line":248,"column":5}},"248":{"start":{"line":249,"column":0},"end":{"line":249,"column":85}},"249":{"start":{"line":250,"column":0},"end":{"line":250,"column":20}},"250":{"start":{"line":251,"column":0},"end":{"line":251,"column":52}},"251":{"start":{"line":252,"column":0},"end":{"line":252,"column":5}},"253":{"start":{"line":254,"column":0},"end":{"line":254,"column":42}},"254":{"start":{"line":255,"column":0},"end":{"line":255,"column":13}},"255":{"start":{"line":256,"column":0},"end":{"line":256,"column":19}},"256":{"start":{"line":257,"column":0},"end":{"line":257,"column":15}},"257":{"start":{"line":258,"column":0},"end":{"line":258,"column":13}},"258":{"start":{"line":259,"column":0},"end":{"line":259,"column":8}},"259":{"start":{"line":260,"column":0},"end":{"line":260,"column":7}},"260":{"start":{"line":261,"column":0},"end":{"line":261,"column":3}},"265":{"start":{"line":266,"column":0},"end":{"line":266,"column":88}},"266":{"start":{"line":267,"column":0},"end":{"line":267,"column":27}},"267":{"start":{"line":268,"column":0},"end":{"line":268,"column":60}},"268":{"start":{"line":269,"column":0},"end":{"line":269,"column":5}},"269":{"start":{"line":270,"column":0},"end":{"line":270,"column":78}},"270":{"start":{"line":271,"column":0},"end":{"line":271,"column":13}},"271":{"start":{"line":272,"column":0},"end":{"line":272,"column":52}},"272":{"start":{"line":273,"column":0},"end":{"line":273,"column":5}},"273":{"start":{"line":274,"column":0},"end":{"line":274,"column":35}},"274":{"start":{"line":275,"column":0},"end":{"line":275,"column":32}},"275":{"start":{"line":276,"column":0},"end":{"line":276,"column":32}},"276":{"start":{"line":277,"column":0},"end":{"line":277,"column":7}},"277":{"start":{"line":278,"column":0},"end":{"line":278,"column":3}},"282":{"start":{"line":283,"column":0},"end":{"line":283,"column":108}},"283":{"start":{"line":284,"column":0},"end":{"line":284,"column":26}},"284":{"start":{"line":285,"column":0},"end":{"line":285,"column":59}},"285":{"start":{"line":286,"column":0},"end":{"line":286,"column":5}},"286":{"start":{"line":287,"column":0},"end":{"line":287,"column":94}},"287":{"start":{"line":288,"column":0},"end":{"line":288,"column":15}},"288":{"start":{"line":289,"column":0},"end":{"line":289,"column":59}},"289":{"start":{"line":290,"column":0},"end":{"line":290,"column":5}},"290":{"start":{"line":291,"column":0},"end":{"line":291,"column":42}},"291":{"start":{"line":292,"column":0},"end":{"line":292,"column":39}},"292":{"start":{"line":293,"column":0},"end":{"line":293,"column":30}},"293":{"start":{"line":294,"column":0},"end":{"line":294,"column":7}},"294":{"start":{"line":295,"column":0},"end":{"line":295,"column":3}},"300":{"start":{"line":301,"column":0},"end":{"line":301,"column":67}},"301":{"start":{"line":302,"column":0},"end":{"line":302,"column":55}},"302":{"start":{"line":303,"column":0},"end":{"line":303,"column":32}},"303":{"start":{"line":304,"column":0},"end":{"line":304,"column":16}},"304":{"start":{"line":305,"column":0},"end":{"line":305,"column":23}},"305":{"start":{"line":306,"column":0},"end":{"line":306,"column":22}},"306":{"start":{"line":307,"column":0},"end":{"line":307,"column":35}},"307":{"start":{"line":308,"column":0},"end":{"line":308,"column":8}},"308":{"start":{"line":309,"column":0},"end":{"line":309,"column":7}},"309":{"start":{"line":310,"column":0},"end":{"line":310,"column":20}},"310":{"start":{"line":311,"column":0},"end":{"line":311,"column":52}},"311":{"start":{"line":312,"column":0},"end":{"line":312,"column":5}},"312":{"start":{"line":313,"column":0},"end":{"line":313,"column":20}},"313":{"start":{"line":314,"column":0},"end":{"line":314,"column":3}},"319":{"start":{"line":320,"column":0},"end":{"line":320,"column":98}},"320":{"start":{"line":321,"column":0},"end":{"line":321,"column":50}},"321":{"start":{"line":322,"column":0},"end":{"line":322,"column":24}},"322":{"start":{"line":323,"column":0},"end":{"line":323,"column":16}},"323":{"start":{"line":324,"column":0},"end":{"line":324,"column":15}},"324":{"start":{"line":325,"column":0},"end":{"line":325,"column":20}},"325":{"start":{"line":326,"column":0},"end":{"line":326,"column":27}},"326":{"start":{"line":327,"column":0},"end":{"line":327,"column":54}},"327":{"start":{"line":328,"column":0},"end":{"line":328,"column":11}},"328":{"start":{"line":329,"column":0},"end":{"line":329,"column":10}},"329":{"start":{"line":330,"column":0},"end":{"line":330,"column":23}},"330":{"start":{"line":331,"column":0},"end":{"line":331,"column":22}},"331":{"start":{"line":332,"column":0},"end":{"line":332,"column":34}},"332":{"start":{"line":333,"column":0},"end":{"line":333,"column":8}},"333":{"start":{"line":334,"column":0},"end":{"line":334,"column":37}},"334":{"start":{"line":335,"column":0},"end":{"line":335,"column":7}},"335":{"start":{"line":336,"column":0},"end":{"line":336,"column":64}},"336":{"start":{"line":337,"column":0},"end":{"line":337,"column":3}},"341":{"start":{"line":342,"column":0},"end":{"line":342,"column":100}},"342":{"start":{"line":343,"column":0},"end":{"line":343,"column":50}},"343":{"start":{"line":344,"column":0},"end":{"line":344,"column":14}},"344":{"start":{"line":345,"column":0},"end":{"line":345,"column":26}},"345":{"start":{"line":346,"column":0},"end":{"line":346,"column":8}},"346":{"start":{"line":347,"column":0},"end":{"line":347,"column":16}},"347":{"start":{"line":348,"column":0},"end":{"line":348,"column":15}},"348":{"start":{"line":349,"column":0},"end":{"line":349,"column":20}},"349":{"start":{"line":350,"column":0},"end":{"line":350,"column":27}},"350":{"start":{"line":351,"column":0},"end":{"line":351,"column":54}},"351":{"start":{"line":352,"column":0},"end":{"line":352,"column":11}},"352":{"start":{"line":353,"column":0},"end":{"line":353,"column":10}},"353":{"start":{"line":354,"column":0},"end":{"line":354,"column":23}},"354":{"start":{"line":355,"column":0},"end":{"line":355,"column":22}},"355":{"start":{"line":356,"column":0},"end":{"line":356,"column":34}},"356":{"start":{"line":357,"column":0},"end":{"line":357,"column":8}},"357":{"start":{"line":358,"column":0},"end":{"line":358,"column":37}},"358":{"start":{"line":359,"column":0},"end":{"line":359,"column":7}},"359":{"start":{"line":360,"column":0},"end":{"line":360,"column":64}},"360":{"start":{"line":361,"column":0},"end":{"line":361,"column":3}},"365":{"start":{"line":366,"column":0},"end":{"line":366,"column":127}},"366":{"start":{"line":367,"column":0},"end":{"line":367,"column":50}},"367":{"start":{"line":368,"column":0},"end":{"line":368,"column":14}},"368":{"start":{"line":369,"column":0},"end":{"line":369,"column":21}},"369":{"start":{"line":370,"column":0},"end":{"line":370,"column":15}},"370":{"start":{"line":371,"column":0},"end":{"line":371,"column":18}},"371":{"start":{"line":372,"column":0},"end":{"line":372,"column":9}},"372":{"start":{"line":373,"column":0},"end":{"line":373,"column":8}},"373":{"start":{"line":374,"column":0},"end":{"line":374,"column":16}},"374":{"start":{"line":375,"column":0},"end":{"line":375,"column":15}},"375":{"start":{"line":376,"column":0},"end":{"line":376,"column":20}},"376":{"start":{"line":377,"column":0},"end":{"line":377,"column":27}},"377":{"start":{"line":378,"column":0},"end":{"line":378,"column":54}},"378":{"start":{"line":379,"column":0},"end":{"line":379,"column":11}},"379":{"start":{"line":380,"column":0},"end":{"line":380,"column":10}},"380":{"start":{"line":381,"column":0},"end":{"line":381,"column":23}},"381":{"start":{"line":382,"column":0},"end":{"line":382,"column":22}},"382":{"start":{"line":383,"column":0},"end":{"line":383,"column":34}},"383":{"start":{"line":384,"column":0},"end":{"line":384,"column":8}},"384":{"start":{"line":385,"column":0},"end":{"line":385,"column":37}},"385":{"start":{"line":386,"column":0},"end":{"line":386,"column":7}},"386":{"start":{"line":387,"column":0},"end":{"line":387,"column":64}},"387":{"start":{"line":388,"column":0},"end":{"line":388,"column":3}},"393":{"start":{"line":394,"column":0},"end":{"line":394,"column":84}},"394":{"start":{"line":395,"column":0},"end":{"line":395,"column":58}},"395":{"start":{"line":396,"column":0},"end":{"line":396,"column":44}},"396":{"start":{"line":397,"column":0},"end":{"line":397,"column":28}},"397":{"start":{"line":398,"column":0},"end":{"line":398,"column":36}},"398":{"start":{"line":399,"column":0},"end":{"line":399,"column":7}},"399":{"start":{"line":400,"column":0},"end":{"line":400,"column":3}},"404":{"start":{"line":405,"column":0},"end":{"line":405,"column":70}},"405":{"start":{"line":406,"column":0},"end":{"line":406,"column":85}},"406":{"start":{"line":407,"column":0},"end":{"line":407,"column":20}},"407":{"start":{"line":408,"column":0},"end":{"line":408,"column":52}},"408":{"start":{"line":409,"column":0},"end":{"line":409,"column":5}},"409":{"start":{"line":410,"column":0},"end":{"line":410,"column":65}},"410":{"start":{"line":411,"column":0},"end":{"line":411,"column":3}},"415":{"start":{"line":416,"column":0},"end":{"line":416,"column":91}},"416":{"start":{"line":417,"column":0},"end":{"line":417,"column":94}},"417":{"start":{"line":418,"column":0},"end":{"line":418,"column":15}},"418":{"start":{"line":419,"column":0},"end":{"line":419,"column":59}},"419":{"start":{"line":420,"column":0},"end":{"line":420,"column":5}},"420":{"start":{"line":421,"column":0},"end":{"line":421,"column":79}},"421":{"start":{"line":422,"column":0},"end":{"line":422,"column":3}},"422":{"start":{"line":423,"column":0},"end":{"line":423,"column":1}}},"s":{"0":1,"10":1,"11":1,"14":1,"31":0,"38":0,"40":0,"43":0,"44":0,"47":0,"48":0,"50":0,"52":0,"53":0,"54":0,"55":0,"57":0,"58":0,"59":0,"60":0,"62":1,"69":1,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"100":0,"101":0,"102":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"134":0,"135":0,"140":1,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"194":1,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"240":1,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"265":1,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"282":1,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"300":1,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"319":1,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"341":1,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"365":1,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"393":1,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"404":1,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"415":1,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":1},"branchMap":{},"b":{},"fnMap":{"0":{"name":"canUserSeeQuestionInList","decl":{"start":{"line":32,"column":0},"end":{"line":61,"column":1}},"loc":{"start":{"line":32,"column":0},"end":{"line":61,"column":1}},"line":32},"1":{"name":"createQuestionAndMessage","decl":{"start":{"line":70,"column":2},"end":{"line":136,"column":3}},"loc":{"start":{"line":70,"column":2},"end":{"line":136,"column":3}},"line":70},"2":{"name":"createQuestionSpecific","decl":{"start":{"line":141,"column":2},"end":{"line":190,"column":3}},"loc":{"start":{"line":141,"column":2},"end":{"line":190,"column":3}},"line":141},"3":{"name":"createQuestionGeneral","decl":{"start":{"line":195,"column":2},"end":{"line":236,"column":3}},"loc":{"start":{"line":195,"column":2},"end":{"line":236,"column":3}},"line":195},"4":{"name":"createQuestionMessage","decl":{"start":{"line":241,"column":2},"end":{"line":261,"column":3}},"loc":{"start":{"line":241,"column":2},"end":{"line":261,"column":3}},"line":241},"5":{"name":"updateQuestion","decl":{"start":{"line":266,"column":2},"end":{"line":278,"column":3}},"loc":{"start":{"line":266,"column":2},"end":{"line":278,"column":3}},"line":266},"6":{"name":"updateQuestionMessage","decl":{"start":{"line":283,"column":2},"end":{"line":295,"column":3}},"loc":{"start":{"line":283,"column":2},"end":{"line":295,"column":3}},"line":283},"7":{"name":"getQuestion","decl":{"start":{"line":301,"column":2},"end":{"line":314,"column":3}},"loc":{"start":{"line":301,"column":2},"end":{"line":314,"column":3}},"line":301},"8":{"name":"getQuestionsForTeam","decl":{"start":{"line":320,"column":2},"end":{"line":337,"column":3}},"loc":{"start":{"line":320,"column":2},"end":{"line":337,"column":3}},"line":320},"9":{"name":"getQuestionsForClass","decl":{"start":{"line":342,"column":2},"end":{"line":361,"column":3}},"loc":{"start":{"line":342,"column":2},"end":{"line":361,"column":3}},"line":342},"10":{"name":"getQuestionsForAssignment","decl":{"start":{"line":366,"column":2},"end":{"line":388,"column":3}},"loc":{"start":{"line":366,"column":2},"end":{"line":388,"column":3}},"line":366},"11":{"name":"getQuestionMessages","decl":{"start":{"line":394,"column":2},"end":{"line":400,"column":3}},"loc":{"start":{"line":394,"column":2},"end":{"line":400,"column":3}},"line":394},"12":{"name":"deleteQuestion","decl":{"start":{"line":405,"column":2},"end":{"line":411,"column":3}},"loc":{"start":{"line":405,"column":2},"end":{"line":411,"column":3}},"line":405},"13":{"name":"deleteQuestionMessage","decl":{"start":{"line":416,"column":2},"end":{"line":422,"column":3}},"loc":{"start":{"line":416,"column":2},"end":{"line":422,"column":3}},"line":416}},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/referenceValidationService.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/referenceValidationService.ts","all":false,"statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":46}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":48}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":34}},"10":{"start":{"line":11,"column":0},"end":{"line":11,"column":49}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":76}},"17":{"start":{"line":18,"column":0},"end":{"line":18,"column":55}},"18":{"start":{"line":19,"column":0},"end":{"line":19,"column":29}},"19":{"start":{"line":20,"column":0},"end":{"line":20,"column":7}},"20":{"start":{"line":21,"column":0},"end":{"line":21,"column":14}},"21":{"start":{"line":22,"column":0},"end":{"line":22,"column":71}},"22":{"start":{"line":23,"column":0},"end":{"line":23,"column":5}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":3}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":44}},"26":{"start":{"line":27,"column":0},"end":{"line":27,"column":18}},"27":{"start":{"line":28,"column":0},"end":{"line":28,"column":21}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":19}},"29":{"start":{"line":30,"column":0},"end":{"line":30,"column":20}},"31":{"start":{"line":32,"column":0},"end":{"line":32,"column":9}},"32":{"start":{"line":33,"column":0},"end":{"line":33,"column":39}},"33":{"start":{"line":34,"column":0},"end":{"line":34,"column":96}},"34":{"start":{"line":35,"column":0},"end":{"line":35,"column":8}},"35":{"start":{"line":36,"column":0},"end":{"line":36,"column":23}},"36":{"start":{"line":37,"column":0},"end":{"line":37,"column":24}},"37":{"start":{"line":38,"column":0},"end":{"line":38,"column":108}},"38":{"start":{"line":39,"column":0},"end":{"line":39,"column":10}},"39":{"start":{"line":40,"column":0},"end":{"line":40,"column":7}},"40":{"start":{"line":41,"column":0},"end":{"line":41,"column":24}},"41":{"start":{"line":42,"column":0},"end":{"line":42,"column":41}},"42":{"start":{"line":43,"column":0},"end":{"line":43,"column":24}},"43":{"start":{"line":44,"column":0},"end":{"line":44,"column":105}},"44":{"start":{"line":45,"column":0},"end":{"line":45,"column":10}},"45":{"start":{"line":46,"column":0},"end":{"line":46,"column":7}},"46":{"start":{"line":47,"column":0},"end":{"line":47,"column":63}},"47":{"start":{"line":48,"column":0},"end":{"line":48,"column":5}},"48":{"start":{"line":49,"column":0},"end":{"line":49,"column":3}},"54":{"start":{"line":55,"column":0},"end":{"line":55,"column":38}},"55":{"start":{"line":56,"column":0},"end":{"line":56,"column":24}},"56":{"start":{"line":57,"column":0},"end":{"line":57,"column":21}},"57":{"start":{"line":58,"column":0},"end":{"line":58,"column":19}},"58":{"start":{"line":59,"column":0},"end":{"line":59,"column":22}},"59":{"start":{"line":60,"column":0},"end":{"line":60,"column":20}},"60":{"start":{"line":61,"column":0},"end":{"line":61,"column":20}},"61":{"start":{"line":62,"column":0},"end":{"line":62,"column":21}},"62":{"start":{"line":63,"column":0},"end":{"line":63,"column":51}},"63":{"start":{"line":64,"column":0},"end":{"line":64,"column":90}},"64":{"start":{"line":65,"column":0},"end":{"line":65,"column":7}},"65":{"start":{"line":66,"column":0},"end":{"line":66,"column":72}},"66":{"start":{"line":67,"column":0},"end":{"line":67,"column":12}},"67":{"start":{"line":68,"column":0},"end":{"line":68,"column":21}},"68":{"start":{"line":69,"column":0},"end":{"line":69,"column":81}},"69":{"start":{"line":70,"column":0},"end":{"line":70,"column":7}},"70":{"start":{"line":71,"column":0},"end":{"line":71,"column":54}},"71":{"start":{"line":72,"column":0},"end":{"line":72,"column":5}},"72":{"start":{"line":73,"column":0},"end":{"line":73,"column":3}},"79":{"start":{"line":80,"column":0},"end":{"line":80,"column":74}},"80":{"start":{"line":81,"column":0},"end":{"line":81,"column":53}},"81":{"start":{"line":82,"column":0},"end":{"line":82,"column":29}},"82":{"start":{"line":83,"column":0},"end":{"line":83,"column":7}},"83":{"start":{"line":84,"column":0},"end":{"line":84,"column":14}},"84":{"start":{"line":85,"column":0},"end":{"line":85,"column":68}},"85":{"start":{"line":86,"column":0},"end":{"line":86,"column":5}},"86":{"start":{"line":87,"column":0},"end":{"line":87,"column":3}},"88":{"start":{"line":89,"column":0},"end":{"line":89,"column":91}},"91":{"start":{"line":92,"column":0},"end":{"line":92,"column":9}},"92":{"start":{"line":93,"column":0},"end":{"line":93,"column":39}},"93":{"start":{"line":94,"column":0},"end":{"line":94,"column":70}},"94":{"start":{"line":95,"column":0},"end":{"line":95,"column":8}},"95":{"start":{"line":96,"column":0},"end":{"line":96,"column":78}},"96":{"start":{"line":97,"column":0},"end":{"line":97,"column":24}},"97":{"start":{"line":98,"column":0},"end":{"line":98,"column":93}},"98":{"start":{"line":99,"column":0},"end":{"line":99,"column":10}},"99":{"start":{"line":100,"column":0},"end":{"line":100,"column":7}},"101":{"start":{"line":102,"column":0},"end":{"line":102,"column":24}},"102":{"start":{"line":103,"column":0},"end":{"line":103,"column":71}},"103":{"start":{"line":104,"column":0},"end":{"line":104,"column":5}},"104":{"start":{"line":105,"column":0},"end":{"line":105,"column":3}},"109":{"start":{"line":110,"column":0},"end":{"line":110,"column":36}},"110":{"start":{"line":111,"column":0},"end":{"line":111,"column":24}},"111":{"start":{"line":112,"column":0},"end":{"line":112,"column":21}},"112":{"start":{"line":113,"column":0},"end":{"line":113,"column":19}},"113":{"start":{"line":114,"column":0},"end":{"line":114,"column":21}},"114":{"start":{"line":115,"column":0},"end":{"line":115,"column":20}},"115":{"start":{"line":116,"column":0},"end":{"line":116,"column":21}},"116":{"start":{"line":117,"column":0},"end":{"line":117,"column":32}},"117":{"start":{"line":118,"column":0},"end":{"line":118,"column":79}},"118":{"start":{"line":119,"column":0},"end":{"line":119,"column":7}},"119":{"start":{"line":120,"column":0},"end":{"line":120,"column":61}},"120":{"start":{"line":121,"column":0},"end":{"line":121,"column":12}},"121":{"start":{"line":122,"column":0},"end":{"line":122,"column":21}},"122":{"start":{"line":123,"column":0},"end":{"line":123,"column":78}},"123":{"start":{"line":124,"column":0},"end":{"line":124,"column":7}},"124":{"start":{"line":125,"column":0},"end":{"line":125,"column":52}},"125":{"start":{"line":126,"column":0},"end":{"line":126,"column":5}},"126":{"start":{"line":127,"column":0},"end":{"line":127,"column":3}},"127":{"start":{"line":128,"column":0},"end":{"line":128,"column":1}}},"s":{"0":1,"1":1,"3":1,"10":1,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"25":1,"26":0,"27":0,"28":0,"29":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"54":1,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"79":1,"80":3,"81":3,"82":3,"83":3,"84":0,"85":0,"86":3,"88":1,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"101":0,"102":0,"103":0,"104":0,"109":1,"110":4,"111":4,"112":4,"113":4,"114":4,"115":4,"116":0,"117":0,"118":0,"119":0,"120":4,"121":4,"122":1,"123":1,"124":3,"125":3,"126":4,"127":1},"branchMap":{"0":{"type":"branch","line":80,"loc":{"start":{"line":80,"column":2},"end":{"line":87,"column":3}},"locations":[{"start":{"line":80,"column":2},"end":{"line":87,"column":3}}]},"1":{"type":"branch","line":84,"loc":{"start":{"line":84,"column":13},"end":{"line":86,"column":5}},"locations":[{"start":{"line":84,"column":13},"end":{"line":86,"column":5}}]},"2":{"type":"branch","line":110,"loc":{"start":{"line":110,"column":2},"end":{"line":127,"column":3}},"locations":[{"start":{"line":110,"column":2},"end":{"line":127,"column":3}}]},"3":{"type":"branch","line":116,"loc":{"start":{"line":116,"column":20},"end":{"line":121,"column":11}},"locations":[{"start":{"line":116,"column":20},"end":{"line":121,"column":11}}]},"4":{"type":"branch","line":122,"loc":{"start":{"line":122,"column":20},"end":{"line":124,"column":7}},"locations":[{"start":{"line":122,"column":20},"end":{"line":124,"column":7}}]},"5":{"type":"branch","line":124,"loc":{"start":{"line":124,"column":6},"end":{"line":126,"column":5}},"locations":[{"start":{"line":124,"column":6},"end":{"line":126,"column":5}}]}},"b":{"0":[3],"1":[0],"2":[4],"3":[0],"4":[1],"5":[3]},"fnMap":{"0":{"name":"validateLocalLearningObject","decl":{"start":{"line":17,"column":2},"end":{"line":24,"column":3}},"loc":{"start":{"line":17,"column":2},"end":{"line":24,"column":3}},"line":17},"1":{"name":"validateDwengoLearningObject","decl":{"start":{"line":26,"column":2},"end":{"line":49,"column":3}},"loc":{"start":{"line":26,"column":2},"end":{"line":49,"column":3}},"line":26},"2":{"name":"validateLearningObject","decl":{"start":{"line":55,"column":2},"end":{"line":73,"column":3}},"loc":{"start":{"line":55,"column":2},"end":{"line":73,"column":3}},"line":55},"3":{"name":"validateLocalLearningPath","decl":{"start":{"line":80,"column":2},"end":{"line":87,"column":3}},"loc":{"start":{"line":80,"column":2},"end":{"line":87,"column":3}},"line":80},"4":{"name":"validateDwengoLearningPath","decl":{"start":{"line":89,"column":2},"end":{"line":105,"column":3}},"loc":{"start":{"line":89,"column":2},"end":{"line":105,"column":3}},"line":89},"5":{"name":"validateLearningPath","decl":{"start":{"line":110,"column":2},"end":{"line":127,"column":3}},"loc":{"start":{"line":110,"column":2},"end":{"line":127,"column":3}},"line":110}},"f":{"0":0,"1":0,"2":0,"3":3,"4":0,"5":4}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/studentAssignmentService.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/studentAssignmentService.ts","all":false,"statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":58}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":34}},"11":{"start":{"line":12,"column":0},"end":{"line":12,"column":47}},"12":{"start":{"line":13,"column":0},"end":{"line":13,"column":20}},"13":{"start":{"line":14,"column":0},"end":{"line":14,"column":23}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":24}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":15}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":29}},"17":{"start":{"line":18,"column":0},"end":{"line":18,"column":37}},"18":{"start":{"line":19,"column":0},"end":{"line":19,"column":12}},"19":{"start":{"line":20,"column":0},"end":{"line":20,"column":25}},"20":{"start":{"line":21,"column":0},"end":{"line":21,"column":15}},"21":{"start":{"line":22,"column":0},"end":{"line":22,"column":18}},"22":{"start":{"line":23,"column":0},"end":{"line":23,"column":25}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":21}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":37}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":16}},"26":{"start":{"line":27,"column":0},"end":{"line":27,"column":14}},"27":{"start":{"line":28,"column":0},"end":{"line":28,"column":12}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":10}},"29":{"start":{"line":30,"column":0},"end":{"line":30,"column":8}},"30":{"start":{"line":31,"column":0},"end":{"line":31,"column":6}},"31":{"start":{"line":32,"column":0},"end":{"line":32,"column":69}},"32":{"start":{"line":33,"column":0},"end":{"line":33,"column":16}},"34":{"start":{"line":35,"column":0},"end":{"line":35,"column":5}},"35":{"start":{"line":36,"column":0},"end":{"line":36,"column":2}}},"s":{"0":1,"2":1,"11":1,"12":14,"13":14,"14":14,"15":14,"16":14,"17":14,"18":14,"19":14,"20":14,"21":14,"22":14,"23":14,"24":14,"25":14,"26":14,"27":14,"28":14,"29":14,"30":14,"31":14,"32":14,"34":14,"35":14},"branchMap":{"0":{"type":"branch","line":12,"loc":{"start":{"line":12,"column":40},"end":{"line":36,"column":2}},"locations":[{"start":{"line":12,"column":40},"end":{"line":36,"column":2}}]},"1":{"type":"branch","line":32,"loc":{"start":{"line":32,"column":28},"end":{"line":32,"column":67}},"locations":[{"start":{"line":32,"column":28},"end":{"line":32,"column":67}}]}},"b":{"0":[14],"1":[14]},"fnMap":{"0":{"name":"getAssignmentsForStudent","decl":{"start":{"line":12,"column":40},"end":{"line":36,"column":2}},"loc":{"start":{"line":12,"column":40},"end":{"line":36,"column":2}},"line":12}},"f":{"0":14}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/studentService.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/studentService.ts","all":false,"statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":59}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":34}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":37}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":87}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":49}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":36}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":22}},"9":{"start":{"line":10,"column":0},"end":{"line":10,"column":26}},"10":{"start":{"line":11,"column":0},"end":{"line":11,"column":14}},"11":{"start":{"line":12,"column":0},"end":{"line":12,"column":11}},"12":{"start":{"line":13,"column":0},"end":{"line":13,"column":5}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":74}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":65}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":35}},"17":{"start":{"line":18,"column":0},"end":{"line":18,"column":91}},"18":{"start":{"line":19,"column":0},"end":{"line":19,"column":11}},"20":{"start":{"line":21,"column":0},"end":{"line":21,"column":33}},"21":{"start":{"line":22,"column":0},"end":{"line":22,"column":67}},"22":{"start":{"line":23,"column":0},"end":{"line":23,"column":9}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":66}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":6}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":104}},"29":{"start":{"line":30,"column":0},"end":{"line":30,"column":40}},"30":{"start":{"line":31,"column":0},"end":{"line":31,"column":20}},"31":{"start":{"line":32,"column":0},"end":{"line":32,"column":23}},"32":{"start":{"line":33,"column":0},"end":{"line":33,"column":27}},"33":{"start":{"line":34,"column":0},"end":{"line":34,"column":35}},"34":{"start":{"line":35,"column":0},"end":{"line":35,"column":41}},"35":{"start":{"line":36,"column":0},"end":{"line":36,"column":54}},"36":{"start":{"line":37,"column":0},"end":{"line":37,"column":25}},"37":{"start":{"line":38,"column":0},"end":{"line":38,"column":21}},"38":{"start":{"line":39,"column":0},"end":{"line":39,"column":17}},"39":{"start":{"line":40,"column":0},"end":{"line":40,"column":14}},"40":{"start":{"line":41,"column":0},"end":{"line":41,"column":22}},"41":{"start":{"line":42,"column":0},"end":{"line":42,"column":26}},"42":{"start":{"line":43,"column":0},"end":{"line":43,"column":13}},"43":{"start":{"line":44,"column":0},"end":{"line":44,"column":11}},"44":{"start":{"line":45,"column":0},"end":{"line":45,"column":6}},"45":{"start":{"line":46,"column":0},"end":{"line":46,"column":1}}},"s":{"0":1,"2":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"14":1,"15":0,"16":0,"17":0,"18":0,"20":0,"21":0,"22":0,"24":0,"25":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1},"branchMap":{},"b":{},"fnMap":{"0":{"name":"findStudentById","decl":{"start":{"line":6,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":6,"column":4},"end":{"line":13,"column":5}},"line":6},"1":{"name":"getStudentsByClass","decl":{"start":{"line":15,"column":4},"end":{"line":26,"column":6}},"loc":{"start":{"line":15,"column":4},"end":{"line":26,"column":6}},"line":15},"2":{"name":"getStudentsByTeamAssignment","decl":{"start":{"line":29,"column":4},"end":{"line":45,"column":6}},"loc":{"start":{"line":29,"column":4},"end":{"line":45,"column":6}},"line":29}},"f":{"0":0,"1":0,"2":0}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/studentTeamService.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/studentTeamService.ts","all":false,"statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":50}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":34}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":41}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":70}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":37}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":20}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":27}},"9":{"start":{"line":10,"column":0},"end":{"line":10,"column":45}},"10":{"start":{"line":11,"column":0},"end":{"line":11,"column":17}},"11":{"start":{"line":12,"column":0},"end":{"line":12,"column":14}},"12":{"start":{"line":13,"column":0},"end":{"line":13,"column":22}},"13":{"start":{"line":14,"column":0},"end":{"line":14,"column":33}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":30}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":41}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":22}},"17":{"start":{"line":18,"column":0},"end":{"line":18,"column":18}},"18":{"start":{"line":19,"column":0},"end":{"line":19,"column":14}},"19":{"start":{"line":20,"column":0},"end":{"line":20,"column":11}},"20":{"start":{"line":21,"column":0},"end":{"line":21,"column":6}},"22":{"start":{"line":23,"column":0},"end":{"line":23,"column":67}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":38}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":20}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":27}},"26":{"start":{"line":27,"column":0},"end":{"line":27,"column":45}},"27":{"start":{"line":28,"column":0},"end":{"line":28,"column":18}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":33}},"29":{"start":{"line":30,"column":0},"end":{"line":30,"column":47}},"30":{"start":{"line":31,"column":0},"end":{"line":31,"column":17}},"31":{"start":{"line":32,"column":0},"end":{"line":32,"column":14}},"32":{"start":{"line":33,"column":0},"end":{"line":33,"column":22}},"33":{"start":{"line":34,"column":0},"end":{"line":34,"column":27}},"34":{"start":{"line":35,"column":0},"end":{"line":35,"column":29}},"35":{"start":{"line":36,"column":0},"end":{"line":36,"column":37}},"36":{"start":{"line":37,"column":0},"end":{"line":37,"column":96}},"37":{"start":{"line":38,"column":0},"end":{"line":38,"column":21}},"38":{"start":{"line":39,"column":0},"end":{"line":39,"column":18}},"39":{"start":{"line":40,"column":0},"end":{"line":40,"column":33}},"40":{"start":{"line":41,"column":0},"end":{"line":41,"column":30}},"41":{"start":{"line":42,"column":0},"end":{"line":42,"column":41}},"42":{"start":{"line":43,"column":0},"end":{"line":43,"column":22}},"43":{"start":{"line":44,"column":0},"end":{"line":44,"column":18}},"44":{"start":{"line":45,"column":0},"end":{"line":45,"column":14}},"45":{"start":{"line":46,"column":0},"end":{"line":46,"column":11}},"46":{"start":{"line":47,"column":0},"end":{"line":47,"column":5}},"48":{"start":{"line":49,"column":0},"end":{"line":49,"column":46}},"49":{"start":{"line":50,"column":0},"end":{"line":50,"column":39}},"50":{"start":{"line":51,"column":0},"end":{"line":51,"column":32}},"51":{"start":{"line":52,"column":0},"end":{"line":52,"column":22}},"52":{"start":{"line":53,"column":0},"end":{"line":53,"column":27}},"53":{"start":{"line":54,"column":0},"end":{"line":54,"column":29}},"54":{"start":{"line":55,"column":0},"end":{"line":55,"column":37}},"55":{"start":{"line":56,"column":0},"end":{"line":56,"column":96}},"56":{"start":{"line":57,"column":0},"end":{"line":57,"column":21}},"57":{"start":{"line":58,"column":0},"end":{"line":58,"column":17}},"58":{"start":{"line":59,"column":0},"end":{"line":59,"column":13}},"59":{"start":{"line":60,"column":0},"end":{"line":60,"column":11}},"60":{"start":{"line":61,"column":0},"end":{"line":61,"column":5}},"61":{"start":{"line":62,"column":0},"end":{"line":62,"column":1}}},"s":{"0":1,"2":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"48":1,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":1},"branchMap":{},"b":{},"fnMap":{"0":{"name":"getStudentTeams","decl":{"start":{"line":6,"column":4},"end":{"line":21,"column":6}},"loc":{"start":{"line":6,"column":4},"end":{"line":21,"column":6}},"line":6},"1":{"name":"getTeam","decl":{"start":{"line":23,"column":4},"end":{"line":47,"column":5}},"loc":{"start":{"line":23,"column":4},"end":{"line":47,"column":5}},"line":23},"2":{"name":"getTeamById","decl":{"start":{"line":49,"column":4},"end":{"line":61,"column":5}},"loc":{"start":{"line":49,"column":4},"end":{"line":61,"column":5}},"line":49}},"f":{"0":0,"1":0,"2":0}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/submissionService.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/submissionService.ts","all":false,"statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":58}},"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":52}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":34}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":40}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":32}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":22}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":25}},"9":{"start":{"line":10,"column":0},"end":{"line":10,"column":24}},"10":{"start":{"line":11,"column":0},"end":{"line":11,"column":26}},"13":{"start":{"line":14,"column":0},"end":{"line":14,"column":67}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":14}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":19}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":17}},"17":{"start":{"line":18,"column":0},"end":{"line":18,"column":30}},"18":{"start":{"line":19,"column":0},"end":{"line":19,"column":12}},"19":{"start":{"line":20,"column":0},"end":{"line":20,"column":10}},"20":{"start":{"line":21,"column":0},"end":{"line":21,"column":25}},"21":{"start":{"line":22,"column":0},"end":{"line":22,"column":23}},"22":{"start":{"line":23,"column":0},"end":{"line":23,"column":29}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":12}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":10}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":8}},"26":{"start":{"line":27,"column":0},"end":{"line":27,"column":15}},"27":{"start":{"line":28,"column":0},"end":{"line":28,"column":17}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":8}},"29":{"start":{"line":30,"column":0},"end":{"line":30,"column":7}},"31":{"start":{"line":32,"column":0},"end":{"line":32,"column":16}},"32":{"start":{"line":33,"column":0},"end":{"line":33,"column":81}},"33":{"start":{"line":34,"column":0},"end":{"line":34,"column":5}},"35":{"start":{"line":36,"column":0},"end":{"line":36,"column":37}},"36":{"start":{"line":37,"column":0},"end":{"line":37,"column":13}},"37":{"start":{"line":38,"column":0},"end":{"line":38,"column":35}},"38":{"start":{"line":39,"column":0},"end":{"line":39,"column":24}},"39":{"start":{"line":40,"column":0},"end":{"line":40,"column":35}},"40":{"start":{"line":41,"column":0},"end":{"line":41,"column":8}},"41":{"start":{"line":42,"column":0},"end":{"line":42,"column":7}},"42":{"start":{"line":43,"column":0},"end":{"line":43,"column":3}},"44":{"start":{"line":45,"column":0},"end":{"line":45,"column":43}},"45":{"start":{"line":46,"column":0},"end":{"line":46,"column":25}},"46":{"start":{"line":47,"column":0},"end":{"line":47,"column":21}},"47":{"start":{"line":48,"column":0},"end":{"line":48,"column":28}},"48":{"start":{"line":49,"column":0},"end":{"line":49,"column":39}},"49":{"start":{"line":50,"column":0},"end":{"line":50,"column":14}},"50":{"start":{"line":51,"column":0},"end":{"line":51,"column":35}},"51":{"start":{"line":52,"column":0},"end":{"line":52,"column":15}},"52":{"start":{"line":53,"column":0},"end":{"line":53,"column":21}},"53":{"start":{"line":54,"column":0},"end":{"line":54,"column":19}},"54":{"start":{"line":55,"column":0},"end":{"line":55,"column":32}},"55":{"start":{"line":56,"column":0},"end":{"line":56,"column":14}},"56":{"start":{"line":57,"column":0},"end":{"line":57,"column":12}},"57":{"start":{"line":58,"column":0},"end":{"line":58,"column":27}},"58":{"start":{"line":59,"column":0},"end":{"line":59,"column":39}},"59":{"start":{"line":60,"column":0},"end":{"line":60,"column":12}},"60":{"start":{"line":61,"column":0},"end":{"line":61,"column":10}},"61":{"start":{"line":62,"column":0},"end":{"line":62,"column":8}},"62":{"start":{"line":63,"column":0},"end":{"line":63,"column":7}},"63":{"start":{"line":64,"column":0},"end":{"line":64,"column":3}},"65":{"start":{"line":66,"column":0},"end":{"line":66,"column":37}},"66":{"start":{"line":67,"column":0},"end":{"line":67,"column":25}},"67":{"start":{"line":68,"column":0},"end":{"line":68,"column":25}},"68":{"start":{"line":69,"column":0},"end":{"line":69,"column":21}},"69":{"start":{"line":70,"column":0},"end":{"line":70,"column":28}},"70":{"start":{"line":71,"column":0},"end":{"line":71,"column":39}},"71":{"start":{"line":72,"column":0},"end":{"line":72,"column":14}},"72":{"start":{"line":73,"column":0},"end":{"line":73,"column":35}},"73":{"start":{"line":74,"column":0},"end":{"line":74,"column":35}},"74":{"start":{"line":75,"column":0},"end":{"line":75,"column":15}},"75":{"start":{"line":76,"column":0},"end":{"line":76,"column":21}},"76":{"start":{"line":77,"column":0},"end":{"line":77,"column":19}},"77":{"start":{"line":78,"column":0},"end":{"line":78,"column":32}},"78":{"start":{"line":79,"column":0},"end":{"line":79,"column":14}},"79":{"start":{"line":80,"column":0},"end":{"line":80,"column":12}},"80":{"start":{"line":81,"column":0},"end":{"line":81,"column":27}},"81":{"start":{"line":82,"column":0},"end":{"line":82,"column":39}},"82":{"start":{"line":83,"column":0},"end":{"line":83,"column":12}},"83":{"start":{"line":84,"column":0},"end":{"line":84,"column":10}},"84":{"start":{"line":85,"column":0},"end":{"line":85,"column":8}},"85":{"start":{"line":86,"column":0},"end":{"line":86,"column":7}},"86":{"start":{"line":87,"column":0},"end":{"line":87,"column":3}},"88":{"start":{"line":89,"column":0},"end":{"line":89,"column":41}},"89":{"start":{"line":90,"column":0},"end":{"line":90,"column":22}},"90":{"start":{"line":91,"column":0},"end":{"line":91,"column":22}},"91":{"start":{"line":92,"column":0},"end":{"line":92,"column":25}},"92":{"start":{"line":93,"column":0},"end":{"line":93,"column":28}},"93":{"start":{"line":94,"column":0},"end":{"line":94,"column":39}},"94":{"start":{"line":95,"column":0},"end":{"line":95,"column":14}},"95":{"start":{"line":96,"column":0},"end":{"line":96,"column":15}},"96":{"start":{"line":97,"column":0},"end":{"line":97,"column":21}},"97":{"start":{"line":98,"column":0},"end":{"line":98,"column":19}},"98":{"start":{"line":99,"column":0},"end":{"line":99,"column":32}},"99":{"start":{"line":100,"column":0},"end":{"line":100,"column":14}},"100":{"start":{"line":101,"column":0},"end":{"line":101,"column":12}},"101":{"start":{"line":102,"column":0},"end":{"line":102,"column":10}},"102":{"start":{"line":103,"column":0},"end":{"line":103,"column":21}},"103":{"start":{"line":104,"column":0},"end":{"line":104,"column":27}},"104":{"start":{"line":105,"column":0},"end":{"line":105,"column":29}},"105":{"start":{"line":106,"column":0},"end":{"line":106,"column":19}},"106":{"start":{"line":107,"column":0},"end":{"line":107,"column":22}},"107":{"start":{"line":108,"column":0},"end":{"line":108,"column":31}},"108":{"start":{"line":109,"column":0},"end":{"line":109,"column":25}},"109":{"start":{"line":110,"column":0},"end":{"line":110,"column":41}},"110":{"start":{"line":111,"column":0},"end":{"line":111,"column":20}},"111":{"start":{"line":112,"column":0},"end":{"line":112,"column":18}},"112":{"start":{"line":113,"column":0},"end":{"line":113,"column":16}},"113":{"start":{"line":114,"column":0},"end":{"line":114,"column":14}},"114":{"start":{"line":115,"column":0},"end":{"line":115,"column":12}},"115":{"start":{"line":116,"column":0},"end":{"line":116,"column":10}},"116":{"start":{"line":117,"column":0},"end":{"line":117,"column":8}},"117":{"start":{"line":118,"column":0},"end":{"line":118,"column":7}},"118":{"start":{"line":119,"column":0},"end":{"line":119,"column":3}},"120":{"start":{"line":121,"column":0},"end":{"line":121,"column":44}},"121":{"start":{"line":122,"column":0},"end":{"line":122,"column":19}},"122":{"start":{"line":123,"column":0},"end":{"line":123,"column":22}},"123":{"start":{"line":124,"column":0},"end":{"line":124,"column":25}},"124":{"start":{"line":125,"column":0},"end":{"line":125,"column":5}},"125":{"start":{"line":126,"column":0},"end":{"line":126,"column":39}},"126":{"start":{"line":127,"column":0},"end":{"line":127,"column":14}},"127":{"start":{"line":128,"column":0},"end":{"line":128,"column":15}},"128":{"start":{"line":129,"column":0},"end":{"line":129,"column":21}},"129":{"start":{"line":130,"column":0},"end":{"line":130,"column":10}},"130":{"start":{"line":131,"column":0},"end":{"line":131,"column":21}},"131":{"start":{"line":132,"column":0},"end":{"line":132,"column":27}},"132":{"start":{"line":133,"column":0},"end":{"line":133,"column":29}},"133":{"start":{"line":134,"column":0},"end":{"line":134,"column":19}},"134":{"start":{"line":135,"column":0},"end":{"line":135,"column":22}},"135":{"start":{"line":136,"column":0},"end":{"line":136,"column":31}},"136":{"start":{"line":137,"column":0},"end":{"line":137,"column":25}},"137":{"start":{"line":138,"column":0},"end":{"line":138,"column":41}},"138":{"start":{"line":139,"column":0},"end":{"line":139,"column":20}},"139":{"start":{"line":140,"column":0},"end":{"line":140,"column":18}},"140":{"start":{"line":141,"column":0},"end":{"line":141,"column":16}},"141":{"start":{"line":142,"column":0},"end":{"line":142,"column":14}},"142":{"start":{"line":143,"column":0},"end":{"line":143,"column":12}},"143":{"start":{"line":144,"column":0},"end":{"line":144,"column":10}},"144":{"start":{"line":145,"column":0},"end":{"line":145,"column":8}},"145":{"start":{"line":146,"column":0},"end":{"line":146,"column":7}},"146":{"start":{"line":147,"column":0},"end":{"line":147,"column":3}},"147":{"start":{"line":148,"column":0},"end":{"line":148,"column":1}}},"s":{"0":1,"1":1,"3":1,"5":1,"6":1,"7":2,"8":2,"9":2,"10":2,"13":2,"14":2,"15":2,"16":2,"17":2,"18":2,"19":2,"20":2,"21":2,"22":2,"23":2,"24":2,"25":2,"26":2,"27":2,"28":2,"29":2,"31":2,"32":1,"33":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":2,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"88":1,"89":2,"90":2,"91":2,"92":2,"93":2,"94":2,"95":2,"96":2,"97":2,"98":2,"99":2,"100":2,"101":2,"102":2,"103":2,"104":2,"105":2,"106":2,"107":2,"108":2,"109":2,"110":2,"111":2,"112":2,"113":2,"114":2,"115":2,"116":2,"117":2,"118":2,"120":1,"121":2,"122":2,"123":2,"124":2,"125":2,"126":2,"127":2,"128":2,"129":2,"130":2,"131":2,"132":2,"133":2,"134":2,"135":2,"136":2,"137":2,"138":2,"139":2,"140":2,"141":2,"142":2,"143":2,"144":2,"145":2,"146":2,"147":1},"branchMap":{"0":{"type":"branch","line":7,"loc":{"start":{"line":7,"column":2},"end":{"line":43,"column":3}},"locations":[{"start":{"line":7,"column":2},"end":{"line":43,"column":3}}]},"1":{"type":"branch","line":32,"loc":{"start":{"line":32,"column":15},"end":{"line":42,"column":7}},"locations":[{"start":{"line":32,"column":15},"end":{"line":42,"column":7}}]},"2":{"type":"branch","line":45,"loc":{"start":{"line":45,"column":2},"end":{"line":64,"column":3}},"locations":[{"start":{"line":45,"column":2},"end":{"line":64,"column":3}}]},"3":{"type":"branch","line":66,"loc":{"start":{"line":66,"column":9},"end":{"line":87,"column":3}},"locations":[{"start":{"line":66,"column":9},"end":{"line":87,"column":3}}]},"4":{"type":"branch","line":89,"loc":{"start":{"line":89,"column":9},"end":{"line":119,"column":3}},"locations":[{"start":{"line":89,"column":9},"end":{"line":119,"column":3}}]},"5":{"type":"branch","line":121,"loc":{"start":{"line":121,"column":2},"end":{"line":147,"column":3}},"locations":[{"start":{"line":121,"column":2},"end":{"line":147,"column":3}}]}},"b":{"0":[2],"1":[1],"2":[1],"3":[1],"4":[2],"5":[2]},"fnMap":{"0":{"name":"createSubmission","decl":{"start":{"line":7,"column":2},"end":{"line":43,"column":3}},"loc":{"start":{"line":7,"column":2},"end":{"line":43,"column":3}},"line":7},"1":{"name":"getSubmissionsForAssignment","decl":{"start":{"line":45,"column":2},"end":{"line":64,"column":3}},"loc":{"start":{"line":45,"column":2},"end":{"line":64,"column":3}},"line":45},"2":{"name":"getSubmissionsForEvaluation","decl":{"start":{"line":66,"column":9},"end":{"line":87,"column":3}},"loc":{"start":{"line":66,"column":9},"end":{"line":87,"column":3}},"line":66},"3":{"name":"teacherGetSubmissionsForStudent","decl":{"start":{"line":89,"column":9},"end":{"line":119,"column":3}},"loc":{"start":{"line":89,"column":9},"end":{"line":119,"column":3}},"line":89},"4":{"name":"teacherGetSubmissionsForTeam","decl":{"start":{"line":121,"column":2},"end":{"line":147,"column":3}},"loc":{"start":{"line":121,"column":2},"end":{"line":147,"column":3}},"line":121}},"f":{"0":2,"1":1,"2":1,"3":2,"4":2}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/teacherService.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/teacherService.ts","all":false,"statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":59}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":34}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":37}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":87}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":49}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":36}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":22}},"9":{"start":{"line":10,"column":0},"end":{"line":10,"column":26}},"10":{"start":{"line":11,"column":0},"end":{"line":11,"column":14}},"11":{"start":{"line":12,"column":0},"end":{"line":12,"column":11}},"12":{"start":{"line":13,"column":0},"end":{"line":13,"column":5}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":55}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":40}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":22}},"17":{"start":{"line":18,"column":0},"end":{"line":18,"column":61}},"18":{"start":{"line":19,"column":0},"end":{"line":19,"column":14}},"19":{"start":{"line":20,"column":0},"end":{"line":20,"column":11}},"20":{"start":{"line":21,"column":0},"end":{"line":21,"column":6}},"22":{"start":{"line":23,"column":0},"end":{"line":23,"column":74}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":40}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":20}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":26}},"26":{"start":{"line":27,"column":0},"end":{"line":27,"column":82}},"27":{"start":{"line":28,"column":0},"end":{"line":28,"column":18}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":14}},"29":{"start":{"line":30,"column":0},"end":{"line":30,"column":22}},"30":{"start":{"line":31,"column":0},"end":{"line":31,"column":76}},"31":{"start":{"line":32,"column":0},"end":{"line":32,"column":14}},"32":{"start":{"line":33,"column":0},"end":{"line":33,"column":11}},"33":{"start":{"line":34,"column":0},"end":{"line":34,"column":5}},"34":{"start":{"line":35,"column":0},"end":{"line":35,"column":1}}},"s":{"0":1,"2":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1},"branchMap":{},"b":{},"fnMap":{"0":{"name":"findTeacherById","decl":{"start":{"line":6,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":6,"column":4},"end":{"line":13,"column":5}},"line":6},"1":{"name":"getAllTeachers","decl":{"start":{"line":15,"column":4},"end":{"line":21,"column":6}},"loc":{"start":{"line":15,"column":4},"end":{"line":21,"column":6}},"line":15},"2":{"name":"getTeachersByClass","decl":{"start":{"line":23,"column":4},"end":{"line":34,"column":5}},"loc":{"start":{"line":23,"column":4},"end":{"line":34,"column":5}},"line":23}},"f":{"0":0,"1":0,"2":0}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/teacherTeamsService.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/teacherTeamsService.ts","all":false,"statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":96}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":23}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":34}},"11":{"start":{"line":12,"column":0},"end":{"line":12,"column":46}},"12":{"start":{"line":13,"column":0},"end":{"line":13,"column":25}},"13":{"start":{"line":14,"column":0},"end":{"line":14,"column":20}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":25}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":23}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":36}},"20":{"start":{"line":21,"column":0},"end":{"line":21,"column":87}},"21":{"start":{"line":22,"column":0},"end":{"line":22,"column":16}},"22":{"start":{"line":23,"column":0},"end":{"line":23,"column":39}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":29}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":9}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":7}},"27":{"start":{"line":28,"column":0},"end":{"line":28,"column":40}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":76}},"29":{"start":{"line":30,"column":0},"end":{"line":30,"column":5}},"32":{"start":{"line":33,"column":0},"end":{"line":33,"column":31}},"33":{"start":{"line":34,"column":0},"end":{"line":34,"column":71}},"34":{"start":{"line":35,"column":0},"end":{"line":35,"column":64}},"35":{"start":{"line":36,"column":0},"end":{"line":36,"column":61}},"37":{"start":{"line":38,"column":0},"end":{"line":38,"column":35}},"38":{"start":{"line":39,"column":0},"end":{"line":39,"column":5}},"40":{"start":{"line":41,"column":0},"end":{"line":41,"column":24}},"41":{"start":{"line":42,"column":0},"end":{"line":42,"column":2}},"45":{"start":{"line":46,"column":0},"end":{"line":46,"column":77}},"46":{"start":{"line":47,"column":0},"end":{"line":47,"column":31}},"47":{"start":{"line":48,"column":0},"end":{"line":48,"column":15}},"48":{"start":{"line":49,"column":0},"end":{"line":49,"column":31}},"49":{"start":{"line":50,"column":0},"end":{"line":50,"column":29}},"50":{"start":{"line":51,"column":0},"end":{"line":51,"column":9}},"51":{"start":{"line":52,"column":0},"end":{"line":52,"column":7}},"52":{"start":{"line":53,"column":0},"end":{"line":53,"column":1}},"56":{"start":{"line":57,"column":0},"end":{"line":57,"column":90}},"57":{"start":{"line":58,"column":0},"end":{"line":58,"column":31}},"58":{"start":{"line":59,"column":0},"end":{"line":59,"column":30}},"59":{"start":{"line":60,"column":0},"end":{"line":60,"column":15}},"60":{"start":{"line":61,"column":0},"end":{"line":61,"column":29}},"62":{"start":{"line":63,"column":0},"end":{"line":63,"column":25}},"63":{"start":{"line":64,"column":0},"end":{"line":64,"column":45}},"64":{"start":{"line":65,"column":0},"end":{"line":65,"column":45}},"65":{"start":{"line":66,"column":0},"end":{"line":66,"column":18}},"66":{"start":{"line":67,"column":0},"end":{"line":67,"column":14}},"67":{"start":{"line":68,"column":0},"end":{"line":68,"column":10}},"68":{"start":{"line":69,"column":0},"end":{"line":69,"column":7}},"69":{"start":{"line":70,"column":0},"end":{"line":70,"column":1}},"73":{"start":{"line":74,"column":0},"end":{"line":74,"column":90}},"74":{"start":{"line":75,"column":0},"end":{"line":75,"column":41}},"76":{"start":{"line":77,"column":0},"end":{"line":77,"column":106}},"77":{"start":{"line":78,"column":0},"end":{"line":78,"column":90}},"79":{"start":{"line":80,"column":0},"end":{"line":80,"column":30}},"80":{"start":{"line":81,"column":0},"end":{"line":81,"column":38}},"81":{"start":{"line":82,"column":0},"end":{"line":82,"column":38}},"82":{"start":{"line":83,"column":0},"end":{"line":83,"column":23}},"83":{"start":{"line":84,"column":0},"end":{"line":84,"column":31}},"84":{"start":{"line":85,"column":0},"end":{"line":85,"column":55}},"85":{"start":{"line":86,"column":0},"end":{"line":86,"column":21}},"86":{"start":{"line":87,"column":0},"end":{"line":87,"column":17}},"87":{"start":{"line":88,"column":0},"end":{"line":88,"column":15}},"88":{"start":{"line":89,"column":0},"end":{"line":89,"column":9}},"89":{"start":{"line":90,"column":0},"end":{"line":90,"column":5}},"90":{"start":{"line":91,"column":0},"end":{"line":91,"column":1}},"97":{"start":{"line":98,"column":0},"end":{"line":98,"column":105}},"99":{"start":{"line":100,"column":0},"end":{"line":100,"column":73}},"100":{"start":{"line":101,"column":0},"end":{"line":101,"column":34}},"101":{"start":{"line":102,"column":0},"end":{"line":102,"column":7}},"104":{"start":{"line":105,"column":0},"end":{"line":105,"column":20}},"105":{"start":{"line":106,"column":0},"end":{"line":106,"column":60}},"106":{"start":{"line":107,"column":0},"end":{"line":107,"column":5}},"108":{"start":{"line":109,"column":0},"end":{"line":109,"column":90}},"111":{"start":{"line":112,"column":0},"end":{"line":112,"column":61}},"113":{"start":{"line":114,"column":0},"end":{"line":114,"column":37}},"115":{"start":{"line":116,"column":0},"end":{"line":116,"column":73}},"116":{"start":{"line":117,"column":0},"end":{"line":117,"column":20}},"117":{"start":{"line":118,"column":0},"end":{"line":118,"column":36}},"119":{"start":{"line":120,"column":0},"end":{"line":120,"column":64}},"120":{"start":{"line":121,"column":0},"end":{"line":121,"column":11}},"121":{"start":{"line":122,"column":0},"end":{"line":122,"column":5}},"123":{"start":{"line":124,"column":0},"end":{"line":124,"column":17}},"124":{"start":{"line":125,"column":0},"end":{"line":125,"column":1}},"128":{"start":{"line":129,"column":0},"end":{"line":129,"column":109}},"135":{"start":{"line":136,"column":0},"end":{"line":136,"column":82}},"136":{"start":{"line":137,"column":0},"end":{"line":137,"column":16}},"137":{"start":{"line":138,"column":0},"end":{"line":138,"column":22}},"138":{"start":{"line":139,"column":0},"end":{"line":139,"column":23}},"139":{"start":{"line":140,"column":0},"end":{"line":140,"column":37}},"140":{"start":{"line":141,"column":0},"end":{"line":141,"column":18}},"141":{"start":{"line":142,"column":0},"end":{"line":142,"column":14}},"142":{"start":{"line":143,"column":0},"end":{"line":143,"column":10}},"143":{"start":{"line":144,"column":0},"end":{"line":144,"column":32}},"144":{"start":{"line":145,"column":0},"end":{"line":145,"column":7}},"147":{"start":{"line":148,"column":0},"end":{"line":148,"column":45}},"148":{"start":{"line":149,"column":0},"end":{"line":149,"column":60}},"149":{"start":{"line":150,"column":0},"end":{"line":150,"column":5}},"152":{"start":{"line":153,"column":0},"end":{"line":153,"column":113}},"154":{"start":{"line":155,"column":0},"end":{"line":155,"column":90}},"157":{"start":{"line":158,"column":0},"end":{"line":158,"column":112}},"158":{"start":{"line":159,"column":0},"end":{"line":159,"column":7}},"161":{"start":{"line":162,"column":0},"end":{"line":162,"column":88}},"163":{"start":{"line":164,"column":0},"end":{"line":164,"column":37}},"165":{"start":{"line":166,"column":0},"end":{"line":166,"column":67}},"166":{"start":{"line":167,"column":0},"end":{"line":167,"column":20}},"167":{"start":{"line":168,"column":0},"end":{"line":168,"column":61}},"169":{"start":{"line":170,"column":0},"end":{"line":170,"column":58}},"170":{"start":{"line":171,"column":0},"end":{"line":171,"column":11}},"171":{"start":{"line":172,"column":0},"end":{"line":172,"column":5}},"173":{"start":{"line":174,"column":0},"end":{"line":174,"column":17}},"174":{"start":{"line":175,"column":0},"end":{"line":175,"column":1}},"177":{"start":{"line":178,"column":0},"end":{"line":178,"column":75}},"179":{"start":{"line":180,"column":0},"end":{"line":180,"column":68}},"180":{"start":{"line":181,"column":0},"end":{"line":181,"column":46}},"181":{"start":{"line":182,"column":0},"end":{"line":182,"column":32}},"182":{"start":{"line":183,"column":0},"end":{"line":183,"column":7}},"185":{"start":{"line":186,"column":0},"end":{"line":186,"column":101}},"188":{"start":{"line":189,"column":0},"end":{"line":189,"column":123}},"191":{"start":{"line":192,"column":0},"end":{"line":192,"column":39}},"192":{"start":{"line":193,"column":0},"end":{"line":193,"column":80}},"193":{"start":{"line":194,"column":0},"end":{"line":194,"column":5}},"194":{"start":{"line":195,"column":0},"end":{"line":195,"column":2}},"197":{"start":{"line":198,"column":0},"end":{"line":198,"column":47}},"198":{"start":{"line":199,"column":0},"end":{"line":199,"column":25}},"199":{"start":{"line":200,"column":0},"end":{"line":200,"column":37}},"200":{"start":{"line":201,"column":0},"end":{"line":201,"column":23}},"201":{"start":{"line":202,"column":0},"end":{"line":202,"column":36}},"203":{"start":{"line":204,"column":0},"end":{"line":204,"column":31}},"205":{"start":{"line":206,"column":0},"end":{"line":206,"column":103}},"207":{"start":{"line":208,"column":0},"end":{"line":208,"column":28}},"208":{"start":{"line":209,"column":0},"end":{"line":209,"column":70}},"209":{"start":{"line":210,"column":0},"end":{"line":210,"column":9}},"212":{"start":{"line":213,"column":0},"end":{"line":213,"column":50}},"215":{"start":{"line":216,"column":0},"end":{"line":216,"column":60}},"216":{"start":{"line":217,"column":0},"end":{"line":217,"column":39}},"217":{"start":{"line":218,"column":0},"end":{"line":218,"column":19}},"218":{"start":{"line":219,"column":0},"end":{"line":219,"column":40}},"219":{"start":{"line":220,"column":0},"end":{"line":220,"column":27}},"221":{"start":{"line":222,"column":0},"end":{"line":222,"column":110}},"222":{"start":{"line":223,"column":0},"end":{"line":223,"column":18}},"223":{"start":{"line":224,"column":0},"end":{"line":224,"column":33}},"224":{"start":{"line":225,"column":0},"end":{"line":225,"column":38}},"225":{"start":{"line":226,"column":0},"end":{"line":226,"column":95}},"226":{"start":{"line":227,"column":0},"end":{"line":227,"column":62}},"227":{"start":{"line":228,"column":0},"end":{"line":228,"column":21}},"228":{"start":{"line":229,"column":0},"end":{"line":229,"column":17}},"229":{"start":{"line":230,"column":0},"end":{"line":230,"column":13}},"230":{"start":{"line":231,"column":0},"end":{"line":231,"column":11}},"232":{"start":{"line":233,"column":0},"end":{"line":233,"column":39}},"233":{"start":{"line":234,"column":0},"end":{"line":234,"column":5}},"235":{"start":{"line":236,"column":0},"end":{"line":236,"column":24}},"236":{"start":{"line":237,"column":0},"end":{"line":237,"column":2}},"240":{"start":{"line":241,"column":0},"end":{"line":241,"column":92}},"241":{"start":{"line":242,"column":0},"end":{"line":242,"column":33}},"242":{"start":{"line":243,"column":0},"end":{"line":243,"column":16}},"243":{"start":{"line":244,"column":0},"end":{"line":244,"column":29}},"244":{"start":{"line":245,"column":0},"end":{"line":245,"column":43}},"245":{"start":{"line":246,"column":0},"end":{"line":246,"column":13}},"246":{"start":{"line":247,"column":0},"end":{"line":247,"column":9}},"247":{"start":{"line":248,"column":0},"end":{"line":248,"column":7}},"248":{"start":{"line":249,"column":0},"end":{"line":249,"column":2}},"252":{"start":{"line":253,"column":0},"end":{"line":253,"column":68}},"253":{"start":{"line":254,"column":0},"end":{"line":254,"column":30}},"254":{"start":{"line":255,"column":0},"end":{"line":255,"column":16}},"255":{"start":{"line":256,"column":0},"end":{"line":256,"column":22}},"256":{"start":{"line":257,"column":0},"end":{"line":257,"column":9}},"257":{"start":{"line":258,"column":0},"end":{"line":258,"column":7}},"258":{"start":{"line":259,"column":0},"end":{"line":259,"column":2}}},"s":{"0":1,"2":1,"4":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"27":0,"28":0,"29":0,"32":0,"33":0,"34":0,"35":0,"37":0,"38":0,"40":0,"41":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"56":0,"57":0,"58":0,"59":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"73":0,"74":0,"76":0,"77":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"97":0,"99":0,"100":0,"101":0,"104":0,"105":0,"106":0,"108":0,"111":0,"113":0,"115":0,"116":0,"117":0,"119":0,"120":0,"121":0,"123":0,"124":0,"128":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"147":0,"148":0,"149":0,"152":0,"154":0,"157":0,"158":0,"161":0,"163":0,"165":0,"166":0,"167":0,"169":0,"170":0,"171":0,"173":0,"174":0,"177":1,"179":0,"180":0,"181":0,"182":0,"185":0,"188":0,"191":0,"192":0,"193":0,"194":0,"197":1,"198":0,"199":0,"200":0,"201":0,"203":0,"205":0,"207":0,"208":0,"209":0,"212":0,"215":0,"216":0,"217":0,"218":0,"219":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"232":0,"233":0,"235":0,"236":0,"240":1,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"252":1,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0},"branchMap":{},"b":{},"fnMap":{"0":{"name":"createTeamsInAssignment","decl":{"start":{"line":12,"column":39},"end":{"line":42,"column":2}},"loc":{"start":{"line":12,"column":39},"end":{"line":42,"column":2}},"line":12},"1":{"name":"createTeam","decl":{"start":{"line":46,"column":0},"end":{"line":53,"column":1}},"loc":{"start":{"line":46,"column":0},"end":{"line":53,"column":1}},"line":46},"2":{"name":"giveAssignmentToTeam","decl":{"start":{"line":57,"column":0},"end":{"line":70,"column":1}},"loc":{"start":{"line":57,"column":0},"end":{"line":70,"column":1}},"line":57},"3":{"name":"assignStudentsToTeam","decl":{"start":{"line":74,"column":0},"end":{"line":91,"column":1}},"loc":{"start":{"line":74,"column":0},"end":{"line":91,"column":1}},"line":74},"4":{"name":"randomlyDivideClassIntoTeams","decl":{"start":{"line":98,"column":0},"end":{"line":125,"column":1}},"loc":{"start":{"line":98,"column":0},"end":{"line":125,"column":1}},"line":98},"5":{"name":"divideClassIntoAlphabeticalTeams","decl":{"start":{"line":129,"column":0},"end":{"line":175,"column":1}},"loc":{"start":{"line":129,"column":0},"end":{"line":175,"column":1}},"line":129},"6":{"name":"validateStudentIds","decl":{"start":{"line":178,"column":27},"end":{"line":195,"column":2}},"loc":{"start":{"line":178,"column":27},"end":{"line":195,"column":2}},"line":178},"7":{"name":"updateTeamsForAssignment","decl":{"start":{"line":198,"column":40},"end":{"line":237,"column":2}},"loc":{"start":{"line":198,"column":40},"end":{"line":237,"column":2}},"line":198},"8":{"name":"getTeamsThatHaveAssignment","decl":{"start":{"line":241,"column":42},"end":{"line":249,"column":2}},"loc":{"start":{"line":241,"column":42},"end":{"line":249,"column":2}},"line":241},"9":{"name":"deleteTeam","decl":{"start":{"line":253,"column":26},"end":{"line":259,"column":2}},"loc":{"start":{"line":253,"column":26},"end":{"line":259,"column":2}},"line":253}},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/userService.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/userService.ts","all":false,"statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":56}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":34}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":34}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":64}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":56}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":5}},"9":{"start":{"line":10,"column":0},"end":{"line":10,"column":132}},"10":{"start":{"line":11,"column":0},"end":{"line":11,"column":35}},"11":{"start":{"line":12,"column":0},"end":{"line":12,"column":19}},"12":{"start":{"line":13,"column":0},"end":{"line":13,"column":26}},"13":{"start":{"line":14,"column":0},"end":{"line":14,"column":25}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":22}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":41}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":27}},"18":{"start":{"line":19,"column":0},"end":{"line":19,"column":76}},"19":{"start":{"line":20,"column":0},"end":{"line":20,"column":76}},"20":{"start":{"line":21,"column":0},"end":{"line":21,"column":72}},"21":{"start":{"line":22,"column":0},"end":{"line":22,"column":14}},"22":{"start":{"line":23,"column":0},"end":{"line":23,"column":22}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":30}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":30}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":28}},"26":{"start":{"line":27,"column":0},"end":{"line":27,"column":14}},"27":{"start":{"line":28,"column":0},"end":{"line":28,"column":11}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":5}},"30":{"start":{"line":31,"column":0},"end":{"line":31,"column":64}},"31":{"start":{"line":32,"column":0},"end":{"line":32,"column":63}},"32":{"start":{"line":33,"column":0},"end":{"line":33,"column":5}},"33":{"start":{"line":34,"column":0},"end":{"line":34,"column":1}}},"s":{"0":1,"2":1,"4":1,"5":1,"6":0,"7":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"30":1,"31":0,"32":0,"33":1},"branchMap":{},"b":{},"fnMap":{"0":{"name":"findUser","decl":{"start":{"line":6,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":6,"column":4},"end":{"line":8,"column":5}},"line":6},"1":{"name":"createUser","decl":{"start":{"line":10,"column":4},"end":{"line":29,"column":5}},"loc":{"start":{"line":10,"column":4},"end":{"line":29,"column":5}},"line":10},"2":{"name":"findUserByEmail","decl":{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},"loc":{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},"line":31}},"f":{"0":0,"1":0,"2":0}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/teacherServices/teacherAssignmentService.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/teacherServices/teacherAssignmentService.ts","all":false,"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":64}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":74}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":86}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":34}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":47}},"12":{"start":{"line":13,"column":0},"end":{"line":13,"column":40}},"13":{"start":{"line":14,"column":0},"end":{"line":14,"column":22}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":20}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":20}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":25}},"17":{"start":{"line":18,"column":0},"end":{"line":18,"column":24}},"18":{"start":{"line":19,"column":0},"end":{"line":19,"column":18}},"19":{"start":{"line":20,"column":0},"end":{"line":20,"column":26}},"21":{"start":{"line":22,"column":0},"end":{"line":22,"column":66}},"22":{"start":{"line":23,"column":0},"end":{"line":23,"column":76}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":5}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":58}},"29":{"start":{"line":30,"column":0},"end":{"line":30,"column":17}},"30":{"start":{"line":31,"column":0},"end":{"line":31,"column":53}},"31":{"start":{"line":32,"column":0},"end":{"line":32,"column":51}},"32":{"start":{"line":33,"column":0},"end":{"line":33,"column":56}},"33":{"start":{"line":34,"column":0},"end":{"line":34,"column":6}},"36":{"start":{"line":37,"column":0},"end":{"line":37,"column":37}},"37":{"start":{"line":38,"column":0},"end":{"line":38,"column":13}},"38":{"start":{"line":39,"column":0},"end":{"line":39,"column":16}},"39":{"start":{"line":40,"column":0},"end":{"line":40,"column":19}},"40":{"start":{"line":41,"column":0},"end":{"line":41,"column":17}},"41":{"start":{"line":42,"column":0},"end":{"line":42,"column":27}},"42":{"start":{"line":43,"column":0},"end":{"line":43,"column":19}},"43":{"start":{"line":44,"column":0},"end":{"line":44,"column":20}},"44":{"start":{"line":45,"column":0},"end":{"line":45,"column":12}},"45":{"start":{"line":46,"column":0},"end":{"line":46,"column":10}},"46":{"start":{"line":47,"column":0},"end":{"line":47,"column":8}},"47":{"start":{"line":48,"column":0},"end":{"line":48,"column":7}},"48":{"start":{"line":49,"column":0},"end":{"line":49,"column":3}},"54":{"start":{"line":55,"column":0},"end":{"line":55,"column":37}},"55":{"start":{"line":56,"column":0},"end":{"line":56,"column":20}},"56":{"start":{"line":57,"column":0},"end":{"line":57,"column":21}},"57":{"start":{"line":58,"column":0},"end":{"line":58,"column":28}},"58":{"start":{"line":59,"column":0},"end":{"line":59,"column":66}},"59":{"start":{"line":60,"column":0},"end":{"line":60,"column":80}},"60":{"start":{"line":61,"column":0},"end":{"line":61,"column":5}},"61":{"start":{"line":62,"column":0},"end":{"line":62,"column":39}},"62":{"start":{"line":63,"column":0},"end":{"line":63,"column":14}},"63":{"start":{"line":64,"column":0},"end":{"line":64,"column":27}},"64":{"start":{"line":65,"column":0},"end":{"line":65,"column":17}},"65":{"start":{"line":66,"column":0},"end":{"line":66,"column":20}},"66":{"start":{"line":67,"column":0},"end":{"line":67,"column":12}},"67":{"start":{"line":68,"column":0},"end":{"line":68,"column":10}},"68":{"start":{"line":69,"column":0},"end":{"line":69,"column":8}},"69":{"start":{"line":70,"column":0},"end":{"line":70,"column":7}},"70":{"start":{"line":71,"column":0},"end":{"line":71,"column":3}},"75":{"start":{"line":76,"column":0},"end":{"line":76,"column":32}},"76":{"start":{"line":77,"column":0},"end":{"line":77,"column":25}},"77":{"start":{"line":78,"column":0},"end":{"line":78,"column":20}},"78":{"start":{"line":79,"column":0},"end":{"line":79,"column":24}},"79":{"start":{"line":80,"column":0},"end":{"line":80,"column":21}},"80":{"start":{"line":81,"column":0},"end":{"line":81,"column":26}},"82":{"start":{"line":83,"column":0},"end":{"line":83,"column":62}},"83":{"start":{"line":84,"column":0},"end":{"line":84,"column":78}},"84":{"start":{"line":85,"column":0},"end":{"line":85,"column":5}},"87":{"start":{"line":88,"column":0},"end":{"line":88,"column":79}},"90":{"start":{"line":91,"column":0},"end":{"line":91,"column":37}},"91":{"start":{"line":92,"column":0},"end":{"line":92,"column":34}},"92":{"start":{"line":93,"column":0},"end":{"line":93,"column":13}},"93":{"start":{"line":94,"column":0},"end":{"line":94,"column":16}},"94":{"start":{"line":95,"column":0},"end":{"line":95,"column":19}},"95":{"start":{"line":96,"column":0},"end":{"line":96,"column":8}},"96":{"start":{"line":97,"column":0},"end":{"line":97,"column":7}},"97":{"start":{"line":98,"column":0},"end":{"line":98,"column":3}},"102":{"start":{"line":103,"column":0},"end":{"line":103,"column":32}},"103":{"start":{"line":104,"column":0},"end":{"line":104,"column":25}},"104":{"start":{"line":105,"column":0},"end":{"line":105,"column":21}},"105":{"start":{"line":106,"column":0},"end":{"line":106,"column":26}},"106":{"start":{"line":107,"column":0},"end":{"line":107,"column":62}},"107":{"start":{"line":108,"column":0},"end":{"line":108,"column":78}},"108":{"start":{"line":109,"column":0},"end":{"line":109,"column":5}},"110":{"start":{"line":111,"column":0},"end":{"line":111,"column":37}},"111":{"start":{"line":112,"column":0},"end":{"line":112,"column":34}},"112":{"start":{"line":113,"column":0},"end":{"line":113,"column":7}},"113":{"start":{"line":114,"column":0},"end":{"line":114,"column":3}},"114":{"start":{"line":115,"column":0},"end":{"line":115,"column":1}}},"s":{"1":1,"2":1,"3":1,"6":1,"8":1,"12":1,"13":4,"14":4,"15":4,"16":4,"17":4,"18":4,"19":4,"21":4,"22":1,"23":1,"28":3,"29":3,"30":4,"31":4,"32":4,"33":4,"36":2,"37":2,"38":2,"39":2,"40":2,"41":2,"42":2,"43":2,"44":2,"45":2,"46":2,"47":2,"48":4,"54":1,"55":4,"56":4,"57":4,"58":4,"59":1,"60":1,"61":3,"62":3,"63":3,"64":3,"65":3,"66":3,"67":3,"68":3,"69":3,"70":4,"75":1,"76":2,"77":2,"78":2,"79":2,"80":2,"82":2,"83":1,"84":1,"87":1,"90":1,"91":1,"92":1,"93":1,"94":1,"95":1,"96":1,"97":2,"102":1,"103":2,"104":2,"105":2,"106":2,"107":1,"108":1,"110":1,"111":1,"112":1,"113":2,"114":1},"branchMap":{"0":{"type":"branch","line":13,"loc":{"start":{"line":13,"column":2},"end":{"line":49,"column":3}},"locations":[{"start":{"line":13,"column":2},"end":{"line":49,"column":3}}]},"1":{"type":"branch","line":22,"loc":{"start":{"line":22,"column":65},"end":{"line":24,"column":5}},"locations":[{"start":{"line":22,"column":65},"end":{"line":24,"column":5}}]},"2":{"type":"branch","line":24,"loc":{"start":{"line":24,"column":4},"end":{"line":31,"column":19}},"locations":[{"start":{"line":24,"column":4},"end":{"line":31,"column":19}}]},"3":{"type":"branch","line":31,"loc":{"start":{"line":31,"column":6},"end":{"line":31,"column":31}},"locations":[{"start":{"line":31,"column":6},"end":{"line":31,"column":31}}]},"4":{"type":"branch","line":31,"loc":{"start":{"line":31,"column":19},"end":{"line":31,"column":53}},"locations":[{"start":{"line":31,"column":19},"end":{"line":31,"column":53}}]},"5":{"type":"branch","line":32,"loc":{"start":{"line":32,"column":6},"end":{"line":32,"column":29}},"locations":[{"start":{"line":32,"column":6},"end":{"line":32,"column":29}}]},"6":{"type":"branch","line":32,"loc":{"start":{"line":32,"column":19},"end":{"line":32,"column":51}},"locations":[{"start":{"line":32,"column":19},"end":{"line":32,"column":51}}]},"7":{"type":"branch","line":33,"loc":{"start":{"line":33,"column":6},"end":{"line":33,"column":34}},"locations":[{"start":{"line":33,"column":6},"end":{"line":33,"column":34}}]},"8":{"type":"branch","line":33,"loc":{"start":{"line":33,"column":19},"end":{"line":33,"column":56}},"locations":[{"start":{"line":33,"column":19},"end":{"line":33,"column":56}}]},"9":{"type":"branch","line":34,"loc":{"start":{"line":34,"column":4},"end":{"line":48,"column":7}},"locations":[{"start":{"line":34,"column":4},"end":{"line":48,"column":7}}]},"10":{"type":"branch","line":55,"loc":{"start":{"line":55,"column":2},"end":{"line":71,"column":3}},"locations":[{"start":{"line":55,"column":2},"end":{"line":71,"column":3}}]},"11":{"type":"branch","line":59,"loc":{"start":{"line":59,"column":65},"end":{"line":61,"column":5}},"locations":[{"start":{"line":59,"column":65},"end":{"line":61,"column":5}}]},"12":{"type":"branch","line":61,"loc":{"start":{"line":61,"column":4},"end":{"line":70,"column":7}},"locations":[{"start":{"line":61,"column":4},"end":{"line":70,"column":7}}]},"13":{"type":"branch","line":76,"loc":{"start":{"line":76,"column":2},"end":{"line":98,"column":3}},"locations":[{"start":{"line":76,"column":2},"end":{"line":98,"column":3}}]},"14":{"type":"branch","line":83,"loc":{"start":{"line":83,"column":61},"end":{"line":97,"column":7}},"locations":[{"start":{"line":83,"column":61},"end":{"line":97,"column":7}}]},"15":{"type":"branch","line":103,"loc":{"start":{"line":103,"column":2},"end":{"line":114,"column":3}},"locations":[{"start":{"line":103,"column":2},"end":{"line":114,"column":3}}]},"16":{"type":"branch","line":107,"loc":{"start":{"line":107,"column":61},"end":{"line":113,"column":7}},"locations":[{"start":{"line":107,"column":61},"end":{"line":113,"column":7}}]}},"b":{"0":[4],"1":[1],"2":[3],"3":[0],"4":[3],"5":[0],"6":[3],"7":[0],"8":[3],"9":[2],"10":[4],"11":[1],"12":[3],"13":[2],"14":[1],"15":[2],"16":[1]},"fnMap":{"0":{"name":"createAssignmentForClass","decl":{"start":{"line":13,"column":2},"end":{"line":49,"column":3}},"loc":{"start":{"line":13,"column":2},"end":{"line":49,"column":3}},"line":13},"1":{"name":"getAssignmentsByClass","decl":{"start":{"line":55,"column":2},"end":{"line":71,"column":3}},"loc":{"start":{"line":55,"column":2},"end":{"line":71,"column":3}},"line":55},"2":{"name":"updateAssignment","decl":{"start":{"line":76,"column":2},"end":{"line":98,"column":3}},"loc":{"start":{"line":76,"column":2},"end":{"line":98,"column":3}},"line":76},"3":{"name":"deleteAssignment","decl":{"start":{"line":103,"column":2},"end":{"line":114,"column":3}},"loc":{"start":{"line":103,"column":2},"end":{"line":114,"column":3}},"line":103}},"f":{"0":4,"1":4,"2":2,"3":2}}
,"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/zodSchemas/inviteSchemas.ts": {"path":"/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/zodSchemas/inviteSchemas.ts","all":false,"statementMap":{"0":{"start":{"line":1,"column":0},"end":{"line":1,"column":24}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":48}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":48}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":3}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":50}},"9":{"start":{"line":10,"column":0},"end":{"line":10,"column":21}},"10":{"start":{"line":11,"column":0},"end":{"line":11,"column":58}},"11":{"start":{"line":12,"column":0},"end":{"line":12,"column":57}},"12":{"start":{"line":13,"column":0},"end":{"line":13,"column":71}},"13":{"start":{"line":14,"column":0},"end":{"line":14,"column":3}},"18":{"start":{"line":19,"column":0},"end":{"line":19,"column":89}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":48}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":42}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":3}},"26":{"start":{"line":27,"column":0},"end":{"line":27,"column":50}},"27":{"start":{"line":28,"column":0},"end":{"line":28,"column":22}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":59}},"29":{"start":{"line":30,"column":0},"end":{"line":30,"column":58}},"30":{"start":{"line":31,"column":0},"end":{"line":31,"column":72}},"31":{"start":{"line":32,"column":0},"end":{"line":32,"column":3}},"36":{"start":{"line":37,"column":0},"end":{"line":37,"column":121}}},"s":{"0":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"18":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"36":1},"branchMap":{},"b":{},"fnMap":{},"f":{}}
}


===== Bestand: ../dwengo_backend/coverage/clover.xml =====
<?xml version="1.0" encoding="UTF-8"?>
<coverage generated="1742990438429" clover="3.2.0">
  <project timestamp="1742990438429" name="All files">
    <metrics statements="4640" coveredstatements="1839" conditionals="236" coveredconditionals="199" methods="190" coveredmethods="72" elements="5066" coveredelements="2110" complexity="0" loc="4640" ncloc="4640" packages="22" files="78" classes="78"/>
    <package name="dwengo_backend">
      <metrics statements="77" coveredstatements="69" conditionals="4" coveredconditionals="1" methods="0" coveredmethods="0"/>
      <file name="index.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/index.ts">
        <metrics statements="77" coveredstatements="69" conditionals="4" coveredconditionals="1" methods="0" coveredmethods="0"/>
        <line num="1" count="1" type="stmt"/>
        <line num="2" count="1" type="stmt"/>
        <line num="3" count="1" type="stmt"/>
        <line num="4" count="1" type="stmt"/>
        <line num="5" count="1" type="stmt"/>
        <line num="6" count="1" type="stmt"/>
        <line num="7" count="1" type="stmt"/>
        <line num="8" count="1" type="stmt"/>
        <line num="9" count="1" type="stmt"/>
        <line num="11" count="1" type="stmt"/>
        <line num="12" count="1" type="stmt"/>
        <line num="13" count="1" type="stmt"/>
        <line num="14" count="1" type="stmt"/>
        <line num="15" count="1" type="stmt"/>
        <line num="16" count="1" type="stmt"/>
        <line num="17" count="1" type="stmt"/>
        <line num="18" count="1" type="stmt"/>
        <line num="19" count="1" type="stmt"/>
        <line num="20" count="1" type="stmt"/>
        <line num="21" count="1" type="stmt"/>
        <line num="22" count="1" type="stmt"/>
        <line num="24" count="1" type="stmt"/>
        <line num="25" count="1" type="stmt"/>
        <line num="26" count="1" type="stmt"/>
        <line num="28" count="1" type="stmt"/>
        <line num="30" count="1" type="stmt"/>
        <line num="31" count="1" type="stmt"/>
        <line num="34" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="35" count="94" type="stmt"/>
        <line num="36" count="94" type="stmt"/>
        <line num="37" count="94" type="stmt"/>
        <line num="38" count="94" type="stmt"/>
        <line num="39" count="94" type="stmt"/>
        <line num="40" count="94" type="cond" truecount="0" falsecount="2"/>
        <line num="41" count="0" type="stmt"/>
        <line num="42" count="0" type="stmt"/>
        <line num="43" count="94" type="stmt"/>
        <line num="44" count="94" type="stmt"/>
        <line num="45" count="94" type="stmt"/>
        <line num="46" count="94" type="stmt"/>
        <line num="47" count="94" type="stmt"/>
        <line num="48" count="94" type="stmt"/>
        <line num="49" count="94" type="stmt"/>
        <line num="50" count="94" type="stmt"/>
        <line num="51" count="94" type="stmt"/>
        <line num="52" count="94" type="stmt"/>
        <line num="54" count="1" type="stmt"/>
        <line num="55" count="0" type="stmt"/>
        <line num="56" count="0" type="stmt"/>
        <line num="59" count="1" type="stmt"/>
        <line num="62" count="1" type="stmt"/>
        <line num="65" count="1" type="stmt"/>
        <line num="68" count="1" type="stmt"/>
        <line num="69" count="1" type="stmt"/>
        <line num="70" count="1" type="stmt"/>
        <line num="71" count="1" type="stmt"/>
        <line num="74" count="1" type="stmt"/>
        <line num="77" count="1" type="stmt"/>
        <line num="80" count="1" type="stmt"/>
        <line num="83" count="1" type="stmt"/>
        <line num="85" count="1" type="stmt"/>
        <line num="88" count="1" type="stmt"/>
        <line num="91" count="1" type="stmt"/>
        <line num="93" count="1" type="stmt"/>
        <line num="95" count="1" type="stmt"/>
        <line num="97" count="1" type="stmt"/>
        <line num="99" count="1" type="stmt"/>
        <line num="100" count="1" type="stmt"/>
        <line num="103" count="1" type="stmt"/>
        <line num="104" count="1" type="stmt"/>
        <line num="107" count="1" type="stmt"/>
        <line num="109" count="1" type="cond" truecount="0" falsecount="1"/>
        <line num="110" count="0" type="stmt"/>
        <line num="111" count="0" type="stmt"/>
        <line num="112" count="0" type="stmt"/>
        <line num="113" count="0" type="stmt"/>
        <line num="115" count="1" type="stmt"/>
      </file>
    </package>
    <package name="dwengo_backend.config">
      <metrics statements="9" coveredstatements="9" conditionals="0" coveredconditionals="0" methods="0" coveredmethods="0"/>
      <file name="dwengoAPI.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/config/dwengoAPI.ts">
        <metrics statements="9" coveredstatements="9" conditionals="0" coveredconditionals="0" methods="0" coveredmethods="0"/>
        <line num="1" count="1" type="stmt"/>
        <line num="3" count="1" type="stmt"/>
        <line num="4" count="1" type="stmt"/>
        <line num="5" count="1" type="stmt"/>
        <line num="6" count="1" type="stmt"/>
        <line num="7" count="1" type="stmt"/>
        <line num="8" count="1" type="stmt"/>
        <line num="9" count="1" type="stmt"/>
        <line num="10" count="1" type="stmt"/>
      </file>
    </package>
    <package name="dwengo_backend.controllers">
      <metrics statements="482" coveredstatements="38" conditionals="3" coveredconditionals="1" methods="10" coveredmethods="1"/>
      <file name="assignmentController.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/assignmentController.ts">
        <metrics statements="20" coveredstatements="13" conditionals="3" coveredconditionals="1" methods="1" coveredmethods="1"/>
        <line num="2" count="1" type="stmt"/>
        <line num="5" count="1" type="stmt"/>
        <line num="6" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="7" count="1" type="stmt"/>
        <line num="9" count="1" type="cond" truecount="0" falsecount="1"/>
        <line num="10" count="0" type="stmt"/>
        <line num="11" count="0" type="stmt"/>
        <line num="12" count="0" type="stmt"/>
        <line num="14" count="1" type="stmt"/>
        <line num="17" count="1" type="stmt"/>
        <line num="20" count="1" type="stmt"/>
        <line num="21" count="1" type="stmt"/>
        <line num="22" count="1" type="stmt"/>
        <line num="23" count="1" type="cond" truecount="0" falsecount="1"/>
        <line num="26" count="0" type="stmt"/>
        <line num="28" count="0" type="stmt"/>
        <line num="29" count="0" type="stmt"/>
        <line num="30" count="0" type="stmt"/>
        <line num="31" count="1" type="stmt"/>
        <line num="32" count="1" type="stmt"/>
      </file>
      <file name="progressController.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/progressController.ts">
        <metrics statements="419" coveredstatements="11" conditionals="0" coveredconditionals="0" methods="8" coveredmethods="0"/>
        <line num="2" count="1" type="stmt"/>
        <line num="4" count="1" type="stmt"/>
        <line num="6" count="1" type="stmt"/>
        <line num="12" count="1" type="stmt"/>
        <line num="13" count="0" type="stmt"/>
        <line num="14" count="0" type="stmt"/>
        <line num="15" count="0" type="stmt"/>
        <line num="16" count="0" type="stmt"/>
        <line num="17" count="0" type="stmt"/>
        <line num="18" count="0" type="stmt"/>
        <line num="21" count="0" type="stmt"/>
        <line num="23" count="0" type="stmt"/>
        <line num="24" count="0" type="stmt"/>
        <line num="25" count="0" type="stmt"/>
        <line num="26" count="0" type="stmt"/>
        <line num="27" count="0" type="stmt"/>
        <line num="28" count="0" type="stmt"/>
        <line num="29" count="0" type="stmt"/>
        <line num="32" count="0" type="stmt"/>
        <line num="33" count="0" type="stmt"/>
        <line num="34" count="0" type="stmt"/>
        <line num="35" count="0" type="stmt"/>
        <line num="36" count="0" type="stmt"/>
        <line num="37" count="0" type="stmt"/>
        <line num="39" count="0" type="stmt"/>
        <line num="40" count="0" type="stmt"/>
        <line num="42" count="0" type="stmt"/>
        <line num="43" count="0" type="stmt"/>
        <line num="44" count="0" type="stmt"/>
        <line num="45" count="0" type="stmt"/>
        <line num="46" count="0" type="stmt"/>
        <line num="47" count="0" type="stmt"/>
        <line num="48" count="0" type="stmt"/>
        <line num="49" count="0" type="stmt"/>
        <line num="50" count="0" type="stmt"/>
        <line num="55" count="1" type="stmt"/>
        <line num="56" count="0" type="stmt"/>
        <line num="57" count="0" type="stmt"/>
        <line num="58" count="0" type="stmt"/>
        <line num="59" count="0" type="stmt"/>
        <line num="60" count="0" type="stmt"/>
        <line num="61" count="0" type="stmt"/>
        <line num="63" count="0" type="stmt"/>
        <line num="64" count="0" type="stmt"/>
        <line num="65" count="0" type="stmt"/>
        <line num="66" count="0" type="stmt"/>
        <line num="67" count="0" type="stmt"/>
        <line num="68" count="0" type="stmt"/>
        <line num="69" count="0" type="stmt"/>
        <line num="71" count="0" type="stmt"/>
        <line num="72" count="0" type="stmt"/>
        <line num="73" count="0" type="stmt"/>
        <line num="74" count="0" type="stmt"/>
        <line num="76" count="0" type="stmt"/>
        <line num="77" count="0" type="stmt"/>
        <line num="78" count="0" type="stmt"/>
        <line num="79" count="0" type="stmt"/>
        <line num="80" count="0" type="stmt"/>
        <line num="81" count="0" type="stmt"/>
        <line num="86" count="1" type="stmt"/>
        <line num="87" count="0" type="stmt"/>
        <line num="88" count="0" type="stmt"/>
        <line num="89" count="0" type="stmt"/>
        <line num="90" count="0" type="stmt"/>
        <line num="91" count="0" type="stmt"/>
        <line num="92" count="0" type="stmt"/>
        <line num="95" count="0" type="stmt"/>
        <line num="96" count="0" type="stmt"/>
        <line num="97" count="0" type="stmt"/>
        <line num="98" count="0" type="stmt"/>
        <line num="99" count="0" type="stmt"/>
        <line num="100" count="0" type="stmt"/>
        <line num="101" count="0" type="stmt"/>
        <line num="103" count="0" type="stmt"/>
        <line num="104" count="0" type="stmt"/>
        <line num="105" count="0" type="stmt"/>
        <line num="106" count="0" type="stmt"/>
        <line num="109" count="0" type="stmt"/>
        <line num="110" count="0" type="stmt"/>
        <line num="111" count="0" type="stmt"/>
        <line num="112" count="0" type="stmt"/>
        <line num="114" count="0" type="stmt"/>
        <line num="115" count="0" type="stmt"/>
        <line num="116" count="0" type="stmt"/>
        <line num="117" count="0" type="stmt"/>
        <line num="118" count="0" type="stmt"/>
        <line num="119" count="0" type="stmt"/>
        <line num="120" count="0" type="stmt"/>
        <line num="121" count="0" type="stmt"/>
        <line num="126" count="1" type="stmt"/>
        <line num="127" count="0" type="stmt"/>
        <line num="128" count="0" type="stmt"/>
        <line num="129" count="0" type="stmt"/>
        <line num="130" count="0" type="stmt"/>
        <line num="131" count="0" type="stmt"/>
        <line num="132" count="0" type="stmt"/>
        <line num="133" count="0" type="stmt"/>
        <line num="134" count="0" type="stmt"/>
        <line num="136" count="0" type="stmt"/>
        <line num="137" count="0" type="stmt"/>
        <line num="138" count="0" type="stmt"/>
        <line num="139" count="0" type="stmt"/>
        <line num="140" count="0" type="stmt"/>
        <line num="143" count="0" type="stmt"/>
        <line num="144" count="0" type="stmt"/>
        <line num="145" count="0" type="stmt"/>
        <line num="146" count="0" type="stmt"/>
        <line num="147" count="0" type="stmt"/>
        <line num="148" count="0" type="stmt"/>
        <line num="149" count="0" type="stmt"/>
        <line num="150" count="0" type="stmt"/>
        <line num="151" count="0" type="stmt"/>
        <line num="152" count="0" type="stmt"/>
        <line num="153" count="0" type="stmt"/>
        <line num="154" count="0" type="stmt"/>
        <line num="155" count="0" type="stmt"/>
        <line num="156" count="0" type="stmt"/>
        <line num="157" count="0" type="stmt"/>
        <line num="158" count="0" type="stmt"/>
        <line num="161" count="0" type="stmt"/>
        <line num="162" count="0" type="stmt"/>
        <line num="163" count="0" type="stmt"/>
        <line num="164" count="0" type="stmt"/>
        <line num="165" count="0" type="stmt"/>
        <line num="166" count="0" type="stmt"/>
        <line num="167" count="0" type="stmt"/>
        <line num="170" count="0" type="stmt"/>
        <line num="172" count="0" type="stmt"/>
        <line num="173" count="0" type="stmt"/>
        <line num="174" count="0" type="stmt"/>
        <line num="176" count="0" type="stmt"/>
        <line num="179" count="0" type="stmt"/>
        <line num="180" count="0" type="stmt"/>
        <line num="181" count="0" type="stmt"/>
        <line num="182" count="0" type="stmt"/>
        <line num="183" count="0" type="stmt"/>
        <line num="184" count="0" type="stmt"/>
        <line num="185" count="0" type="stmt"/>
        <line num="189" count="0" type="stmt"/>
        <line num="190" count="0" type="stmt"/>
        <line num="191" count="0" type="stmt"/>
        <line num="192" count="0" type="stmt"/>
        <line num="193" count="0" type="stmt"/>
        <line num="194" count="0" type="stmt"/>
        <line num="195" count="0" type="stmt"/>
        <line num="197" count="0" type="stmt"/>
        <line num="200" count="0" type="stmt"/>
        <line num="201" count="0" type="stmt"/>
        <line num="202" count="0" type="stmt"/>
        <line num="203" count="0" type="stmt"/>
        <line num="204" count="0" type="stmt"/>
        <line num="205" count="0" type="stmt"/>
        <line num="206" count="0" type="stmt"/>
        <line num="207" count="0" type="stmt"/>
        <line num="208" count="0" type="stmt"/>
        <line num="209" count="0" type="stmt"/>
        <line num="210" count="0" type="stmt"/>
        <line num="211" count="0" type="stmt"/>
        <line num="212" count="0" type="stmt"/>
        <line num="214" count="0" type="stmt"/>
        <line num="215" count="0" type="stmt"/>
        <line num="216" count="0" type="stmt"/>
        <line num="217" count="0" type="stmt"/>
        <line num="218" count="0" type="stmt"/>
        <line num="219" count="0" type="stmt"/>
        <line num="224" count="1" type="stmt"/>
        <line num="225" count="0" type="stmt"/>
        <line num="226" count="0" type="stmt"/>
        <line num="227" count="0" type="stmt"/>
        <line num="228" count="0" type="stmt"/>
        <line num="229" count="0" type="stmt"/>
        <line num="230" count="0" type="stmt"/>
        <line num="231" count="0" type="stmt"/>
        <line num="232" count="0" type="stmt"/>
        <line num="233" count="0" type="stmt"/>
        <line num="234" count="0" type="stmt"/>
        <line num="236" count="0" type="stmt"/>
        <line num="237" count="0" type="stmt"/>
        <line num="238" count="0" type="stmt"/>
        <line num="239" count="0" type="stmt"/>
        <line num="240" count="0" type="stmt"/>
        <line num="241" count="0" type="stmt"/>
        <line num="242" count="0" type="stmt"/>
        <line num="245" count="0" type="stmt"/>
        <line num="246" count="0" type="stmt"/>
        <line num="247" count="0" type="stmt"/>
        <line num="248" count="0" type="stmt"/>
        <line num="249" count="0" type="stmt"/>
        <line num="252" count="0" type="stmt"/>
        <line num="253" count="0" type="stmt"/>
        <line num="254" count="0" type="stmt"/>
        <line num="255" count="0" type="stmt"/>
        <line num="256" count="0" type="stmt"/>
        <line num="257" count="0" type="stmt"/>
        <line num="258" count="0" type="stmt"/>
        <line num="261" count="0" type="stmt"/>
        <line num="262" count="0" type="stmt"/>
        <line num="263" count="0" type="stmt"/>
        <line num="264" count="0" type="stmt"/>
        <line num="265" count="0" type="stmt"/>
        <line num="266" count="0" type="stmt"/>
        <line num="267" count="0" type="stmt"/>
        <line num="270" count="0" type="stmt"/>
        <line num="271" count="0" type="stmt"/>
        <line num="272" count="0" type="stmt"/>
        <line num="273" count="0" type="stmt"/>
        <line num="274" count="0" type="stmt"/>
        <line num="275" count="0" type="stmt"/>
        <line num="277" count="0" type="stmt"/>
        <line num="278" count="0" type="stmt"/>
        <line num="279" count="0" type="stmt"/>
        <line num="280" count="0" type="stmt"/>
        <line num="281" count="0" type="stmt"/>
        <line num="282" count="0" type="stmt"/>
        <line num="283" count="0" type="stmt"/>
        <line num="289" count="1" type="stmt"/>
        <line num="290" count="0" type="stmt"/>
        <line num="291" count="0" type="stmt"/>
        <line num="292" count="0" type="stmt"/>
        <line num="293" count="0" type="stmt"/>
        <line num="294" count="0" type="stmt"/>
        <line num="295" count="0" type="stmt"/>
        <line num="296" count="0" type="stmt"/>
        <line num="297" count="0" type="stmt"/>
        <line num="298" count="0" type="stmt"/>
        <line num="299" count="0" type="stmt"/>
        <line num="302" count="0" type="stmt"/>
        <line num="303" count="0" type="stmt"/>
        <line num="304" count="0" type="stmt"/>
        <line num="305" count="0" type="stmt"/>
        <line num="306" count="0" type="stmt"/>
        <line num="307" count="0" type="stmt"/>
        <line num="308" count="0" type="stmt"/>
        <line num="309" count="0" type="stmt"/>
        <line num="310" count="0" type="stmt"/>
        <line num="313" count="0" type="stmt"/>
        <line num="314" count="0" type="stmt"/>
        <line num="315" count="0" type="stmt"/>
        <line num="316" count="0" type="stmt"/>
        <line num="317" count="0" type="stmt"/>
        <line num="318" count="0" type="stmt"/>
        <line num="319" count="0" type="stmt"/>
        <line num="322" count="0" type="stmt"/>
        <line num="323" count="0" type="stmt"/>
        <line num="324" count="0" type="stmt"/>
        <line num="325" count="0" type="stmt"/>
        <line num="326" count="0" type="stmt"/>
        <line num="327" count="0" type="stmt"/>
        <line num="328" count="0" type="stmt"/>
        <line num="329" count="0" type="stmt"/>
        <line num="330" count="0" type="stmt"/>
        <line num="332" count="0" type="stmt"/>
        <line num="333" count="0" type="stmt"/>
        <line num="334" count="0" type="stmt"/>
        <line num="335" count="0" type="stmt"/>
        <line num="336" count="0" type="stmt"/>
        <line num="337" count="0" type="stmt"/>
        <line num="338" count="0" type="stmt"/>
        <line num="339" count="0" type="stmt"/>
        <line num="340" count="0" type="stmt"/>
        <line num="345" count="1" type="stmt"/>
        <line num="346" count="0" type="stmt"/>
        <line num="347" count="0" type="stmt"/>
        <line num="348" count="0" type="stmt"/>
        <line num="349" count="0" type="stmt"/>
        <line num="350" count="0" type="stmt"/>
        <line num="351" count="0" type="stmt"/>
        <line num="352" count="0" type="stmt"/>
        <line num="353" count="0" type="stmt"/>
        <line num="354" count="0" type="stmt"/>
        <line num="355" count="0" type="stmt"/>
        <line num="356" count="0" type="stmt"/>
        <line num="357" count="0" type="stmt"/>
        <line num="358" count="0" type="stmt"/>
        <line num="360" count="0" type="stmt"/>
        <line num="361" count="0" type="stmt"/>
        <line num="362" count="0" type="stmt"/>
        <line num="363" count="0" type="stmt"/>
        <line num="364" count="0" type="stmt"/>
        <line num="365" count="0" type="stmt"/>
        <line num="366" count="0" type="stmt"/>
        <line num="367" count="0" type="stmt"/>
        <line num="368" count="0" type="stmt"/>
        <line num="369" count="0" type="stmt"/>
        <line num="370" count="0" type="stmt"/>
        <line num="371" count="0" type="stmt"/>
        <line num="372" count="0" type="stmt"/>
        <line num="373" count="0" type="stmt"/>
        <line num="374" count="0" type="stmt"/>
        <line num="376" count="0" type="stmt"/>
        <line num="377" count="0" type="stmt"/>
        <line num="378" count="0" type="stmt"/>
        <line num="379" count="0" type="stmt"/>
        <line num="380" count="0" type="stmt"/>
        <line num="381" count="0" type="stmt"/>
        <line num="382" count="0" type="stmt"/>
        <line num="384" count="0" type="stmt"/>
        <line num="385" count="0" type="stmt"/>
        <line num="386" count="0" type="stmt"/>
        <line num="387" count="0" type="stmt"/>
        <line num="388" count="0" type="stmt"/>
        <line num="391" count="0" type="stmt"/>
        <line num="392" count="0" type="stmt"/>
        <line num="393" count="0" type="stmt"/>
        <line num="394" count="0" type="stmt"/>
        <line num="395" count="0" type="stmt"/>
        <line num="396" count="0" type="stmt"/>
        <line num="397" count="0" type="stmt"/>
        <line num="398" count="0" type="stmt"/>
        <line num="399" count="0" type="stmt"/>
        <line num="402" count="0" type="stmt"/>
        <line num="403" count="0" type="stmt"/>
        <line num="404" count="0" type="stmt"/>
        <line num="405" count="0" type="stmt"/>
        <line num="406" count="0" type="stmt"/>
        <line num="407" count="0" type="stmt"/>
        <line num="408" count="0" type="stmt"/>
        <line num="410" count="0" type="stmt"/>
        <line num="411" count="0" type="stmt"/>
        <line num="412" count="0" type="stmt"/>
        <line num="413" count="0" type="stmt"/>
        <line num="414" count="0" type="stmt"/>
        <line num="415" count="0" type="stmt"/>
        <line num="416" count="0" type="stmt"/>
        <line num="417" count="0" type="stmt"/>
        <line num="418" count="0" type="stmt"/>
        <line num="419" count="0" type="stmt"/>
        <line num="420" count="0" type="stmt"/>
        <line num="421" count="0" type="stmt"/>
        <line num="422" count="0" type="stmt"/>
        <line num="423" count="0" type="stmt"/>
        <line num="424" count="0" type="stmt"/>
        <line num="425" count="0" type="stmt"/>
        <line num="426" count="0" type="stmt"/>
        <line num="427" count="0" type="stmt"/>
        <line num="428" count="0" type="stmt"/>
        <line num="429" count="0" type="stmt"/>
        <line num="430" count="0" type="stmt"/>
        <line num="435" count="1" type="stmt"/>
        <line num="436" count="0" type="stmt"/>
        <line num="437" count="0" type="stmt"/>
        <line num="438" count="0" type="stmt"/>
        <line num="439" count="0" type="stmt"/>
        <line num="440" count="0" type="stmt"/>
        <line num="441" count="0" type="stmt"/>
        <line num="442" count="0" type="stmt"/>
        <line num="443" count="0" type="stmt"/>
        <line num="444" count="0" type="stmt"/>
        <line num="445" count="0" type="stmt"/>
        <line num="446" count="0" type="stmt"/>
        <line num="447" count="0" type="stmt"/>
        <line num="448" count="0" type="stmt"/>
        <line num="450" count="0" type="stmt"/>
        <line num="451" count="0" type="stmt"/>
        <line num="452" count="0" type="stmt"/>
        <line num="453" count="0" type="stmt"/>
        <line num="454" count="0" type="stmt"/>
        <line num="455" count="0" type="stmt"/>
        <line num="456" count="0" type="stmt"/>
        <line num="457" count="0" type="stmt"/>
        <line num="458" count="0" type="stmt"/>
        <line num="459" count="0" type="stmt"/>
        <line num="460" count="0" type="stmt"/>
        <line num="461" count="0" type="stmt"/>
        <line num="464" count="0" type="stmt"/>
        <line num="465" count="0" type="stmt"/>
        <line num="466" count="0" type="stmt"/>
        <line num="467" count="0" type="stmt"/>
        <line num="468" count="0" type="stmt"/>
        <line num="469" count="0" type="stmt"/>
        <line num="470" count="0" type="stmt"/>
        <line num="471" count="0" type="stmt"/>
        <line num="472" count="0" type="stmt"/>
        <line num="475" count="0" type="stmt"/>
        <line num="476" count="0" type="stmt"/>
        <line num="477" count="0" type="stmt"/>
        <line num="478" count="0" type="stmt"/>
        <line num="479" count="0" type="stmt"/>
        <line num="480" count="0" type="stmt"/>
        <line num="481" count="0" type="stmt"/>
        <line num="484" count="0" type="stmt"/>
        <line num="485" count="0" type="stmt"/>
        <line num="486" count="0" type="stmt"/>
        <line num="487" count="0" type="stmt"/>
        <line num="488" count="0" type="stmt"/>
        <line num="489" count="0" type="stmt"/>
        <line num="490" count="0" type="stmt"/>
        <line num="491" count="0" type="stmt"/>
        <line num="492" count="0" type="stmt"/>
        <line num="493" count="0" type="stmt"/>
        <line num="495" count="0" type="stmt"/>
        <line num="496" count="0" type="stmt"/>
        <line num="498" count="0" type="stmt"/>
        <line num="499" count="0" type="stmt"/>
        <line num="500" count="0" type="stmt"/>
        <line num="501" count="0" type="stmt"/>
        <line num="502" count="0" type="stmt"/>
        <line num="503" count="0" type="stmt"/>
        <line num="504" count="0" type="stmt"/>
        <line num="505" count="0" type="stmt"/>
        <line num="506" count="0" type="stmt"/>
        <line num="507" count="0" type="stmt"/>
        <line num="508" count="0" type="stmt"/>
        <line num="509" count="0" type="stmt"/>
        <line num="510" count="0" type="stmt"/>
        <line num="511" count="0" type="stmt"/>
        <line num="512" count="0" type="stmt"/>
        <line num="513" count="0" type="stmt"/>
        <line num="514" count="0" type="stmt"/>
        <line num="515" count="0" type="stmt"/>
        <line num="517" count="0" type="stmt"/>
        <line num="518" count="0" type="stmt"/>
        <line num="519" count="0" type="stmt"/>
        <line num="520" count="0" type="stmt"/>
        <line num="521" count="0" type="stmt"/>
        <line num="522" count="0" type="stmt"/>
        <line num="523" count="0" type="stmt"/>
        <line num="524" count="0" type="stmt"/>
        <line num="525" count="0" type="stmt"/>
      </file>
      <file name="userController.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/userController.ts">
        <metrics statements="43" coveredstatements="14" conditionals="0" coveredconditionals="0" methods="1" coveredmethods="0"/>
        <line num="1" count="1" type="stmt"/>
        <line num="2" count="1" type="stmt"/>
        <line num="3" count="1" type="stmt"/>
        <line num="4" count="1" type="stmt"/>
        <line num="7" count="1" type="stmt"/>
        <line num="9" count="1" type="stmt"/>
        <line num="10" count="1" type="stmt"/>
        <line num="11" count="1" type="stmt"/>
        <line num="12" count="1" type="stmt"/>
        <line num="13" count="1" type="stmt"/>
        <line num="14" count="1" type="stmt"/>
        <line num="16" count="1" type="stmt"/>
        <line num="19" count="0" type="stmt"/>
        <line num="21" count="0" type="stmt"/>
        <line num="22" count="0" type="stmt"/>
        <line num="24" count="0" type="stmt"/>
        <line num="25" count="0" type="stmt"/>
        <line num="26" count="0" type="stmt"/>
        <line num="27" count="0" type="stmt"/>
        <line num="28" count="0" type="stmt"/>
        <line num="29" count="0" type="stmt"/>
        <line num="31" count="0" type="stmt"/>
        <line num="32" count="0" type="stmt"/>
        <line num="33" count="0" type="stmt"/>
        <line num="34" count="0" type="stmt"/>
        <line num="36" count="0" type="stmt"/>
        <line num="39" count="0" type="stmt"/>
        <line num="40" count="0" type="stmt"/>
        <line num="41" count="0" type="stmt"/>
        <line num="42" count="0" type="stmt"/>
        <line num="43" count="0" type="stmt"/>
        <line num="46" count="0" type="stmt"/>
        <line num="49" count="0" type="stmt"/>
        <line num="51" count="0" type="stmt"/>
        <line num="52" count="0" type="stmt"/>
        <line num="53" count="0" type="stmt"/>
        <line num="54" count="0" type="stmt"/>
        <line num="59" count="1" type="stmt"/>
        <line num="60" count="0" type="stmt"/>
        <line num="61" count="0" type="stmt"/>
        <line num="66" count="1" type="stmt"/>
        <line num="67" count="0" type="stmt"/>
        <line num="68" count="0" type="stmt"/>
      </file>
    </package>
    <package name="dwengo_backend.controllers.joinrequest">
      <metrics statements="40" coveredstatements="40" conditionals="18" coveredconditionals="16" methods="1" coveredmethods="1"/>
      <file name="joinRequestController.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/joinrequest/joinRequestController.ts">
        <metrics statements="40" coveredstatements="40" conditionals="18" coveredconditionals="16" methods="1" coveredmethods="1"/>
        <line num="2" count="1" type="stmt"/>
        <line num="5" count="1" type="stmt"/>
        <line num="6" count="1" type="stmt"/>
        <line num="9" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="10" count="21" type="cond" truecount="1" falsecount="0"/>
        <line num="11" count="15" type="stmt"/>
        <line num="12" count="15" type="cond" truecount="1" falsecount="0"/>
        <line num="13" count="8" type="cond" truecount="1" falsecount="0"/>
        <line num="14" count="7" type="cond" truecount="0" falsecount="1"/>
        <line num="15" count="7" type="cond" truecount="0" falsecount="1"/>
        <line num="16" count="7" type="stmt"/>
        <line num="17" count="15" type="stmt"/>
        <line num="25" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="26" count="7" type="cond" truecount="1" falsecount="0"/>
        <line num="27" count="7" type="stmt"/>
        <line num="28" count="7" type="cond" truecount="1" falsecount="0"/>
        <line num="29" count="4" type="stmt"/>
        <line num="30" count="4" type="stmt"/>
        <line num="39" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="40" count="6" type="stmt"/>
        <line num="41" count="6" type="stmt"/>
        <line num="42" count="6" type="stmt"/>
        <line num="43" count="6" type="stmt"/>
        <line num="45" count="6" type="cond" truecount="2" falsecount="0"/>
        <line num="46" count="1" type="stmt"/>
        <line num="47" count="1" type="stmt"/>
        <line num="49" count="6" type="cond" truecount="1" falsecount="0"/>
        <line num="50" count="4" type="cond" truecount="1" falsecount="0"/>
        <line num="51" count="1" type="stmt"/>
        <line num="52" count="6" type="cond" truecount="2" falsecount="0"/>
        <line num="53" count="1" type="stmt"/>
        <line num="54" count="1" type="stmt"/>
        <line num="55" count="1" type="stmt"/>
        <line num="56" count="6" type="stmt"/>
        <line num="63" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="64" count="2" type="stmt"/>
        <line num="65" count="2" type="stmt"/>
        <line num="66" count="2" type="cond" truecount="1" falsecount="0"/>
        <line num="67" count="1" type="stmt"/>
        <line num="68" count="1" type="stmt"/>
      </file>
    </package>
    <package name="dwengo_backend.controllers.learningObject">
      <metrics statements="101" coveredstatements="7" conditionals="0" coveredconditionals="0" methods="6" coveredmethods="0"/>
      <file name="learningObjectController.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/learningObject/learningObjectController.ts">
        <metrics statements="101" coveredstatements="7" conditionals="0" coveredconditionals="0" methods="6" coveredmethods="0"/>
        <line num="2" count="1" type="stmt"/>
        <line num="10" count="1" type="stmt"/>
        <line num="13" count="0" type="stmt"/>
        <line num="14" count="0" type="stmt"/>
        <line num="15" count="0" type="stmt"/>
        <line num="16" count="0" type="stmt"/>
        <line num="19" count="1" type="stmt"/>
        <line num="20" count="0" type="stmt"/>
        <line num="21" count="0" type="stmt"/>
        <line num="22" count="0" type="stmt"/>
        <line num="23" count="0" type="stmt"/>
        <line num="24" count="0" type="stmt"/>
        <line num="25" count="0" type="stmt"/>
        <line num="26" count="0" type="stmt"/>
        <line num="27" count="0" type="stmt"/>
        <line num="28" count="0" type="stmt"/>
        <line num="29" count="0" type="stmt"/>
        <line num="30" count="0" type="stmt"/>
        <line num="31" count="0" type="stmt"/>
        <line num="34" count="1" type="stmt"/>
        <line num="35" count="0" type="stmt"/>
        <line num="36" count="0" type="stmt"/>
        <line num="37" count="0" type="stmt"/>
        <line num="38" count="0" type="stmt"/>
        <line num="39" count="0" type="stmt"/>
        <line num="40" count="0" type="stmt"/>
        <line num="41" count="0" type="stmt"/>
        <line num="42" count="0" type="stmt"/>
        <line num="43" count="0" type="stmt"/>
        <line num="44" count="0" type="stmt"/>
        <line num="45" count="0" type="stmt"/>
        <line num="46" count="0" type="stmt"/>
        <line num="47" count="0" type="stmt"/>
        <line num="48" count="0" type="stmt"/>
        <line num="49" count="0" type="stmt"/>
        <line num="50" count="0" type="stmt"/>
        <line num="51" count="0" type="stmt"/>
        <line num="54" count="1" type="stmt"/>
        <line num="55" count="0" type="stmt"/>
        <line num="56" count="0" type="stmt"/>
        <line num="57" count="0" type="stmt"/>
        <line num="58" count="0" type="stmt"/>
        <line num="59" count="0" type="stmt"/>
        <line num="60" count="0" type="stmt"/>
        <line num="61" count="0" type="stmt"/>
        <line num="62" count="0" type="stmt"/>
        <line num="63" count="0" type="stmt"/>
        <line num="64" count="0" type="stmt"/>
        <line num="65" count="0" type="stmt"/>
        <line num="66" count="0" type="stmt"/>
        <line num="67" count="0" type="stmt"/>
        <line num="70" count="1" type="stmt"/>
        <line num="71" count="0" type="stmt"/>
        <line num="72" count="0" type="stmt"/>
        <line num="73" count="0" type="stmt"/>
        <line num="74" count="0" type="stmt"/>
        <line num="75" count="0" type="stmt"/>
        <line num="76" count="0" type="stmt"/>
        <line num="77" count="0" type="stmt"/>
        <line num="78" count="0" type="stmt"/>
        <line num="79" count="0" type="stmt"/>
        <line num="80" count="0" type="stmt"/>
        <line num="81" count="0" type="stmt"/>
        <line num="82" count="0" type="stmt"/>
        <line num="83" count="0" type="stmt"/>
        <line num="86" count="1" type="stmt"/>
        <line num="87" count="0" type="stmt"/>
        <line num="88" count="0" type="stmt"/>
        <line num="89" count="0" type="stmt"/>
        <line num="91" count="0" type="stmt"/>
        <line num="92" count="0" type="stmt"/>
        <line num="93" count="0" type="stmt"/>
        <line num="94" count="0" type="stmt"/>
        <line num="95" count="0" type="stmt"/>
        <line num="96" count="0" type="stmt"/>
        <line num="97" count="0" type="stmt"/>
        <line num="98" count="0" type="stmt"/>
        <line num="100" count="0" type="stmt"/>
        <line num="101" count="0" type="stmt"/>
        <line num="102" count="0" type="stmt"/>
        <line num="103" count="0" type="stmt"/>
        <line num="104" count="0" type="stmt"/>
        <line num="105" count="0" type="stmt"/>
        <line num="108" count="0" type="stmt"/>
        <line num="109" count="0" type="stmt"/>
        <line num="110" count="0" type="stmt"/>
        <line num="111" count="0" type="stmt"/>
        <line num="112" count="0" type="stmt"/>
        <line num="113" count="0" type="stmt"/>
        <line num="115" count="0" type="stmt"/>
        <line num="116" count="0" type="stmt"/>
        <line num="117" count="0" type="stmt"/>
        <line num="118" count="0" type="stmt"/>
        <line num="119" count="0" type="stmt"/>
        <line num="120" count="0" type="stmt"/>
        <line num="122" count="0" type="stmt"/>
        <line num="123" count="0" type="stmt"/>
        <line num="124" count="0" type="stmt"/>
        <line num="125" count="0" type="stmt"/>
        <line num="126" count="0" type="stmt"/>
        <line num="127" count="0" type="stmt"/>
      </file>
    </package>
    <package name="dwengo_backend.controllers.learningPath">
      <metrics statements="31" coveredstatements="3" conditionals="0" coveredconditionals="0" methods="2" coveredmethods="0"/>
      <file name="learningPathController.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/learningPath/learningPathController.ts">
        <metrics statements="31" coveredstatements="3" conditionals="0" coveredconditionals="0" methods="2" coveredmethods="0"/>
        <line num="2" count="1" type="stmt"/>
        <line num="21" count="1" type="stmt"/>
        <line num="22" count="0" type="stmt"/>
        <line num="23" count="0" type="stmt"/>
        <line num="24" count="0" type="stmt"/>
        <line num="25" count="0" type="stmt"/>
        <line num="26" count="0" type="stmt"/>
        <line num="27" count="0" type="stmt"/>
        <line num="28" count="0" type="stmt"/>
        <line num="29" count="0" type="stmt"/>
        <line num="31" count="0" type="stmt"/>
        <line num="32" count="0" type="stmt"/>
        <line num="33" count="0" type="stmt"/>
        <line num="34" count="0" type="stmt"/>
        <line num="35" count="0" type="stmt"/>
        <line num="36" count="0" type="stmt"/>
        <line num="37" count="0" type="stmt"/>
        <line num="43" count="1" type="stmt"/>
        <line num="44" count="0" type="stmt"/>
        <line num="45" count="0" type="stmt"/>
        <line num="46" count="0" type="stmt"/>
        <line num="48" count="0" type="stmt"/>
        <line num="49" count="0" type="stmt"/>
        <line num="50" count="0" type="stmt"/>
        <line num="51" count="0" type="stmt"/>
        <line num="53" count="0" type="stmt"/>
        <line num="54" count="0" type="stmt"/>
        <line num="55" count="0" type="stmt"/>
        <line num="56" count="0" type="stmt"/>
        <line num="57" count="0" type="stmt"/>
        <line num="58" count="0" type="stmt"/>
      </file>
    </package>
    <package name="dwengo_backend.controllers.question">
      <metrics statements="151" coveredstatements="18" conditionals="1" coveredconditionals="1" methods="1" coveredmethods="1"/>
      <file name="questionController.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/question/questionController.ts">
        <metrics statements="151" coveredstatements="18" conditionals="1" coveredconditionals="1" methods="1" coveredmethods="1"/>
        <line num="2" count="1" type="stmt"/>
        <line num="4" count="1" type="stmt"/>
        <line num="5" count="1" type="stmt"/>
        <line num="7" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="8" count="84" type="stmt"/>
        <line num="9" count="84" type="stmt"/>
        <line num="10" count="0" type="stmt"/>
        <line num="11" count="0" type="stmt"/>
        <line num="12" count="0" type="stmt"/>
        <line num="13" count="0" type="stmt"/>
        <line num="14" count="0" type="stmt"/>
        <line num="15" count="0" type="stmt"/>
        <line num="16" count="0" type="stmt"/>
        <line num="17" count="0" type="stmt"/>
        <line num="20" count="1" type="stmt"/>
        <line num="21" count="0" type="stmt"/>
        <line num="22" count="0" type="stmt"/>
        <line num="23" count="0" type="stmt"/>
        <line num="24" count="0" type="stmt"/>
        <line num="25" count="0" type="stmt"/>
        <line num="26" count="0" type="stmt"/>
        <line num="27" count="0" type="stmt"/>
        <line num="28" count="0" type="stmt"/>
        <line num="29" count="0" type="stmt"/>
        <line num="30" count="0" type="stmt"/>
        <line num="31" count="0" type="stmt"/>
        <line num="32" count="0" type="stmt"/>
        <line num="34" count="0" type="stmt"/>
        <line num="35" count="0" type="stmt"/>
        <line num="36" count="0" type="stmt"/>
        <line num="37" count="0" type="stmt"/>
        <line num="38" count="0" type="stmt"/>
        <line num="40" count="0" type="stmt"/>
        <line num="41" count="0" type="stmt"/>
        <line num="42" count="0" type="stmt"/>
        <line num="43" count="0" type="stmt"/>
        <line num="44" count="0" type="stmt"/>
        <line num="45" count="0" type="stmt"/>
        <line num="46" count="0" type="stmt"/>
        <line num="47" count="0" type="stmt"/>
        <line num="48" count="0" type="stmt"/>
        <line num="49" count="0" type="stmt"/>
        <line num="50" count="0" type="stmt"/>
        <line num="51" count="0" type="stmt"/>
        <line num="52" count="0" type="stmt"/>
        <line num="53" count="0" type="stmt"/>
        <line num="55" count="0" type="stmt"/>
        <line num="56" count="0" type="stmt"/>
        <line num="59" count="1" type="stmt"/>
        <line num="60" count="0" type="stmt"/>
        <line num="61" count="0" type="stmt"/>
        <line num="62" count="0" type="stmt"/>
        <line num="63" count="0" type="stmt"/>
        <line num="64" count="0" type="stmt"/>
        <line num="65" count="0" type="stmt"/>
        <line num="66" count="0" type="stmt"/>
        <line num="67" count="0" type="stmt"/>
        <line num="68" count="0" type="stmt"/>
        <line num="69" count="0" type="stmt"/>
        <line num="71" count="0" type="stmt"/>
        <line num="72" count="0" type="stmt"/>
        <line num="73" count="0" type="stmt"/>
        <line num="74" count="0" type="stmt"/>
        <line num="75" count="0" type="stmt"/>
        <line num="77" count="0" type="stmt"/>
        <line num="78" count="0" type="stmt"/>
        <line num="79" count="0" type="stmt"/>
        <line num="80" count="0" type="stmt"/>
        <line num="81" count="0" type="stmt"/>
        <line num="82" count="0" type="stmt"/>
        <line num="83" count="0" type="stmt"/>
        <line num="84" count="0" type="stmt"/>
        <line num="85" count="0" type="stmt"/>
        <line num="86" count="0" type="stmt"/>
        <line num="87" count="0" type="stmt"/>
        <line num="88" count="0" type="stmt"/>
        <line num="90" count="0" type="stmt"/>
        <line num="91" count="0" type="stmt"/>
        <line num="94" count="1" type="stmt"/>
        <line num="95" count="0" type="stmt"/>
        <line num="96" count="0" type="stmt"/>
        <line num="98" count="0" type="stmt"/>
        <line num="99" count="0" type="stmt"/>
        <line num="100" count="0" type="stmt"/>
        <line num="101" count="0" type="stmt"/>
        <line num="103" count="0" type="stmt"/>
        <line num="104" count="0" type="stmt"/>
        <line num="105" count="0" type="stmt"/>
        <line num="108" count="1" type="stmt"/>
        <line num="109" count="0" type="stmt"/>
        <line num="110" count="0" type="stmt"/>
        <line num="111" count="0" type="stmt"/>
        <line num="112" count="0" type="stmt"/>
        <line num="113" count="0" type="stmt"/>
        <line num="114" count="0" type="stmt"/>
        <line num="115" count="0" type="stmt"/>
        <line num="116" count="0" type="stmt"/>
        <line num="119" count="1" type="stmt"/>
        <line num="120" count="0" type="stmt"/>
        <line num="121" count="0" type="stmt"/>
        <line num="123" count="0" type="stmt"/>
        <line num="124" count="0" type="stmt"/>
        <line num="125" count="0" type="stmt"/>
        <line num="126" count="0" type="stmt"/>
        <line num="127" count="0" type="stmt"/>
        <line num="128" count="0" type="stmt"/>
        <line num="131" count="1" type="stmt"/>
        <line num="132" count="0" type="stmt"/>
        <line num="133" count="0" type="stmt"/>
        <line num="134" count="0" type="stmt"/>
        <line num="135" count="0" type="stmt"/>
        <line num="138" count="1" type="stmt"/>
        <line num="139" count="0" type="stmt"/>
        <line num="140" count="0" type="stmt"/>
        <line num="141" count="0" type="stmt"/>
        <line num="142" count="0" type="stmt"/>
        <line num="143" count="0" type="stmt"/>
        <line num="144" count="0" type="stmt"/>
        <line num="145" count="0" type="stmt"/>
        <line num="148" count="1" type="stmt"/>
        <line num="149" count="0" type="stmt"/>
        <line num="150" count="0" type="stmt"/>
        <line num="151" count="0" type="stmt"/>
        <line num="152" count="0" type="stmt"/>
        <line num="153" count="0" type="stmt"/>
        <line num="154" count="0" type="stmt"/>
        <line num="155" count="0" type="stmt"/>
        <line num="158" count="1" type="stmt"/>
        <line num="159" count="0" type="stmt"/>
        <line num="160" count="0" type="stmt"/>
        <line num="161" count="0" type="stmt"/>
        <line num="162" count="0" type="stmt"/>
        <line num="163" count="0" type="stmt"/>
        <line num="164" count="0" type="stmt"/>
        <line num="165" count="0" type="stmt"/>
        <line num="166" count="0" type="stmt"/>
        <line num="169" count="1" type="stmt"/>
        <line num="170" count="0" type="stmt"/>
        <line num="171" count="0" type="stmt"/>
        <line num="172" count="0" type="stmt"/>
        <line num="173" count="0" type="stmt"/>
        <line num="176" count="1" type="stmt"/>
        <line num="177" count="0" type="stmt"/>
        <line num="178" count="0" type="stmt"/>
        <line num="179" count="0" type="stmt"/>
        <line num="180" count="0" type="stmt"/>
        <line num="183" count="1" type="stmt"/>
        <line num="184" count="0" type="stmt"/>
        <line num="185" count="0" type="stmt"/>
        <line num="186" count="0" type="stmt"/>
        <line num="187" count="0" type="stmt"/>
      </file>
    </package>
    <package name="dwengo_backend.controllers.student">
      <metrics statements="155" coveredstatements="75" conditionals="15" coveredconditionals="13" methods="8" coveredmethods="5"/>
      <file name="studentAssignmentController.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/student/studentAssignmentController.ts">
        <metrics statements="35" coveredstatements="28" conditionals="10" coveredconditionals="8" methods="2" coveredmethods="2"/>
        <line num="2" count="1" type="stmt"/>
        <line num="5" count="1" type="stmt"/>
        <line num="7" count="1" type="stmt"/>
        <line num="9" count="14" type="cond" truecount="1" falsecount="0"/>
        <line num="10" count="14" type="stmt"/>
        <line num="11" count="14" type="cond" truecount="3" falsecount="0"/>
        <line num="12" count="8" type="stmt"/>
        <line num="13" count="8" type="stmt"/>
        <line num="15" count="14" type="stmt"/>
        <line num="17" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="18" count="14" type="stmt"/>
        <line num="19" count="14" type="stmt"/>
        <line num="20" count="14" type="stmt"/>
        <line num="21" count="14" type="stmt"/>
        <line num="22" count="14" type="stmt"/>
        <line num="27" count="14" type="stmt"/>
        <line num="28" count="14" type="cond" truecount="2" falsecount="0"/>
        <line num="30" count="14" type="cond" truecount="1" falsecount="0"/>
        <line num="33" count="14" type="cond" truecount="0" falsecount="1"/>
        <line num="34" count="0" type="stmt"/>
        <line num="35" count="0" type="stmt"/>
        <line num="36" count="0" type="stmt"/>
        <line num="38" count="14" type="stmt"/>
        <line num="39" count="14" type="stmt"/>
        <line num="40" count="14" type="stmt"/>
        <line num="41" count="14" type="stmt"/>
        <line num="42" count="14" type="stmt"/>
        <line num="43" count="14" type="stmt"/>
        <line num="44" count="14" type="stmt"/>
        <line num="45" count="14" type="cond" truecount="0" falsecount="1"/>
        <line num="46" count="0" type="stmt"/>
        <line num="47" count="0" type="stmt"/>
        <line num="48" count="0" type="stmt"/>
        <line num="49" count="0" type="stmt"/>
        <line num="50" count="14" type="stmt"/>
      </file>
      <file name="studentAuthController.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/student/studentAuthController.ts">
        <metrics statements="31" coveredstatements="6" conditionals="0" coveredconditionals="0" methods="0" coveredmethods="0"/>
        <line num="2" count="1" type="stmt"/>
        <line num="3" count="1" type="stmt"/>
        <line num="5" count="1" type="stmt"/>
        <line num="6" count="1" type="stmt"/>
        <line num="7" count="1" type="stmt"/>
        <line num="17" count="1" type="stmt"/>
        <line num="18" count="0" type="stmt"/>
        <line num="21" count="0" type="stmt"/>
        <line num="22" count="0" type="stmt"/>
        <line num="23" count="0" type="stmt"/>
        <line num="24" count="0" type="stmt"/>
        <line num="27" count="0" type="stmt"/>
        <line num="28" count="0" type="stmt"/>
        <line num="29" count="0" type="stmt"/>
        <line num="30" count="0" type="stmt"/>
        <line num="31" count="0" type="stmt"/>
        <line num="35" count="0" type="stmt"/>
        <line num="37" count="0" type="stmt"/>
        <line num="38" count="0" type="stmt"/>
        <line num="39" count="0" type="stmt"/>
        <line num="40" count="0" type="stmt"/>
        <line num="43" count="0" type="stmt"/>
        <line num="44" count="0" type="stmt"/>
        <line num="45" count="0" type="stmt"/>
        <line num="46" count="0" type="stmt"/>
        <line num="47" count="0" type="stmt"/>
        <line num="49" count="0" type="stmt"/>
        <line num="50" count="0" type="stmt"/>
        <line num="51" count="0" type="stmt"/>
        <line num="52" count="0" type="stmt"/>
        <line num="53" count="0" type="stmt"/>
      </file>
      <file name="studentClassController.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/student/studentClassController.ts">
        <metrics statements="10" coveredstatements="10" conditionals="1" coveredconditionals="1" methods="0" coveredmethods="0"/>
        <line num="2" count="1" type="stmt"/>
        <line num="3" count="1" type="stmt"/>
        <line num="5" count="1" type="stmt"/>
        <line num="12" count="1" type="stmt"/>
        <line num="13" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="14" count="1" type="stmt"/>
        <line num="15" count="1" type="stmt"/>
        <line num="16" count="1" type="stmt"/>
        <line num="17" count="1" type="stmt"/>
        <line num="18" count="1" type="stmt"/>
      </file>
      <file name="studentSubmissionController.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/student/studentSubmissionController.ts">
        <metrics statements="26" coveredstatements="26" conditionals="4" coveredconditionals="4" methods="3" coveredmethods="3"/>
        <line num="2" count="1" type="stmt"/>
        <line num="5" count="1" type="stmt"/>
        <line num="7" count="1" type="stmt"/>
        <line num="8" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="10" count="2" type="stmt"/>
        <line num="11" count="2" type="stmt"/>
        <line num="12" count="2" type="stmt"/>
        <line num="14" count="2" type="cond" truecount="1" falsecount="0"/>
        <line num="15" count="1" type="stmt"/>
        <line num="16" count="1" type="stmt"/>
        <line num="18" count="1" type="stmt"/>
        <line num="19" count="1" type="stmt"/>
        <line num="20" count="2" type="stmt"/>
        <line num="22" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="23" count="1" type="stmt"/>
        <line num="24" count="1" type="stmt"/>
        <line num="26" count="1" type="stmt"/>
        <line num="28" count="1" type="stmt"/>
        <line num="29" count="1" type="stmt"/>
        <line num="31" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="32" count="1" type="stmt"/>
        <line num="33" count="1" type="stmt"/>
        <line num="35" count="1" type="stmt"/>
        <line num="37" count="1" type="stmt"/>
        <line num="38" count="1" type="stmt"/>
        <line num="39" count="1" type="stmt"/>
      </file>
      <file name="studentTeamController.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/student/studentTeamController.ts">
        <metrics statements="53" coveredstatements="5" conditionals="0" coveredconditionals="0" methods="3" coveredmethods="0"/>
        <line num="4" count="1" type="stmt"/>
        <line num="5" count="1" type="stmt"/>
        <line num="10" count="1" type="stmt"/>
        <line num="11" count="0" type="stmt"/>
        <line num="12" count="0" type="stmt"/>
        <line num="14" count="0" type="stmt"/>
        <line num="16" count="0" type="stmt"/>
        <line num="17" count="0" type="stmt"/>
        <line num="18" count="0" type="stmt"/>
        <line num="19" count="0" type="stmt"/>
        <line num="20" count="0" type="stmt"/>
        <line num="21" count="0" type="stmt"/>
        <line num="26" count="1" type="stmt"/>
        <line num="27" count="0" type="stmt"/>
        <line num="28" count="0" type="stmt"/>
        <line num="29" count="0" type="stmt"/>
        <line num="31" count="0" type="stmt"/>
        <line num="32" count="0" type="stmt"/>
        <line num="33" count="0" type="stmt"/>
        <line num="34" count="0" type="stmt"/>
        <line num="36" count="0" type="stmt"/>
        <line num="38" count="0" type="stmt"/>
        <line num="39" count="0" type="stmt"/>
        <line num="40" count="0" type="stmt"/>
        <line num="41" count="0" type="stmt"/>
        <line num="43" count="0" type="stmt"/>
        <line num="44" count="0" type="stmt"/>
        <line num="45" count="0" type="stmt"/>
        <line num="46" count="0" type="stmt"/>
        <line num="47" count="0" type="stmt"/>
        <line num="48" count="0" type="stmt"/>
        <line num="53" count="1" type="stmt"/>
        <line num="54" count="0" type="stmt"/>
        <line num="55" count="0" type="stmt"/>
        <line num="56" count="0" type="stmt"/>
        <line num="57" count="0" type="stmt"/>
        <line num="58" count="0" type="stmt"/>
        <line num="60" count="0" type="stmt"/>
        <line num="62" count="0" type="stmt"/>
        <line num="63" count="0" type="stmt"/>
        <line num="64" count="0" type="stmt"/>
        <line num="65" count="0" type="stmt"/>
        <line num="67" count="0" type="stmt"/>
        <line num="69" count="0" type="stmt"/>
        <line num="70" count="0" type="stmt"/>
        <line num="71" count="0" type="stmt"/>
        <line num="72" count="0" type="stmt"/>
        <line num="74" count="0" type="stmt"/>
        <line num="75" count="0" type="stmt"/>
        <line num="76" count="0" type="stmt"/>
        <line num="77" count="0" type="stmt"/>
        <line num="78" count="0" type="stmt"/>
        <line num="79" count="0" type="stmt"/>
      </file>
    </package>
    <package name="dwengo_backend.controllers.teacher">
      <metrics statements="604" coveredstatements="282" conditionals="40" coveredconditionals="40" methods="19" coveredmethods="10"/>
      <file name="feedbackController.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/teacher/feedbackController.ts">
        <metrics statements="60" coveredstatements="9" conditionals="0" coveredconditionals="0" methods="5" coveredmethods="0"/>
        <line num="2" count="1" type="stmt"/>
        <line num="5" count="1" type="stmt"/>
        <line num="7" count="1" type="stmt"/>
        <line num="8" count="1" type="stmt"/>
        <line num="9" count="0" type="stmt"/>
        <line num="10" count="0" type="stmt"/>
        <line num="11" count="0" type="stmt"/>
        <line num="13" count="0" type="stmt"/>
        <line num="14" count="0" type="stmt"/>
        <line num="15" count="0" type="stmt"/>
        <line num="16" count="0" type="stmt"/>
        <line num="17" count="0" type="stmt"/>
        <line num="18" count="0" type="stmt"/>
        <line num="20" count="1" type="stmt"/>
        <line num="21" count="0" type="stmt"/>
        <line num="22" count="0" type="stmt"/>
        <line num="24" count="0" type="stmt"/>
        <line num="27" count="0" type="stmt"/>
        <line num="29" count="0" type="stmt"/>
        <line num="30" count="0" type="stmt"/>
        <line num="31" count="0" type="stmt"/>
        <line num="32" count="0" type="stmt"/>
        <line num="33" count="0" type="stmt"/>
        <line num="35" count="0" type="stmt"/>
        <line num="37" count="1" type="stmt"/>
        <line num="38" count="0" type="stmt"/>
        <line num="39" count="0" type="stmt"/>
        <line num="40" count="0" type="stmt"/>
        <line num="42" count="0" type="stmt"/>
        <line num="43" count="0" type="stmt"/>
        <line num="44" count="0" type="stmt"/>
        <line num="45" count="0" type="stmt"/>
        <line num="46" count="0" type="stmt"/>
        <line num="47" count="0" type="stmt"/>
        <line num="48" count="0" type="stmt"/>
        <line num="49" count="0" type="stmt"/>
        <line num="50" count="0" type="stmt"/>
        <line num="52" count="0" type="stmt"/>
        <line num="54" count="1" type="stmt"/>
        <line num="55" count="0" type="stmt"/>
        <line num="56" count="0" type="stmt"/>
        <line num="57" count="0" type="stmt"/>
        <line num="59" count="0" type="stmt"/>
        <line num="60" count="0" type="stmt"/>
        <line num="61" count="0" type="stmt"/>
        <line num="62" count="0" type="stmt"/>
        <line num="63" count="0" type="stmt"/>
        <line num="64" count="0" type="stmt"/>
        <line num="65" count="0" type="stmt"/>
        <line num="67" count="1" type="stmt"/>
        <line num="68" count="0" type="stmt"/>
        <line num="69" count="0" type="stmt"/>
        <line num="70" count="0" type="stmt"/>
        <line num="72" count="0" type="stmt"/>
        <line num="73" count="0" type="stmt"/>
        <line num="74" count="0" type="stmt"/>
        <line num="75" count="0" type="stmt"/>
        <line num="76" count="0" type="stmt"/>
        <line num="77" count="0" type="stmt"/>
        <line num="78" count="1" type="stmt"/>
      </file>
      <file name="inviteController.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/teacher/inviteController.ts">
        <metrics statements="40" coveredstatements="40" conditionals="11" coveredconditionals="11" methods="0" coveredmethods="0"/>
        <line num="2" count="1" type="stmt"/>
        <line num="4" count="1" type="stmt"/>
        <line num="6" count="1" type="stmt"/>
        <line num="14" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="15" count="7" type="stmt"/>
        <line num="16" count="7" type="stmt"/>
        <line num="17" count="7" type="stmt"/>
        <line num="19" count="7" type="cond" truecount="1" falsecount="0"/>
        <line num="20" count="3" type="stmt"/>
        <line num="21" count="3" type="stmt"/>
        <line num="30" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="31" count="2" type="stmt"/>
        <line num="32" count="2" type="stmt"/>
        <line num="34" count="2" type="cond" truecount="1" falsecount="0"/>
        <line num="35" count="1" type="stmt"/>
        <line num="36" count="1" type="stmt"/>
        <line num="44" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="45" count="1" type="stmt"/>
        <line num="47" count="1" type="stmt"/>
        <line num="48" count="1" type="stmt"/>
        <line num="49" count="1" type="stmt"/>
        <line num="58" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="59" count="4" type="stmt"/>
        <line num="60" count="4" type="stmt"/>
        <line num="61" count="4" type="stmt"/>
        <line num="63" count="4" type="cond" truecount="1" falsecount="0"/>
        <line num="64" count="3" type="cond" truecount="1" falsecount="0"/>
        <line num="65" count="1" type="stmt"/>
        <line num="66" count="4" type="cond" truecount="1" falsecount="0"/>
        <line num="67" count="1" type="stmt"/>
        <line num="68" count="1" type="stmt"/>
        <line num="69" count="1" type="stmt"/>
        <line num="70" count="4" type="stmt"/>
        <line num="82" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="83" count="4" type="stmt"/>
        <line num="84" count="4" type="stmt"/>
        <line num="85" count="4" type="stmt"/>
        <line num="87" count="4" type="cond" truecount="1" falsecount="0"/>
        <line num="88" count="2" type="stmt"/>
        <line num="89" count="2" type="stmt"/>
      </file>
      <file name="teacherAssignmentController.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/teacher/teacherAssignmentController.ts">
        <metrics statements="81" coveredstatements="81" conditionals="10" coveredconditionals="10" methods="5" coveredmethods="5"/>
        <line num="3" count="1" type="stmt"/>
        <line num="4" count="1" type="stmt"/>
        <line num="6" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="7" count="7" type="cond" truecount="1" falsecount="0"/>
        <line num="8" count="4" type="stmt"/>
        <line num="9" count="4" type="stmt"/>
        <line num="10" count="4" type="stmt"/>
        <line num="11" count="4" type="stmt"/>
        <line num="12" count="4" type="stmt"/>
        <line num="13" count="4" type="stmt"/>
        <line num="14" count="4" type="stmt"/>
        <line num="15" count="4" type="stmt"/>
        <line num="16" count="4" type="stmt"/>
        <line num="17" count="4" type="stmt"/>
        <line num="18" count="4" type="stmt"/>
        <line num="19" count="4" type="stmt"/>
        <line num="25" count="4" type="stmt"/>
        <line num="27" count="4" type="stmt"/>
        <line num="29" count="4" type="stmt"/>
        <line num="30" count="4" type="stmt"/>
        <line num="31" count="4" type="stmt"/>
        <line num="32" count="4" type="stmt"/>
        <line num="33" count="4" type="stmt"/>
        <line num="34" count="4" type="stmt"/>
        <line num="35" count="4" type="stmt"/>
        <line num="36" count="4" type="stmt"/>
        <line num="37" count="4" type="cond" truecount="1" falsecount="0"/>
        <line num="38" count="2" type="stmt"/>
        <line num="39" count="2" type="stmt"/>
        <line num="40" count="2" type="stmt"/>
        <line num="41" count="2" type="stmt"/>
        <line num="42" count="4" type="stmt"/>
        <line num="44" count="7" type="cond" truecount="1" falsecount="0"/>
        <line num="45" count="4" type="stmt"/>
        <line num="46" count="4" type="stmt"/>
        <line num="47" count="4" type="stmt"/>
        <line num="48" count="4" type="stmt"/>
        <line num="49" count="4" type="stmt"/>
        <line num="50" count="4" type="stmt"/>
        <line num="51" count="4" type="stmt"/>
        <line num="52" count="4" type="stmt"/>
        <line num="53" count="4" type="stmt"/>
        <line num="54" count="4" type="cond" truecount="1" falsecount="0"/>
        <line num="55" count="3" type="stmt"/>
        <line num="56" count="4" type="cond" truecount="1" falsecount="0"/>
        <line num="57" count="1" type="stmt"/>
        <line num="58" count="1" type="stmt"/>
        <line num="59" count="4" type="stmt"/>
        <line num="61" count="7" type="cond" truecount="1" falsecount="0"/>
        <line num="62" count="2" type="stmt"/>
        <line num="63" count="2" type="stmt"/>
        <line num="64" count="2" type="stmt"/>
        <line num="65" count="2" type="stmt"/>
        <line num="66" count="2" type="stmt"/>
        <line num="67" count="2" type="stmt"/>
        <line num="68" count="2" type="stmt"/>
        <line num="70" count="2" type="stmt"/>
        <line num="71" count="2" type="stmt"/>
        <line num="72" count="2" type="stmt"/>
        <line num="73" count="2" type="stmt"/>
        <line num="74" count="2" type="stmt"/>
        <line num="75" count="2" type="cond" truecount="1" falsecount="0"/>
        <line num="76" count="1" type="stmt"/>
        <line num="77" count="1" type="stmt"/>
        <line num="78" count="1" type="stmt"/>
        <line num="79" count="1" type="stmt"/>
        <line num="80" count="2" type="stmt"/>
        <line num="82" count="7" type="cond" truecount="1" falsecount="0"/>
        <line num="83" count="2" type="stmt"/>
        <line num="84" count="2" type="stmt"/>
        <line num="85" count="2" type="stmt"/>
        <line num="86" count="2" type="stmt"/>
        <line num="87" count="2" type="stmt"/>
        <line num="88" count="2" type="stmt"/>
        <line num="89" count="2" type="cond" truecount="1" falsecount="0"/>
        <line num="90" count="1" type="stmt"/>
        <line num="91" count="1" type="stmt"/>
        <line num="92" count="1" type="stmt"/>
        <line num="93" count="1" type="stmt"/>
        <line num="94" count="2" type="stmt"/>
        <line num="95" count="1" type="stmt"/>
      </file>
      <file name="teacherAuthController.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/teacher/teacherAuthController.ts">
        <metrics statements="31" coveredstatements="6" conditionals="0" coveredconditionals="0" methods="0" coveredmethods="0"/>
        <line num="2" count="1" type="stmt"/>
        <line num="3" count="1" type="stmt"/>
        <line num="5" count="1" type="stmt"/>
        <line num="6" count="1" type="stmt"/>
        <line num="7" count="1" type="stmt"/>
        <line num="17" count="1" type="stmt"/>
        <line num="18" count="0" type="stmt"/>
        <line num="21" count="0" type="stmt"/>
        <line num="22" count="0" type="stmt"/>
        <line num="23" count="0" type="stmt"/>
        <line num="24" count="0" type="stmt"/>
        <line num="27" count="0" type="stmt"/>
        <line num="28" count="0" type="stmt"/>
        <line num="29" count="0" type="stmt"/>
        <line num="30" count="0" type="stmt"/>
        <line num="31" count="0" type="stmt"/>
        <line num="35" count="0" type="stmt"/>
        <line num="37" count="0" type="stmt"/>
        <line num="38" count="0" type="stmt"/>
        <line num="39" count="0" type="stmt"/>
        <line num="40" count="0" type="stmt"/>
        <line num="43" count="0" type="stmt"/>
        <line num="44" count="0" type="stmt"/>
        <line num="45" count="0" type="stmt"/>
        <line num="46" count="0" type="stmt"/>
        <line num="47" count="0" type="stmt"/>
        <line num="49" count="0" type="stmt"/>
        <line num="50" count="0" type="stmt"/>
        <line num="51" count="0" type="stmt"/>
        <line num="52" count="0" type="stmt"/>
        <line num="53" count="0" type="stmt"/>
      </file>
      <file name="teacherClassController.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/teacher/teacherClassController.ts">
        <metrics statements="65" coveredstatements="65" conditionals="15" coveredconditionals="15" methods="1" coveredmethods="1"/>
        <line num="1" count="1" type="stmt"/>
        <line num="4" count="1" type="stmt"/>
        <line num="6" count="1" type="stmt"/>
        <line num="7" count="1" type="stmt"/>
        <line num="9" count="1" type="stmt"/>
        <line num="11" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="12" count="2" type="stmt"/>
        <line num="13" count="2" type="cond" truecount="3" falsecount="0"/>
        <line num="14" count="1" type="stmt"/>
        <line num="15" count="1" type="stmt"/>
        <line num="16" count="1" type="stmt"/>
        <line num="17" count="1" type="stmt"/>
        <line num="24" count="1" type="stmt"/>
        <line num="25" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="26" count="1" type="stmt"/>
        <line num="27" count="1" type="stmt"/>
        <line num="28" count="1" type="stmt"/>
        <line num="29" count="1" type="stmt"/>
        <line num="30" count="1" type="stmt"/>
        <line num="37" count="1" type="stmt"/>
        <line num="38" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="39" count="2" type="stmt"/>
        <line num="40" count="2" type="stmt"/>
        <line num="42" count="2" type="stmt"/>
        <line num="44" count="2" type="cond" truecount="1" falsecount="0"/>
        <line num="45" count="1" type="stmt"/>
        <line num="46" count="2" type="stmt"/>
        <line num="47" count="1" type="stmt"/>
        <line num="54" count="1" type="stmt"/>
        <line num="55" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="56" count="2" type="stmt"/>
        <line num="57" count="2" type="stmt"/>
        <line num="59" count="2" type="cond" truecount="1" falsecount="0"/>
        <line num="60" count="1" type="stmt"/>
        <line num="61" count="2" type="stmt"/>
        <line num="62" count="1" type="stmt"/>
        <line num="70" count="1" type="stmt"/>
        <line num="71" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="72" count="3" type="stmt"/>
        <line num="73" count="3" type="stmt"/>
        <line num="75" count="3" type="cond" truecount="1" falsecount="0"/>
        <line num="77" count="1" type="stmt"/>
        <line num="78" count="1" type="stmt"/>
        <line num="79" count="3" type="stmt"/>
        <line num="80" count="1" type="stmt"/>
        <line num="88" count="1" type="stmt"/>
        <line num="89" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="90" count="3" type="stmt"/>
        <line num="91" count="3" type="stmt"/>
        <line num="93" count="3" type="cond" truecount="1" falsecount="0"/>
        <line num="94" count="1" type="stmt"/>
        <line num="95" count="1" type="stmt"/>
        <line num="96" count="3" type="stmt"/>
        <line num="97" count="1" type="stmt"/>
        <line num="105" count="1" type="stmt"/>
        <line num="106" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="107" count="3" type="stmt"/>
        <line num="108" count="3" type="stmt"/>
        <line num="111" count="3" type="stmt"/>
        <line num="112" count="3" type="stmt"/>
        <line num="113" count="3" type="stmt"/>
        <line num="114" count="3" type="cond" truecount="1" falsecount="0"/>
        <line num="115" count="1" type="stmt"/>
        <line num="116" count="3" type="stmt"/>
        <line num="117" count="1" type="stmt"/>
      </file>
      <file name="teacherLocalLearningObjectController.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/teacher/teacherLocalLearningObjectController.ts">
        <metrics statements="103" coveredstatements="17" conditionals="0" coveredconditionals="0" methods="0" coveredmethods="0"/>
        <line num="2" count="1" type="stmt"/>
        <line num="3" count="1" type="stmt"/>
        <line num="12" count="1" type="stmt"/>
        <line num="13" count="1" type="stmt"/>
        <line num="14" count="0" type="stmt"/>
        <line num="15" count="0" type="stmt"/>
        <line num="16" count="0" type="stmt"/>
        <line num="17" count="0" type="stmt"/>
        <line num="18" count="0" type="stmt"/>
        <line num="20" count="0" type="stmt"/>
        <line num="23" count="0" type="stmt"/>
        <line num="24" count="0" type="stmt"/>
        <line num="25" count="0" type="stmt"/>
        <line num="26" count="0" type="stmt"/>
        <line num="27" count="0" type="stmt"/>
        <line num="28" count="0" type="stmt"/>
        <line num="29" count="0" type="stmt"/>
        <line num="30" count="0" type="stmt"/>
        <line num="31" count="0" type="stmt"/>
        <line num="32" count="1" type="stmt"/>
        <line num="38" count="1" type="stmt"/>
        <line num="39" count="1" type="stmt"/>
        <line num="40" count="0" type="stmt"/>
        <line num="41" count="0" type="stmt"/>
        <line num="42" count="0" type="stmt"/>
        <line num="43" count="0" type="stmt"/>
        <line num="44" count="0" type="stmt"/>
        <line num="46" count="0" type="stmt"/>
        <line num="47" count="0" type="stmt"/>
        <line num="48" count="0" type="stmt"/>
        <line num="49" count="0" type="stmt"/>
        <line num="50" count="0" type="stmt"/>
        <line num="51" count="0" type="stmt"/>
        <line num="52" count="1" type="stmt"/>
        <line num="58" count="1" type="stmt"/>
        <line num="59" count="1" type="stmt"/>
        <line num="60" count="0" type="stmt"/>
        <line num="61" count="0" type="stmt"/>
        <line num="62" count="0" type="stmt"/>
        <line num="63" count="0" type="stmt"/>
        <line num="64" count="0" type="stmt"/>
        <line num="66" count="0" type="stmt"/>
        <line num="67" count="0" type="stmt"/>
        <line num="69" count="0" type="stmt"/>
        <line num="70" count="0" type="stmt"/>
        <line num="71" count="0" type="stmt"/>
        <line num="72" count="0" type="stmt"/>
        <line num="75" count="0" type="stmt"/>
        <line num="76" count="0" type="stmt"/>
        <line num="77" count="0" type="stmt"/>
        <line num="78" count="0" type="stmt"/>
        <line num="80" count="0" type="stmt"/>
        <line num="81" count="0" type="stmt"/>
        <line num="82" count="1" type="stmt"/>
        <line num="88" count="1" type="stmt"/>
        <line num="89" count="1" type="stmt"/>
        <line num="90" count="0" type="stmt"/>
        <line num="91" count="0" type="stmt"/>
        <line num="92" count="0" type="stmt"/>
        <line num="93" count="0" type="stmt"/>
        <line num="94" count="0" type="stmt"/>
        <line num="96" count="0" type="stmt"/>
        <line num="97" count="0" type="stmt"/>
        <line num="100" count="0" type="stmt"/>
        <line num="101" count="0" type="stmt"/>
        <line num="102" count="0" type="stmt"/>
        <line num="103" count="0" type="stmt"/>
        <line num="104" count="0" type="stmt"/>
        <line num="105" count="0" type="stmt"/>
        <line num="106" count="0" type="stmt"/>
        <line num="107" count="0" type="stmt"/>
        <line num="108" count="0" type="stmt"/>
        <line num="110" count="0" type="stmt"/>
        <line num="111" count="0" type="stmt"/>
        <line num="112" count="0" type="stmt"/>
        <line num="113" count="0" type="stmt"/>
        <line num="114" count="0" type="stmt"/>
        <line num="115" count="0" type="stmt"/>
        <line num="116" count="0" type="stmt"/>
        <line num="117" count="0" type="stmt"/>
        <line num="118" count="0" type="stmt"/>
        <line num="119" count="1" type="stmt"/>
        <line num="125" count="1" type="stmt"/>
        <line num="126" count="1" type="stmt"/>
        <line num="127" count="0" type="stmt"/>
        <line num="128" count="0" type="stmt"/>
        <line num="129" count="0" type="stmt"/>
        <line num="130" count="0" type="stmt"/>
        <line num="131" count="0" type="stmt"/>
        <line num="133" count="0" type="stmt"/>
        <line num="134" count="0" type="stmt"/>
        <line num="135" count="0" type="stmt"/>
        <line num="136" count="0" type="stmt"/>
        <line num="137" count="0" type="stmt"/>
        <line num="138" count="0" type="stmt"/>
        <line num="139" count="0" type="stmt"/>
        <line num="140" count="0" type="stmt"/>
        <line num="141" count="0" type="stmt"/>
        <line num="142" count="0" type="stmt"/>
        <line num="144" count="0" type="stmt"/>
        <line num="145" count="0" type="stmt"/>
        <line num="146" count="0" type="stmt"/>
        <line num="147" count="1" type="stmt"/>
      </file>
      <file name="teacherLocalLearningPathController.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/teacher/teacherLocalLearningPathController.ts">
        <metrics statements="88" coveredstatements="17" conditionals="0" coveredconditionals="0" methods="0" coveredmethods="0"/>
        <line num="2" count="1" type="stmt"/>
        <line num="4" count="1" type="stmt"/>
        <line num="19" count="1" type="stmt"/>
        <line num="20" count="1" type="stmt"/>
        <line num="22" count="0" type="stmt"/>
        <line num="24" count="0" type="stmt"/>
        <line num="25" count="0" type="stmt"/>
        <line num="26" count="0" type="stmt"/>
        <line num="27" count="0" type="stmt"/>
        <line num="28" count="0" type="stmt"/>
        <line num="30" count="0" type="stmt"/>
        <line num="31" count="0" type="stmt"/>
        <line num="32" count="0" type="stmt"/>
        <line num="33" count="0" type="stmt"/>
        <line num="34" count="0" type="stmt"/>
        <line num="35" count="0" type="stmt"/>
        <line num="37" count="0" type="stmt"/>
        <line num="38" count="0" type="stmt"/>
        <line num="39" count="0" type="stmt"/>
        <line num="40" count="0" type="stmt"/>
        <line num="41" count="0" type="stmt"/>
        <line num="42" count="1" type="stmt"/>
        <line num="48" count="1" type="stmt"/>
        <line num="49" count="1" type="stmt"/>
        <line num="50" count="0" type="stmt"/>
        <line num="52" count="0" type="stmt"/>
        <line num="53" count="0" type="stmt"/>
        <line num="54" count="0" type="stmt"/>
        <line num="55" count="1" type="stmt"/>
        <line num="61" count="1" type="stmt"/>
        <line num="62" count="1" type="stmt"/>
        <line num="63" count="0" type="stmt"/>
        <line num="65" count="0" type="stmt"/>
        <line num="66" count="0" type="stmt"/>
        <line num="67" count="0" type="stmt"/>
        <line num="68" count="0" type="stmt"/>
        <line num="69" count="0" type="stmt"/>
        <line num="70" count="0" type="stmt"/>
        <line num="72" count="0" type="stmt"/>
        <line num="73" count="0" type="stmt"/>
        <line num="74" count="0" type="stmt"/>
        <line num="75" count="0" type="stmt"/>
        <line num="77" count="0" type="stmt"/>
        <line num="78" count="0" type="stmt"/>
        <line num="79" count="1" type="stmt"/>
        <line num="85" count="1" type="stmt"/>
        <line num="86" count="1" type="stmt"/>
        <line num="87" count="0" type="stmt"/>
        <line num="89" count="0" type="stmt"/>
        <line num="90" count="0" type="stmt"/>
        <line num="91" count="0" type="stmt"/>
        <line num="92" count="0" type="stmt"/>
        <line num="93" count="0" type="stmt"/>
        <line num="94" count="0" type="stmt"/>
        <line num="95" count="0" type="stmt"/>
        <line num="96" count="0" type="stmt"/>
        <line num="97" count="0" type="stmt"/>
        <line num="98" count="0" type="stmt"/>
        <line num="101" count="0" type="stmt"/>
        <line num="103" count="0" type="stmt"/>
        <line num="104" count="0" type="stmt"/>
        <line num="105" count="0" type="stmt"/>
        <line num="106" count="0" type="stmt"/>
        <line num="107" count="0" type="stmt"/>
        <line num="108" count="0" type="stmt"/>
        <line num="110" count="0" type="stmt"/>
        <line num="111" count="0" type="stmt"/>
        <line num="112" count="0" type="stmt"/>
        <line num="113" count="0" type="stmt"/>
        <line num="114" count="0" type="stmt"/>
        <line num="115" count="1" type="stmt"/>
        <line num="120" count="1" type="stmt"/>
        <line num="121" count="1" type="stmt"/>
        <line num="122" count="0" type="stmt"/>
        <line num="124" count="0" type="stmt"/>
        <line num="125" count="0" type="stmt"/>
        <line num="126" count="0" type="stmt"/>
        <line num="127" count="0" type="stmt"/>
        <line num="128" count="0" type="stmt"/>
        <line num="129" count="0" type="stmt"/>
        <line num="130" count="0" type="stmt"/>
        <line num="131" count="0" type="stmt"/>
        <line num="132" count="0" type="stmt"/>
        <line num="133" count="0" type="stmt"/>
        <line num="135" count="0" type="stmt"/>
        <line num="136" count="0" type="stmt"/>
        <line num="137" count="0" type="stmt"/>
        <line num="138" count="1" type="stmt"/>
      </file>
      <file name="teacherLocalLearningPathNodesController.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/teacher/teacherLocalLearningPathNodesController.ts">
        <metrics statements="68" coveredstatements="14" conditionals="0" coveredconditionals="0" methods="0" coveredmethods="0"/>
        <line num="2" count="1" type="stmt"/>
        <line num="4" count="1" type="stmt"/>
        <line num="19" count="1" type="stmt"/>
        <line num="20" count="1" type="stmt"/>
        <line num="21" count="0" type="stmt"/>
        <line num="22" count="0" type="stmt"/>
        <line num="24" count="0" type="stmt"/>
        <line num="25" count="0" type="stmt"/>
        <line num="26" count="0" type="stmt"/>
        <line num="27" count="0" type="stmt"/>
        <line num="28" count="0" type="stmt"/>
        <line num="29" count="0" type="stmt"/>
        <line num="30" count="1" type="stmt"/>
        <line num="36" count="1" type="stmt"/>
        <line num="37" count="1" type="stmt"/>
        <line num="38" count="0" type="stmt"/>
        <line num="39" count="0" type="stmt"/>
        <line num="40" count="0" type="stmt"/>
        <line num="42" count="0" type="stmt"/>
        <line num="43" count="0" type="stmt"/>
        <line num="44" count="0" type="stmt"/>
        <line num="45" count="0" type="stmt"/>
        <line num="46" count="0" type="stmt"/>
        <line num="47" count="0" type="stmt"/>
        <line num="48" count="0" type="stmt"/>
        <line num="49" count="0" type="stmt"/>
        <line num="50" count="0" type="stmt"/>
        <line num="51" count="0" type="stmt"/>
        <line num="52" count="0" type="stmt"/>
        <line num="53" count="0" type="stmt"/>
        <line num="55" count="0" type="stmt"/>
        <line num="56" count="0" type="stmt"/>
        <line num="57" count="0" type="stmt"/>
        <line num="58" count="0" type="stmt"/>
        <line num="59" count="0" type="stmt"/>
        <line num="60" count="1" type="stmt"/>
        <line num="66" count="1" type="stmt"/>
        <line num="67" count="1" type="stmt"/>
        <line num="68" count="0" type="stmt"/>
        <line num="69" count="0" type="stmt"/>
        <line num="70" count="0" type="stmt"/>
        <line num="72" count="0" type="stmt"/>
        <line num="73" count="0" type="stmt"/>
        <line num="74" count="0" type="stmt"/>
        <line num="75" count="0" type="stmt"/>
        <line num="76" count="0" type="stmt"/>
        <line num="77" count="0" type="stmt"/>
        <line num="78" count="0" type="stmt"/>
        <line num="79" count="0" type="stmt"/>
        <line num="80" count="0" type="stmt"/>
        <line num="81" count="0" type="stmt"/>
        <line num="82" count="0" type="stmt"/>
        <line num="83" count="0" type="stmt"/>
        <line num="84" count="0" type="stmt"/>
        <line num="86" count="0" type="stmt"/>
        <line num="87" count="0" type="stmt"/>
        <line num="88" count="0" type="stmt"/>
        <line num="89" count="0" type="stmt"/>
        <line num="90" count="0" type="stmt"/>
        <line num="91" count="1" type="stmt"/>
        <line num="96" count="1" type="stmt"/>
        <line num="97" count="1" type="stmt"/>
        <line num="98" count="0" type="stmt"/>
        <line num="99" count="0" type="stmt"/>
        <line num="101" count="0" type="stmt"/>
        <line num="102" count="0" type="stmt"/>
        <line num="103" count="0" type="stmt"/>
        <line num="104" count="1" type="stmt"/>
      </file>
      <file name="teacherSubmissionController.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/teacher/teacherSubmissionController.ts">
        <metrics statements="28" coveredstatements="28" conditionals="4" coveredconditionals="4" methods="4" coveredmethods="4"/>
        <line num="2" count="1" type="stmt"/>
        <line num="5" count="1" type="stmt"/>
        <line num="7" count="1" type="stmt"/>
        <line num="8" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="9" count="1" type="stmt"/>
        <line num="10" count="1" type="stmt"/>
        <line num="12" count="1" type="stmt"/>
        <line num="14" count="1" type="stmt"/>
        <line num="15" count="1" type="stmt"/>
        <line num="17" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="18" count="1" type="stmt"/>
        <line num="19" count="1" type="stmt"/>
        <line num="21" count="1" type="stmt"/>
        <line num="23" count="1" type="stmt"/>
        <line num="24" count="1" type="stmt"/>
        <line num="26" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="27" count="1" type="stmt"/>
        <line num="28" count="1" type="stmt"/>
        <line num="30" count="1" type="stmt"/>
        <line num="32" count="1" type="stmt"/>
        <line num="33" count="1" type="stmt"/>
        <line num="35" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="36" count="1" type="stmt"/>
        <line num="37" count="1" type="stmt"/>
        <line num="39" count="1" type="stmt"/>
        <line num="41" count="1" type="stmt"/>
        <line num="42" count="1" type="stmt"/>
        <line num="43" count="1" type="stmt"/>
      </file>
      <file name="teacherTeamsController.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/controllers/teacher/teacherTeamsController.ts">
        <metrics statements="40" coveredstatements="5" conditionals="0" coveredconditionals="0" methods="4" coveredmethods="0"/>
        <line num="2" count="1" type="stmt"/>
        <line num="11" count="1" type="stmt"/>
        <line num="12" count="0" type="stmt"/>
        <line num="14" count="0" type="stmt"/>
        <line num="15" count="0" type="stmt"/>
        <line num="16" count="0" type="stmt"/>
        <line num="18" count="0" type="stmt"/>
        <line num="19" count="0" type="stmt"/>
        <line num="20" count="0" type="stmt"/>
        <line num="21" count="0" type="stmt"/>
        <line num="22" count="0" type="stmt"/>
        <line num="23" count="0" type="stmt"/>
        <line num="25" count="1" type="stmt"/>
        <line num="26" count="0" type="stmt"/>
        <line num="27" count="0" type="stmt"/>
        <line num="28" count="0" type="stmt"/>
        <line num="29" count="0" type="stmt"/>
        <line num="30" count="0" type="stmt"/>
        <line num="31" count="0" type="stmt"/>
        <line num="32" count="0" type="stmt"/>
        <line num="33" count="0" type="stmt"/>
        <line num="35" count="1" type="stmt"/>
        <line num="36" count="0" type="stmt"/>
        <line num="37" count="0" type="stmt"/>
        <line num="38" count="0" type="stmt"/>
        <line num="40" count="0" type="stmt"/>
        <line num="41" count="0" type="stmt"/>
        <line num="42" count="0" type="stmt"/>
        <line num="43" count="0" type="stmt"/>
        <line num="44" count="0" type="stmt"/>
        <line num="45" count="0" type="stmt"/>
        <line num="47" count="1" type="stmt"/>
        <line num="48" count="0" type="stmt"/>
        <line num="50" count="0" type="stmt"/>
        <line num="52" count="0" type="stmt"/>
        <line num="53" count="0" type="stmt"/>
        <line num="54" count="0" type="stmt"/>
        <line num="55" count="0" type="stmt"/>
        <line num="56" count="0" type="stmt"/>
        <line num="57" count="0" type="stmt"/>
      </file>
    </package>
    <package name="dwengo_backend.errors">
      <metrics statements="32" coveredstatements="30" conditionals="5" coveredconditionals="5" methods="6" coveredmethods="5"/>
      <file name="errors.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/errors/errors.ts">
        <metrics statements="32" coveredstatements="30" conditionals="5" coveredconditionals="5" methods="6" coveredmethods="5"/>
        <line num="1" count="1" type="stmt"/>
        <line num="3" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="4" count="24" type="stmt"/>
        <line num="5" count="24" type="stmt"/>
        <line num="6" count="24" type="stmt"/>
        <line num="7" count="24" type="stmt"/>
        <line num="8" count="1" type="stmt"/>
        <line num="10" count="1" type="stmt"/>
        <line num="11" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="12" count="7" type="stmt"/>
        <line num="13" count="7" type="stmt"/>
        <line num="14" count="1" type="stmt"/>
        <line num="16" count="1" type="stmt"/>
        <line num="17" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="18" count="10" type="stmt"/>
        <line num="19" count="10" type="stmt"/>
        <line num="20" count="1" type="stmt"/>
        <line num="22" count="1" type="stmt"/>
        <line num="23" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="24" count="6" type="stmt"/>
        <line num="25" count="6" type="stmt"/>
        <line num="26" count="1" type="stmt"/>
        <line num="28" count="1" type="stmt"/>
        <line num="29" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="30" count="1" type="stmt"/>
        <line num="31" count="1" type="stmt"/>
        <line num="32" count="1" type="stmt"/>
        <line num="34" count="1" type="stmt"/>
        <line num="35" count="1" type="stmt"/>
        <line num="36" count="0" type="stmt"/>
        <line num="37" count="0" type="stmt"/>
        <line num="38" count="1" type="stmt"/>
      </file>
    </package>
    <package name="dwengo_backend.helpers">
      <metrics statements="31" coveredstatements="19" conditionals="3" coveredconditionals="1" methods="2" coveredmethods="1"/>
      <file name="generateToken.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/helpers/generateToken.ts">
        <metrics statements="7" coveredstatements="2" conditionals="0" coveredconditionals="0" methods="1" coveredmethods="0"/>
        <line num="2" count="1" type="stmt"/>
        <line num="4" count="1" type="stmt"/>
        <line num="5" count="0" type="stmt"/>
        <line num="6" count="0" type="stmt"/>
        <line num="7" count="0" type="stmt"/>
        <line num="8" count="0" type="stmt"/>
        <line num="9" count="0" type="stmt"/>
      </file>
      <file name="getUserFromAuthRequest.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/helpers/getUserFromAuthRequest.ts">
        <metrics statements="24" coveredstatements="17" conditionals="3" coveredconditionals="1" methods="1" coveredmethods="1"/>
        <line num="1" count="1" type="stmt"/>
        <line num="3" count="1" type="stmt"/>
        <line num="4" count="1" type="stmt"/>
        <line num="6" count="1" type="stmt"/>
        <line num="8" count="1" type="stmt"/>
        <line num="9" count="1" type="stmt"/>
        <line num="10" count="1" type="stmt"/>
        <line num="12" count="1" type="stmt"/>
        <line num="13" count="1" type="stmt"/>
        <line num="14" count="1" type="stmt"/>
        <line num="15" count="1" type="stmt"/>
        <line num="18" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="20" count="82" type="cond" truecount="0" falsecount="1"/>
        <line num="21" count="0" type="stmt"/>
        <line num="22" count="0" type="stmt"/>
        <line num="25" count="82" type="stmt"/>
        <line num="26" count="82" type="stmt"/>
        <line num="27" count="82" type="cond" truecount="0" falsecount="1"/>
        <line num="28" count="0" type="stmt"/>
        <line num="29" count="0" type="stmt"/>
        <line num="30" count="0" type="stmt"/>
        <line num="31" count="0" type="stmt"/>
        <line num="32" count="0" type="stmt"/>
        <line num="33" count="82" type="stmt"/>
      </file>
    </package>
    <package name="dwengo_backend.interfaces">
      <metrics statements="0" coveredstatements="0" conditionals="0" coveredconditionals="0" methods="0" coveredmethods="0"/>
      <file name="extendedTypeInterfaces.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/interfaces/extendedTypeInterfaces.ts">
        <metrics statements="0" coveredstatements="0" conditionals="0" coveredconditionals="0" methods="0" coveredmethods="0"/>
      </file>
    </package>
    <package name="dwengo_backend.middleware">
      <metrics statements="408" coveredstatements="161" conditionals="28" coveredconditionals="19" methods="4" coveredmethods="3"/>
      <file name="authAnyUserMiddleware.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/middleware/authAnyUserMiddleware.ts">
        <metrics statements="64" coveredstatements="7" conditionals="0" coveredconditionals="0" methods="0" coveredmethods="0"/>
        <line num="2" count="1" type="stmt"/>
        <line num="3" count="1" type="stmt"/>
        <line num="4" count="1" type="stmt"/>
        <line num="6" count="1" type="stmt"/>
        <line num="12" count="1" type="stmt"/>
        <line num="13" count="1" type="stmt"/>
        <line num="14" count="0" type="stmt"/>
        <line num="15" count="0" type="stmt"/>
        <line num="16" count="0" type="stmt"/>
        <line num="17" count="0" type="stmt"/>
        <line num="18" count="0" type="stmt"/>
        <line num="19" count="0" type="stmt"/>
        <line num="20" count="0" type="stmt"/>
        <line num="21" count="0" type="stmt"/>
        <line num="22" count="0" type="stmt"/>
        <line num="23" count="0" type="stmt"/>
        <line num="24" count="0" type="stmt"/>
        <line num="27" count="0" type="stmt"/>
        <line num="28" count="0" type="stmt"/>
        <line num="29" count="0" type="stmt"/>
        <line num="30" count="0" type="stmt"/>
        <line num="31" count="0" type="stmt"/>
        <line num="32" count="0" type="stmt"/>
        <line num="33" count="0" type="stmt"/>
        <line num="36" count="0" type="stmt"/>
        <line num="39" count="0" type="stmt"/>
        <line num="40" count="0" type="stmt"/>
        <line num="41" count="0" type="stmt"/>
        <line num="42" count="0" type="stmt"/>
        <line num="43" count="0" type="stmt"/>
        <line num="44" count="0" type="stmt"/>
        <line num="45" count="0" type="stmt"/>
        <line num="46" count="0" type="stmt"/>
        <line num="47" count="0" type="stmt"/>
        <line num="48" count="0" type="stmt"/>
        <line num="49" count="0" type="stmt"/>
        <line num="50" count="0" type="stmt"/>
        <line num="51" count="0" type="stmt"/>
        <line num="52" count="0" type="stmt"/>
        <line num="53" count="0" type="stmt"/>
        <line num="55" count="0" type="stmt"/>
        <line num="56" count="0" type="stmt"/>
        <line num="57" count="0" type="stmt"/>
        <line num="58" count="0" type="stmt"/>
        <line num="59" count="0" type="stmt"/>
        <line num="60" count="0" type="stmt"/>
        <line num="61" count="0" type="stmt"/>
        <line num="62" count="0" type="stmt"/>
        <line num="63" count="0" type="stmt"/>
        <line num="64" count="0" type="stmt"/>
        <line num="65" count="0" type="stmt"/>
        <line num="66" count="0" type="stmt"/>
        <line num="67" count="0" type="stmt"/>
        <line num="69" count="0" type="stmt"/>
        <line num="70" count="0" type="stmt"/>
        <line num="71" count="0" type="stmt"/>
        <line num="72" count="0" type="stmt"/>
        <line num="73" count="0" type="stmt"/>
        <line num="74" count="0" type="stmt"/>
        <line num="75" count="0" type="stmt"/>
        <line num="76" count="0" type="stmt"/>
        <line num="77" count="0" type="stmt"/>
        <line num="78" count="0" type="stmt"/>
        <line num="79" count="1" type="stmt"/>
      </file>
      <file name="errorMiddleware.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/middleware/errorMiddleware.ts">
        <metrics statements="22" coveredstatements="20" conditionals="7" coveredconditionals="4" methods="1" coveredmethods="1"/>
        <line num="2" count="1" type="stmt"/>
        <line num="3" count="1" type="stmt"/>
        <line num="5" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="6" count="18" type="cond" truecount="1" falsecount="0"/>
        <line num="7" count="17" type="stmt"/>
        <line num="8" count="18" type="cond" truecount="1" falsecount="0"/>
        <line num="9" count="1" type="cond" truecount="0" falsecount="1"/>
        <line num="10" count="1" type="stmt"/>
        <line num="11" count="1" type="stmt"/>
        <line num="14" count="18" type="cond" truecount="1" falsecount="0"/>
        <line num="15" count="1" type="stmt"/>
        <line num="16" count="1" type="stmt"/>
        <line num="17" count="1" type="cond" truecount="0" falsecount="1"/>
        <line num="18" count="0" type="stmt"/>
        <line num="19" count="0" type="stmt"/>
        <line num="20" count="1" type="stmt"/>
        <line num="22" count="18" type="stmt"/>
        <line num="23" count="18" type="stmt"/>
        <line num="25" count="18" type="cond" truecount="0" falsecount="1"/>
        <line num="26" count="18" type="stmt"/>
        <line num="27" count="18" type="stmt"/>
        <line num="29" count="1" type="stmt"/>
      </file>
      <file name="questionsAuthMiddleware.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/middleware/questionsAuthMiddleware.ts">
        <metrics statements="141" coveredstatements="16" conditionals="0" coveredconditionals="0" methods="0" coveredmethods="0"/>
        <line num="2" count="1" type="stmt"/>
        <line num="3" count="1" type="stmt"/>
        <line num="5" count="1" type="stmt"/>
        <line num="7" count="1" type="stmt"/>
        <line num="15" count="1" type="stmt"/>
        <line num="16" count="1" type="stmt"/>
        <line num="17" count="0" type="stmt"/>
        <line num="18" count="0" type="stmt"/>
        <line num="19" count="0" type="stmt"/>
        <line num="20" count="0" type="stmt"/>
        <line num="21" count="0" type="stmt"/>
        <line num="23" count="0" type="stmt"/>
        <line num="24" count="0" type="stmt"/>
        <line num="25" count="0" type="stmt"/>
        <line num="26" count="0" type="stmt"/>
        <line num="27" count="0" type="stmt"/>
        <line num="28" count="0" type="stmt"/>
        <line num="29" count="0" type="stmt"/>
        <line num="30" count="0" type="stmt"/>
        <line num="31" count="0" type="stmt"/>
        <line num="32" count="0" type="stmt"/>
        <line num="33" count="0" type="stmt"/>
        <line num="34" count="0" type="stmt"/>
        <line num="35" count="0" type="stmt"/>
        <line num="36" count="0" type="stmt"/>
        <line num="37" count="0" type="stmt"/>
        <line num="38" count="0" type="stmt"/>
        <line num="39" count="0" type="stmt"/>
        <line num="40" count="0" type="stmt"/>
        <line num="43" count="0" type="stmt"/>
        <line num="44" count="0" type="stmt"/>
        <line num="45" count="0" type="stmt"/>
        <line num="47" count="0" type="stmt"/>
        <line num="50" count="0" type="stmt"/>
        <line num="52" count="0" type="stmt"/>
        <line num="54" count="0" type="stmt"/>
        <line num="55" count="0" type="stmt"/>
        <line num="56" count="0" type="stmt"/>
        <line num="57" count="0" type="stmt"/>
        <line num="58" count="0" type="stmt"/>
        <line num="60" count="0" type="stmt"/>
        <line num="61" count="0" type="stmt"/>
        <line num="62" count="0" type="stmt"/>
        <line num="63" count="0" type="stmt"/>
        <line num="65" count="0" type="stmt"/>
        <line num="66" count="0" type="stmt"/>
        <line num="67" count="1" type="stmt"/>
        <line num="75" count="1" type="stmt"/>
        <line num="76" count="1" type="stmt"/>
        <line num="77" count="0" type="stmt"/>
        <line num="78" count="0" type="stmt"/>
        <line num="79" count="0" type="stmt"/>
        <line num="80" count="0" type="stmt"/>
        <line num="81" count="0" type="stmt"/>
        <line num="83" count="0" type="stmt"/>
        <line num="84" count="0" type="stmt"/>
        <line num="85" count="0" type="stmt"/>
        <line num="86" count="0" type="stmt"/>
        <line num="87" count="0" type="stmt"/>
        <line num="88" count="0" type="stmt"/>
        <line num="89" count="0" type="stmt"/>
        <line num="90" count="0" type="stmt"/>
        <line num="91" count="0" type="stmt"/>
        <line num="92" count="0" type="stmt"/>
        <line num="93" count="0" type="stmt"/>
        <line num="94" count="0" type="stmt"/>
        <line num="95" count="0" type="stmt"/>
        <line num="96" count="0" type="stmt"/>
        <line num="97" count="0" type="stmt"/>
        <line num="98" count="0" type="stmt"/>
        <line num="99" count="0" type="stmt"/>
        <line num="102" count="0" type="stmt"/>
        <line num="107" count="0" type="stmt"/>
        <line num="109" count="0" type="stmt"/>
        <line num="110" count="0" type="stmt"/>
        <line num="111" count="0" type="stmt"/>
        <line num="113" count="0" type="stmt"/>
        <line num="114" count="0" type="stmt"/>
        <line num="115" count="1" type="stmt"/>
        <line num="121" count="1" type="stmt"/>
        <line num="122" count="1" type="stmt"/>
        <line num="123" count="0" type="stmt"/>
        <line num="124" count="0" type="stmt"/>
        <line num="125" count="0" type="stmt"/>
        <line num="126" count="0" type="stmt"/>
        <line num="127" count="0" type="stmt"/>
        <line num="129" count="0" type="stmt"/>
        <line num="130" count="0" type="stmt"/>
        <line num="131" count="0" type="stmt"/>
        <line num="132" count="0" type="stmt"/>
        <line num="133" count="0" type="stmt"/>
        <line num="134" count="0" type="stmt"/>
        <line num="136" count="0" type="stmt"/>
        <line num="137" count="0" type="stmt"/>
        <line num="139" count="0" type="stmt"/>
        <line num="140" count="0" type="stmt"/>
        <line num="141" count="0" type="stmt"/>
        <line num="144" count="0" type="stmt"/>
        <line num="145" count="0" type="stmt"/>
        <line num="146" count="1" type="stmt"/>
        <line num="152" count="1" type="stmt"/>
        <line num="153" count="1" type="stmt"/>
        <line num="154" count="0" type="stmt"/>
        <line num="155" count="0" type="stmt"/>
        <line num="156" count="0" type="stmt"/>
        <line num="157" count="0" type="stmt"/>
        <line num="158" count="0" type="stmt"/>
        <line num="161" count="0" type="stmt"/>
        <line num="162" count="0" type="stmt"/>
        <line num="163" count="0" type="stmt"/>
        <line num="164" count="0" type="stmt"/>
        <line num="165" count="0" type="stmt"/>
        <line num="166" count="0" type="stmt"/>
        <line num="169" count="0" type="stmt"/>
        <line num="170" count="0" type="stmt"/>
        <line num="171" count="0" type="stmt"/>
        <line num="174" count="0" type="stmt"/>
        <line num="175" count="0" type="stmt"/>
        <line num="176" count="0" type="stmt"/>
        <line num="177" count="0" type="stmt"/>
        <line num="178" count="0" type="stmt"/>
        <line num="179" count="0" type="stmt"/>
        <line num="180" count="0" type="stmt"/>
        <line num="181" count="0" type="stmt"/>
        <line num="182" count="0" type="stmt"/>
        <line num="183" count="0" type="stmt"/>
        <line num="184" count="0" type="stmt"/>
        <line num="185" count="0" type="stmt"/>
        <line num="186" count="0" type="stmt"/>
        <line num="187" count="0" type="stmt"/>
        <line num="188" count="0" type="stmt"/>
        <line num="189" count="0" type="stmt"/>
        <line num="190" count="0" type="stmt"/>
        <line num="192" count="0" type="stmt"/>
        <line num="193" count="0" type="stmt"/>
        <line num="195" count="0" type="stmt"/>
        <line num="196" count="0" type="stmt"/>
        <line num="197" count="0" type="stmt"/>
        <line num="199" count="0" type="stmt"/>
        <line num="200" count="0" type="stmt"/>
        <line num="201" count="1" type="stmt"/>
      </file>
      <file name="studentAuthMiddleware.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/middleware/studentAuthMiddleware.ts">
        <metrics statements="38" coveredstatements="31" conditionals="5" coveredconditionals="3" methods="0" coveredmethods="0"/>
        <line num="1" count="1" type="stmt"/>
        <line num="2" count="1" type="stmt"/>
        <line num="3" count="1" type="stmt"/>
        <line num="6" count="1" type="stmt"/>
        <line num="19" count="1" type="stmt"/>
        <line num="20" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="21" count="28" type="stmt"/>
        <line num="23" count="28" type="stmt"/>
        <line num="24" count="28" type="stmt"/>
        <line num="25" count="28" type="stmt"/>
        <line num="26" count="28" type="stmt"/>
        <line num="27" count="28" type="stmt"/>
        <line num="28" count="28" type="stmt"/>
        <line num="30" count="28" type="stmt"/>
        <line num="31" count="28" type="stmt"/>
        <line num="32" count="28" type="stmt"/>
        <line num="33" count="28" type="stmt"/>
        <line num="36" count="28" type="stmt"/>
        <line num="37" count="28" type="stmt"/>
        <line num="38" count="28" type="stmt"/>
        <line num="39" count="28" type="stmt"/>
        <line num="41" count="28" type="cond" truecount="1" falsecount="0"/>
        <line num="42" count="2" type="stmt"/>
        <line num="43" count="2" type="stmt"/>
        <line num="44" count="2" type="cond" truecount="1" falsecount="0"/>
        <line num="46" count="26" type="stmt"/>
        <line num="47" count="26" type="stmt"/>
        <line num="48" count="28" type="cond" truecount="0" falsecount="1"/>
        <line num="49" count="0" type="stmt"/>
        <line num="50" count="0" type="stmt"/>
        <line num="51" count="0" type="stmt"/>
        <line num="52" count="0" type="stmt"/>
        <line num="53" count="28" type="cond" truecount="0" falsecount="1"/>
        <line num="54" count="0" type="stmt"/>
        <line num="55" count="0" type="stmt"/>
        <line num="56" count="0" type="stmt"/>
        <line num="57" count="28" type="stmt"/>
        <line num="58" count="1" type="stmt"/>
      </file>
      <file name="teacherAuthMiddleware.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/middleware/teacherAuthMiddleware.ts">
        <metrics statements="49" coveredstatements="30" conditionals="5" coveredconditionals="3" methods="1" coveredmethods="0"/>
        <line num="1" count="1" type="stmt"/>
        <line num="2" count="1" type="stmt"/>
        <line num="3" count="1" type="stmt"/>
        <line num="5" count="1" type="stmt"/>
        <line num="7" count="1" type="stmt"/>
        <line num="13" count="1" type="stmt"/>
        <line num="14" count="0" type="stmt"/>
        <line num="15" count="0" type="stmt"/>
        <line num="16" count="0" type="stmt"/>
        <line num="17" count="0" type="stmt"/>
        <line num="18" count="0" type="stmt"/>
        <line num="20" count="0" type="stmt"/>
        <line num="21" count="0" type="stmt"/>
        <line num="22" count="0" type="stmt"/>
        <line num="23" count="0" type="stmt"/>
        <line num="24" count="0" type="stmt"/>
        <line num="26" count="0" type="stmt"/>
        <line num="27" count="0" type="stmt"/>
        <line num="29" count="1" type="stmt"/>
        <line num="30" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="31" count="65" type="stmt"/>
        <line num="33" count="65" type="stmt"/>
        <line num="34" count="65" type="stmt"/>
        <line num="35" count="65" type="stmt"/>
        <line num="36" count="65" type="stmt"/>
        <line num="37" count="65" type="stmt"/>
        <line num="38" count="65" type="stmt"/>
        <line num="39" count="65" type="stmt"/>
        <line num="42" count="65" type="stmt"/>
        <line num="43" count="65" type="stmt"/>
        <line num="44" count="65" type="stmt"/>
        <line num="45" count="65" type="stmt"/>
        <line num="47" count="65" type="cond" truecount="1" falsecount="0"/>
        <line num="49" count="3" type="stmt"/>
        <line num="50" count="3" type="stmt"/>
        <line num="51" count="3" type="cond" truecount="1" falsecount="0"/>
        <line num="53" count="62" type="stmt"/>
        <line num="54" count="62" type="stmt"/>
        <line num="55" count="65" type="cond" truecount="0" falsecount="1"/>
        <line num="56" count="0" type="stmt"/>
        <line num="58" count="0" type="stmt"/>
        <line num="59" count="0" type="stmt"/>
        <line num="60" count="0" type="stmt"/>
        <line num="61" count="65" type="cond" truecount="0" falsecount="1"/>
        <line num="63" count="0" type="stmt"/>
        <line num="64" count="0" type="stmt"/>
        <line num="65" count="0" type="stmt"/>
        <line num="66" count="65" type="stmt"/>
        <line num="67" count="1" type="stmt"/>
      </file>
      <file name="teamValidationMiddleware.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/middleware/teamValidationMiddleware.ts">
        <metrics statements="51" coveredstatements="19" conditionals="0" coveredconditionals="0" methods="0" coveredmethods="0"/>
        <line num="3" count="1" type="stmt"/>
        <line num="4" count="1" type="stmt"/>
        <line num="7" count="1" type="stmt"/>
        <line num="8" count="0" type="stmt"/>
        <line num="10" count="0" type="stmt"/>
        <line num="11" count="0" type="stmt"/>
        <line num="12" count="0" type="stmt"/>
        <line num="13" count="0" type="stmt"/>
        <line num="15" count="0" type="stmt"/>
        <line num="16" count="0" type="stmt"/>
        <line num="19" count="1" type="stmt"/>
        <line num="20" count="0" type="stmt"/>
        <line num="22" count="0" type="stmt"/>
        <line num="23" count="0" type="stmt"/>
        <line num="24" count="0" type="stmt"/>
        <line num="25" count="0" type="stmt"/>
        <line num="27" count="0" type="stmt"/>
        <line num="28" count="0" type="stmt"/>
        <line num="30" count="1" type="stmt"/>
        <line num="31" count="1" type="stmt"/>
        <line num="32" count="1" type="stmt"/>
        <line num="33" count="1" type="stmt"/>
        <line num="34" count="1" type="stmt"/>
        <line num="35" count="1" type="stmt"/>
        <line num="37" count="1" type="stmt"/>
        <line num="38" count="1" type="stmt"/>
        <line num="39" count="1" type="stmt"/>
        <line num="45" count="1" type="stmt"/>
        <line num="46" count="1" type="stmt"/>
        <line num="47" count="0" type="stmt"/>
        <line num="49" count="0" type="stmt"/>
        <line num="50" count="0" type="stmt"/>
        <line num="51" count="0" type="stmt"/>
        <line num="52" count="0" type="stmt"/>
        <line num="53" count="0" type="stmt"/>
        <line num="55" count="0" type="stmt"/>
        <line num="56" count="0" type="stmt"/>
        <line num="57" count="0" type="stmt"/>
        <line num="58" count="1" type="stmt"/>
        <line num="67" count="1" type="stmt"/>
        <line num="68" count="1" type="stmt"/>
        <line num="69" count="0" type="stmt"/>
        <line num="71" count="0" type="stmt"/>
        <line num="72" count="0" type="stmt"/>
        <line num="73" count="0" type="stmt"/>
        <line num="74" count="0" type="stmt"/>
        <line num="75" count="0" type="stmt"/>
        <line num="77" count="0" type="stmt"/>
        <line num="78" count="0" type="stmt"/>
        <line num="79" count="0" type="stmt"/>
        <line num="80" count="1" type="stmt"/>
      </file>
      <file name="validateRequest.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/middleware/validateRequest.ts">
        <metrics statements="43" coveredstatements="38" conditionals="11" coveredconditionals="9" methods="2" coveredmethods="2"/>
        <line num="5" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="6" count="7" type="cond" truecount="1" falsecount="0"/>
        <line num="7" count="8" type="stmt"/>
        <line num="8" count="8" type="stmt"/>
        <line num="9" count="8" type="stmt"/>
        <line num="10" count="7" type="stmt"/>
        <line num="11" count="7" type="stmt"/>
        <line num="22" count="1" type="stmt"/>
        <line num="23" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="24" count="28" type="stmt"/>
        <line num="25" count="28" type="stmt"/>
        <line num="26" count="28" type="stmt"/>
        <line num="27" count="28" type="stmt"/>
        <line num="29" count="28" type="cond" truecount="1" falsecount="0"/>
        <line num="30" count="23" type="stmt"/>
        <line num="31" count="23" type="cond" truecount="1" falsecount="0"/>
        <line num="32" count="15" type="stmt"/>
        <line num="33" count="15" type="cond" truecount="1" falsecount="0"/>
        <line num="34" count="3" type="stmt"/>
        <line num="35" count="3" type="stmt"/>
        <line num="36" count="15" type="stmt"/>
        <line num="38" count="23" type="stmt"/>
        <line num="39" count="23" type="stmt"/>
        <line num="40" count="23" type="cond" truecount="1" falsecount="0"/>
        <line num="41" count="4" type="stmt"/>
        <line num="42" count="4" type="stmt"/>
        <line num="43" count="23" type="stmt"/>
        <line num="45" count="23" type="cond" truecount="0" falsecount="1"/>
        <line num="46" count="0" type="stmt"/>
        <line num="47" count="0" type="stmt"/>
        <line num="48" count="0" type="stmt"/>
        <line num="49" count="0" type="stmt"/>
        <line num="50" count="0" type="stmt"/>
        <line num="52" count="23" type="cond" truecount="1" falsecount="0"/>
        <line num="53" count="6" type="stmt"/>
        <line num="54" count="6" type="stmt"/>
        <line num="55" count="6" type="cond" truecount="0" falsecount="1"/>
        <line num="56" count="6" type="stmt"/>
        <line num="57" count="6" type="stmt"/>
        <line num="58" count="6" type="stmt"/>
        <line num="59" count="6" type="cond" truecount="1" falsecount="0"/>
        <line num="61" count="17" type="stmt"/>
        <line num="62" count="17" type="stmt"/>
      </file>
    </package>
    <package name="dwengo_backend.routes">
      <metrics statements="20" coveredstatements="20" conditionals="0" coveredconditionals="0" methods="0" coveredmethods="0"/>
      <file name="assignmentRoutes.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/assignmentRoutes.ts">
        <metrics statements="6" coveredstatements="6" conditionals="0" coveredconditionals="0" methods="0" coveredmethods="0"/>
        <line num="1" count="1" type="stmt"/>
        <line num="2" count="1" type="stmt"/>
        <line num="4" count="1" type="stmt"/>
        <line num="5" count="1" type="stmt"/>
        <line num="8" count="1" type="stmt"/>
        <line num="10" count="1" type="stmt"/>
      </file>
      <file name="progressRoutes.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/progressRoutes.ts">
        <metrics statements="14" coveredstatements="14" conditionals="0" coveredconditionals="0" methods="0" coveredmethods="0"/>
        <line num="1" count="1" type="stmt"/>
        <line num="2" count="1" type="stmt"/>
        <line num="11" count="1" type="stmt"/>
        <line num="12" count="1" type="stmt"/>
        <line num="14" count="1" type="stmt"/>
        <line num="28" count="1" type="stmt"/>
        <line num="36" count="1" type="stmt"/>
        <line num="44" count="1" type="stmt"/>
        <line num="55" count="1" type="stmt"/>
        <line num="64" count="1" type="stmt"/>
        <line num="73" count="1" type="stmt"/>
        <line num="89" count="1" type="stmt"/>
        <line num="98" count="1" type="stmt"/>
        <line num="100" count="1" type="stmt"/>
      </file>
    </package>
    <package name="dwengo_backend.routes.learningObject">
      <metrics statements="11" coveredstatements="11" conditionals="0" coveredconditionals="0" methods="0" coveredmethods="0"/>
      <file name="learningObjectRoutes.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/learningObject/learningObjectRoutes.ts">
        <metrics statements="11" coveredstatements="11" conditionals="0" coveredconditionals="0" methods="0" coveredmethods="0"/>
        <line num="1" count="1" type="stmt"/>
        <line num="2" count="1" type="stmt"/>
        <line num="10" count="1" type="stmt"/>
        <line num="12" count="1" type="stmt"/>
        <line num="15" count="1" type="stmt"/>
        <line num="17" count="1" type="stmt"/>
        <line num="18" count="1" type="stmt"/>
        <line num="19" count="1" type="stmt"/>
        <line num="23" count="1" type="stmt"/>
        <line num="25" count="1" type="stmt"/>
        <line num="29" count="1" type="stmt"/>
      </file>
    </package>
    <package name="dwengo_backend.routes.learningPath">
      <metrics statements="8" coveredstatements="8" conditionals="0" coveredconditionals="0" methods="0" coveredmethods="0"/>
      <file name="learningPathRoutes.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/learningPath/learningPathRoutes.ts">
        <metrics statements="8" coveredstatements="8" conditionals="0" coveredconditionals="0" methods="0" coveredmethods="0"/>
        <line num="1" count="1" type="stmt"/>
        <line num="2" count="1" type="stmt"/>
        <line num="6" count="1" type="stmt"/>
        <line num="8" count="1" type="stmt"/>
        <line num="11" count="1" type="stmt"/>
        <line num="14" count="1" type="stmt"/>
        <line num="17" count="1" type="stmt"/>
        <line num="19" count="1" type="stmt"/>
      </file>
    </package>
    <package name="dwengo_backend.routes.question">
      <metrics statements="19" coveredstatements="19" conditionals="0" coveredconditionals="0" methods="0" coveredmethods="0"/>
      <file name="questionRoutes.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/question/questionRoutes.ts">
        <metrics statements="19" coveredstatements="19" conditionals="0" coveredconditionals="0" methods="0" coveredmethods="0"/>
        <line num="2" count="1" type="stmt"/>
        <line num="3" count="1" type="stmt"/>
        <line num="18" count="1" type="stmt"/>
        <line num="19" count="1" type="stmt"/>
        <line num="26" count="1" type="stmt"/>
        <line num="29" count="1" type="stmt"/>
        <line num="32" count="1" type="stmt"/>
        <line num="35" count="1" type="stmt"/>
        <line num="38" count="1" type="stmt"/>
        <line num="41" count="1" type="stmt"/>
        <line num="43" count="1" type="stmt"/>
        <line num="46" count="1" type="stmt"/>
        <line num="49" count="1" type="stmt"/>
        <line num="52" count="1" type="stmt"/>
        <line num="55" count="1" type="stmt"/>
        <line num="58" count="1" type="stmt"/>
        <line num="61" count="1" type="stmt"/>
        <line num="64" count="1" type="stmt"/>
        <line num="66" count="1" type="stmt"/>
      </file>
    </package>
    <package name="dwengo_backend.routes.student">
      <metrics statements="39" coveredstatements="39" conditionals="0" coveredconditionals="0" methods="0" coveredmethods="0"/>
      <file name="studentAssignmentRoutes.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/student/studentAssignmentRoutes.ts">
        <metrics statements="6" coveredstatements="6" conditionals="0" coveredconditionals="0" methods="0" coveredmethods="0"/>
        <line num="1" count="1" type="stmt"/>
        <line num="2" count="1" type="stmt"/>
        <line num="3" count="1" type="stmt"/>
        <line num="5" count="1" type="stmt"/>
        <line num="7" count="1" type="stmt"/>
        <line num="9" count="1" type="stmt"/>
      </file>
      <file name="studentAuthRoutes.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/student/studentAuthRoutes.ts">
        <metrics statements="7" coveredstatements="7" conditionals="0" coveredconditionals="0" methods="0" coveredmethods="0"/>
        <line num="1" count="1" type="stmt"/>
        <line num="2" count="1" type="stmt"/>
        <line num="3" count="1" type="stmt"/>
        <line num="5" count="1" type="stmt"/>
        <line num="8" count="1" type="stmt"/>
        <line num="11" count="1" type="stmt"/>
        <line num="13" count="1" type="stmt"/>
      </file>
      <file name="studentClassRoutes.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/student/studentClassRoutes.ts">
        <metrics statements="9" coveredstatements="9" conditionals="0" coveredconditionals="0" methods="0" coveredmethods="0"/>
        <line num="1" count="1" type="stmt"/>
        <line num="2" count="1" type="stmt"/>
        <line num="3" count="1" type="stmt"/>
        <line num="4" count="1" type="stmt"/>
        <line num="6" count="1" type="stmt"/>
        <line num="9" count="1" type="stmt"/>
        <line num="11" count="1" type="stmt"/>
        <line num="12" count="1" type="stmt"/>
        <line num="14" count="1" type="stmt"/>
      </file>
      <file name="studentSubmissionRoute.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/student/studentSubmissionRoute.ts">
        <metrics statements="9" coveredstatements="9" conditionals="0" coveredconditionals="0" methods="0" coveredmethods="0"/>
        <line num="1" count="1" type="stmt"/>
        <line num="2" count="1" type="stmt"/>
        <line num="3" count="1" type="stmt"/>
        <line num="5" count="1" type="stmt"/>
        <line num="7" count="1" type="stmt"/>
        <line num="9" count="1" type="stmt"/>
        <line num="11" count="1" type="stmt"/>
        <line num="12" count="1" type="stmt"/>
        <line num="14" count="1" type="stmt"/>
      </file>
      <file name="studentTeamRoutes.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/student/studentTeamRoutes.ts">
        <metrics statements="8" coveredstatements="8" conditionals="0" coveredconditionals="0" methods="0" coveredmethods="0"/>
        <line num="1" count="1" type="stmt"/>
        <line num="2" count="1" type="stmt"/>
        <line num="7" count="1" type="stmt"/>
        <line num="9" count="1" type="stmt"/>
        <line num="12" count="1" type="stmt"/>
        <line num="15" count="1" type="stmt"/>
        <line num="18" count="1" type="stmt"/>
        <line num="20" count="1" type="stmt"/>
      </file>
    </package>
    <package name="dwengo_backend.routes.teacher">
      <metrics statements="130" coveredstatements="130" conditionals="0" coveredconditionals="0" methods="0" coveredmethods="0"/>
      <file name="feedbackRoutes.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/teacher/feedbackRoutes.ts">
        <metrics statements="10" coveredstatements="10" conditionals="0" coveredconditionals="0" methods="0" coveredmethods="0"/>
        <line num="1" count="1" type="stmt"/>
        <line num="2" count="1" type="stmt"/>
        <line num="3" count="1" type="stmt"/>
        <line num="5" count="1" type="stmt"/>
        <line num="7" count="1" type="stmt"/>
        <line num="8" count="1" type="stmt"/>
        <line num="9" count="1" type="stmt"/>
        <line num="10" count="1" type="stmt"/>
        <line num="12" count="1" type="stmt"/>
        <line num="15" count="1" type="stmt"/>
      </file>
      <file name="teacherAssignmentRoutes.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/teacher/teacherAssignmentRoutes.ts">
        <metrics statements="10" coveredstatements="10" conditionals="0" coveredconditionals="0" methods="0" coveredmethods="0"/>
        <line num="1" count="1" type="stmt"/>
        <line num="2" count="1" type="stmt"/>
        <line num="3" count="1" type="stmt"/>
        <line num="5" count="1" type="stmt"/>
        <line num="6" count="1" type="stmt"/>
        <line num="8" count="1" type="stmt"/>
        <line num="9" count="1" type="stmt"/>
        <line num="10" count="1" type="stmt"/>
        <line num="11" count="1" type="stmt"/>
        <line num="13" count="1" type="stmt"/>
      </file>
      <file name="teacherAuthRoutes.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/teacher/teacherAuthRoutes.ts">
        <metrics statements="7" coveredstatements="7" conditionals="0" coveredconditionals="0" methods="0" coveredmethods="0"/>
        <line num="1" count="1" type="stmt"/>
        <line num="2" count="1" type="stmt"/>
        <line num="3" count="1" type="stmt"/>
        <line num="5" count="1" type="stmt"/>
        <line num="8" count="1" type="stmt"/>
        <line num="11" count="1" type="stmt"/>
        <line num="13" count="1" type="stmt"/>
      </file>
      <file name="teacherClassRoutes.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/teacher/teacherClassRoutes.ts">
        <metrics statements="47" coveredstatements="47" conditionals="0" coveredconditionals="0" methods="0" coveredmethods="0"/>
        <line num="1" count="1" type="stmt"/>
        <line num="2" count="1" type="stmt"/>
        <line num="3" count="1" type="stmt"/>
        <line num="11" count="1" type="stmt"/>
        <line num="18" count="1" type="stmt"/>
        <line num="22" count="1" type="stmt"/>
        <line num="23" count="1" type="stmt"/>
        <line num="32" count="1" type="stmt"/>
        <line num="35" count="1" type="stmt"/>
        <line num="38" count="1" type="stmt"/>
        <line num="39" count="1" type="stmt"/>
        <line num="40" count="1" type="stmt"/>
        <line num="41" count="1" type="stmt"/>
        <line num="42" count="1" type="stmt"/>
        <line num="43" count="1" type="stmt"/>
        <line num="46" count="1" type="stmt"/>
        <line num="47" count="1" type="stmt"/>
        <line num="48" count="1" type="stmt"/>
        <line num="49" count="1" type="stmt"/>
        <line num="50" count="1" type="stmt"/>
        <line num="51" count="1" type="stmt"/>
        <line num="52" count="1" type="stmt"/>
        <line num="53" count="1" type="stmt"/>
        <line num="54" count="1" type="stmt"/>
        <line num="55" count="1" type="stmt"/>
        <line num="56" count="1" type="stmt"/>
        <line num="57" count="1" type="stmt"/>
        <line num="58" count="1" type="stmt"/>
        <line num="59" count="1" type="stmt"/>
        <line num="60" count="1" type="stmt"/>
        <line num="61" count="1" type="stmt"/>
        <line num="62" count="1" type="stmt"/>
        <line num="63" count="1" type="stmt"/>
        <line num="64" count="1" type="stmt"/>
        <line num="65" count="1" type="stmt"/>
        <line num="66" count="1" type="stmt"/>
        <line num="67" count="1" type="stmt"/>
        <line num="68" count="1" type="stmt"/>
        <line num="69" count="1" type="stmt"/>
        <line num="70" count="1" type="stmt"/>
        <line num="71" count="1" type="stmt"/>
        <line num="72" count="1" type="stmt"/>
        <line num="73" count="1" type="stmt"/>
        <line num="74" count="1" type="stmt"/>
        <line num="77" count="1" type="stmt"/>
        <line num="78" count="1" type="stmt"/>
        <line num="80" count="1" type="stmt"/>
      </file>
      <file name="teacherLocalLearningObjectRoutes.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/teacher/teacherLocalLearningObjectRoutes.ts">
        <metrics statements="15" coveredstatements="15" conditionals="0" coveredconditionals="0" methods="0" coveredmethods="0"/>
        <line num="1" count="1" type="stmt"/>
        <line num="2" count="1" type="stmt"/>
        <line num="9" count="1" type="stmt"/>
        <line num="11" count="1" type="stmt"/>
        <line num="14" count="1" type="stmt"/>
        <line num="20" count="1" type="stmt"/>
        <line num="21" count="1" type="stmt"/>
        <line num="22" count="1" type="stmt"/>
        <line num="23" count="1" type="stmt"/>
        <line num="30" count="1" type="stmt"/>
        <line num="31" count="1" type="stmt"/>
        <line num="32" count="1" type="stmt"/>
        <line num="33" count="1" type="stmt"/>
        <line num="34" count="1" type="stmt"/>
        <line num="36" count="1" type="stmt"/>
      </file>
      <file name="teacherLocalLearningPathNodesRoutes.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/teacher/teacherLocalLearningPathNodesRoutes.ts">
        <metrics statements="10" coveredstatements="10" conditionals="0" coveredconditionals="0" methods="0" coveredmethods="0"/>
        <line num="1" count="1" type="stmt"/>
        <line num="2" count="1" type="stmt"/>
        <line num="3" count="1" type="stmt"/>
        <line num="10" count="1" type="stmt"/>
        <line num="11" count="1" type="stmt"/>
        <line num="17" count="1" type="stmt"/>
        <line num="23" count="1" type="stmt"/>
        <line num="29" count="1" type="stmt"/>
        <line num="35" count="1" type="stmt"/>
        <line num="37" count="1" type="stmt"/>
      </file>
      <file name="teacherLocalLearningPathRoutes.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/teacher/teacherLocalLearningPathRoutes.ts">
        <metrics statements="11" coveredstatements="11" conditionals="0" coveredconditionals="0" methods="0" coveredmethods="0"/>
        <line num="1" count="1" type="stmt"/>
        <line num="2" count="1" type="stmt"/>
        <line num="3" count="1" type="stmt"/>
        <line num="11" count="1" type="stmt"/>
        <line num="14" count="1" type="stmt"/>
        <line num="20" count="1" type="stmt"/>
        <line num="26" count="1" type="stmt"/>
        <line num="32" count="1" type="stmt"/>
        <line num="38" count="1" type="stmt"/>
        <line num="44" count="1" type="stmt"/>
        <line num="46" count="1" type="stmt"/>
      </file>
      <file name="teacherSubmissionRoute.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/teacher/teacherSubmissionRoute.ts">
        <metrics statements="10" coveredstatements="10" conditionals="0" coveredconditionals="0" methods="0" coveredmethods="0"/>
        <line num="1" count="1" type="stmt"/>
        <line num="2" count="1" type="stmt"/>
        <line num="3" count="1" type="stmt"/>
        <line num="5" count="1" type="stmt"/>
        <line num="7" count="1" type="stmt"/>
        <line num="9" count="1" type="stmt"/>
        <line num="10" count="1" type="stmt"/>
        <line num="12" count="1" type="stmt"/>
        <line num="13" count="1" type="stmt"/>
        <line num="16" count="1" type="stmt"/>
      </file>
      <file name="teacherTeamsRoutes.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/routes/teacher/teacherTeamsRoutes.ts">
        <metrics statements="10" coveredstatements="10" conditionals="0" coveredconditionals="0" methods="0" coveredmethods="0"/>
        <line num="1" count="1" type="stmt"/>
        <line num="2" count="1" type="stmt"/>
        <line num="8" count="1" type="stmt"/>
        <line num="14" count="1" type="stmt"/>
        <line num="17" count="1" type="stmt"/>
        <line num="26" count="1" type="stmt"/>
        <line num="29" count="1" type="stmt"/>
        <line num="32" count="1" type="stmt"/>
        <line num="35" count="1" type="stmt"/>
        <line num="37" count="1" type="stmt"/>
      </file>
    </package>
    <package name="dwengo_backend.services">
      <metrics statements="2189" coveredstatements="758" conditionals="102" coveredconditionals="88" methods="127" coveredmethods="41"/>
      <file name="assignmentService.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/assignmentService.ts">
        <metrics statements="9" coveredstatements="9" conditionals="1" coveredconditionals="1" methods="1" coveredmethods="1"/>
        <line num="1" count="1" type="stmt"/>
        <line num="3" count="1" type="stmt"/>
        <line num="5" count="1" type="stmt"/>
        <line num="6" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="7" count="1" type="stmt"/>
        <line num="8" count="1" type="stmt"/>
        <line num="10" count="1" type="stmt"/>
        <line num="11" count="1" type="stmt"/>
        <line num="12" count="1" type="stmt"/>
      </file>
      <file name="authorizationService.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/authorizationService.ts">
        <metrics statements="47" coveredstatements="42" conditionals="14" coveredconditionals="6" methods="2" coveredmethods="2"/>
        <line num="1" count="1" type="stmt"/>
        <line num="3" count="1" type="stmt"/>
        <line num="5" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="6" count="12" type="stmt"/>
        <line num="7" count="12" type="stmt"/>
        <line num="8" count="12" type="stmt"/>
        <line num="9" count="12" type="stmt"/>
        <line num="10" count="12" type="stmt"/>
        <line num="11" count="12" type="stmt"/>
        <line num="12" count="12" type="stmt"/>
        <line num="13" count="12" type="stmt"/>
        <line num="15" count="12" type="cond" truecount="0" falsecount="1"/>
        <line num="18" count="12" type="cond" truecount="0" falsecount="1"/>
        <line num="20" count="12" type="cond" truecount="0" falsecount="1"/>
        <line num="21" count="12" type="cond" truecount="0" falsecount="2"/>
        <line num="24" count="12" type="cond" truecount="1" falsecount="0"/>
        <line num="25" count="8" type="stmt"/>
        <line num="26" count="8" type="stmt"/>
        <line num="27" count="8" type="stmt"/>
        <line num="28" count="8" type="stmt"/>
        <line num="29" count="8" type="cond" truecount="1" falsecount="0"/>
        <line num="32" count="12" type="cond" truecount="0" falsecount="2"/>
        <line num="33" count="0" type="stmt"/>
        <line num="34" count="0" type="stmt"/>
        <line num="35" count="0" type="stmt"/>
        <line num="36" count="0" type="stmt"/>
        <line num="37" count="0" type="cond" truecount="1" falsecount="0"/>
        <line num="39" count="4" type="stmt"/>
        <line num="40" count="4" type="stmt"/>
        <line num="42" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="43" count="4" type="stmt"/>
        <line num="44" count="4" type="stmt"/>
        <line num="45" count="4" type="stmt"/>
        <line num="46" count="4" type="cond" truecount="0" falsecount="1"/>
        <line num="50" count="4" type="stmt"/>
        <line num="51" count="4" type="stmt"/>
        <line num="52" count="4" type="stmt"/>
        <line num="53" count="4" type="stmt"/>
        <line num="54" count="4" type="stmt"/>
        <line num="57" count="4" type="stmt"/>
        <line num="58" count="4" type="stmt"/>
        <line num="59" count="4" type="stmt"/>
        <line num="60" count="4" type="cond" truecount="1" falsecount="0"/>
        <line num="61" count="4" type="stmt"/>
        <line num="62" count="4" type="stmt"/>
        <line num="63" count="4" type="stmt"/>
        <line num="64" count="4" type="stmt"/>
      </file>
      <file name="classService.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/classService.ts">
        <metrics statements="167" coveredstatements="149" conditionals="26" coveredconditionals="25" methods="17" coveredmethods="14"/>
        <line num="1" count="1" type="stmt"/>
        <line num="2" count="1" type="stmt"/>
        <line num="3" count="1" type="stmt"/>
        <line num="5" count="1" type="stmt"/>
        <line num="9" count="1" type="stmt"/>
        <line num="10" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="12" count="1" type="stmt"/>
        <line num="14" count="1" type="stmt"/>
        <line num="15" count="1" type="stmt"/>
        <line num="16" count="1" type="stmt"/>
        <line num="17" count="1" type="stmt"/>
        <line num="18" count="1" type="stmt"/>
        <line num="19" count="1" type="stmt"/>
        <line num="22" count="1" type="stmt"/>
        <line num="23" count="1" type="stmt"/>
        <line num="24" count="1" type="stmt"/>
        <line num="25" count="1" type="stmt"/>
        <line num="26" count="1" type="stmt"/>
        <line num="27" count="1" type="stmt"/>
        <line num="29" count="1" type="stmt"/>
        <line num="30" count="1" type="stmt"/>
        <line num="34" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="36" count="8" type="stmt"/>
        <line num="37" count="8" type="stmt"/>
        <line num="38" count="8" type="stmt"/>
        <line num="39" count="8" type="cond" truecount="1" falsecount="0"/>
        <line num="40" count="2" type="stmt"/>
        <line num="41" count="2" type="cond" truecount="1" falsecount="0"/>
        <line num="44" count="6" type="stmt"/>
        <line num="45" count="8" type="cond" truecount="1" falsecount="0"/>
        <line num="46" count="3" type="stmt"/>
        <line num="47" count="3" type="stmt"/>
        <line num="48" count="3" type="stmt"/>
        <line num="49" count="8" type="stmt"/>
        <line num="52" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="53" count="2" type="cond" truecount="1" falsecount="0"/>
        <line num="54" count="1" type="stmt"/>
        <line num="55" count="2" type="stmt"/>
        <line num="58" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="60" count="1" type="stmt"/>
        <line num="61" count="1" type="stmt"/>
        <line num="62" count="1" type="stmt"/>
        <line num="63" count="1" type="stmt"/>
        <line num="64" count="1" type="stmt"/>
        <line num="65" count="1" type="stmt"/>
        <line num="66" count="1" type="stmt"/>
        <line num="67" count="1" type="stmt"/>
        <line num="68" count="1" type="stmt"/>
        <line num="69" count="1" type="stmt"/>
        <line num="72" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="74" count="1" type="stmt"/>
        <line num="75" count="1" type="stmt"/>
        <line num="76" count="1" type="stmt"/>
        <line num="77" count="1" type="stmt"/>
        <line num="78" count="1" type="stmt"/>
        <line num="79" count="1" type="stmt"/>
        <line num="80" count="1" type="stmt"/>
        <line num="81" count="1" type="stmt"/>
        <line num="82" count="1" type="stmt"/>
        <line num="83" count="1" type="stmt"/>
        <line num="86" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="87" count="31" type="stmt"/>
        <line num="88" count="31" type="stmt"/>
        <line num="89" count="31" type="stmt"/>
        <line num="90" count="31" type="stmt"/>
        <line num="91" count="31" type="stmt"/>
        <line num="92" count="31" type="stmt"/>
        <line num="93" count="31" type="stmt"/>
        <line num="94" count="31" type="stmt"/>
        <line num="95" count="31" type="stmt"/>
        <line num="96" count="31" type="stmt"/>
        <line num="99" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="100" count="3" type="cond" truecount="1" falsecount="0"/>
        <line num="102" count="1" type="stmt"/>
        <line num="103" count="1" type="stmt"/>
        <line num="104" count="1" type="stmt"/>
        <line num="105" count="1" type="stmt"/>
        <line num="106" count="1" type="stmt"/>
        <line num="107" count="1" type="stmt"/>
        <line num="108" count="1" type="stmt"/>
        <line num="109" count="1" type="stmt"/>
        <line num="110" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="111" count="3" type="stmt"/>
        <line num="113" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="114" count="1" type="stmt"/>
        <line num="115" count="1" type="stmt"/>
        <line num="116" count="1" type="stmt"/>
        <line num="117" count="1" type="stmt"/>
        <line num="118" count="1" type="stmt"/>
        <line num="119" count="1" type="stmt"/>
        <line num="120" count="1" type="stmt"/>
        <line num="123" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="124" count="6" type="cond" truecount="1" falsecount="0"/>
        <line num="125" count="6" type="stmt"/>
        <line num="127" count="1" type="stmt"/>
        <line num="128" count="0" type="stmt"/>
        <line num="129" count="0" type="stmt"/>
        <line num="130" count="0" type="stmt"/>
        <line num="131" count="0" type="stmt"/>
        <line num="132" count="0" type="stmt"/>
        <line num="133" count="0" type="stmt"/>
        <line num="134" count="0" type="stmt"/>
        <line num="135" count="0" type="stmt"/>
        <line num="136" count="0" type="stmt"/>
        <line num="139" count="1" type="stmt"/>
        <line num="141" count="0" type="stmt"/>
        <line num="142" count="0" type="stmt"/>
        <line num="145" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="146" count="7" type="stmt"/>
        <line num="147" count="7" type="stmt"/>
        <line num="148" count="7" type="stmt"/>
        <line num="149" count="7" type="stmt"/>
        <line num="152" count="1" type="stmt"/>
        <line num="153" count="0" type="stmt"/>
        <line num="154" count="0" type="stmt"/>
        <line num="155" count="0" type="stmt"/>
        <line num="156" count="0" type="stmt"/>
        <line num="157" count="0" type="stmt"/>
        <line num="160" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="161" count="7" type="cond" truecount="0" falsecount="1"/>
        <line num="162" count="0" type="stmt"/>
        <line num="163" count="0" type="stmt"/>
        <line num="164" count="7" type="stmt"/>
        <line num="165" count="7" type="stmt"/>
        <line num="166" count="7" type="stmt"/>
        <line num="167" count="7" type="stmt"/>
        <line num="168" count="7" type="stmt"/>
        <line num="169" count="7" type="stmt"/>
        <line num="170" count="7" type="stmt"/>
        <line num="172" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="173" count="3" type="stmt"/>
        <line num="174" count="3" type="stmt"/>
        <line num="175" count="3" type="stmt"/>
        <line num="176" count="3" type="stmt"/>
        <line num="177" count="3" type="cond" truecount="1" falsecount="0"/>
        <line num="178" count="1" type="stmt"/>
        <line num="179" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="182" count="2" type="stmt"/>
        <line num="183" count="3" type="cond" truecount="1" falsecount="0"/>
        <line num="184" count="1" type="stmt"/>
        <line num="185" count="1" type="stmt"/>
        <line num="187" count="1" type="stmt"/>
        <line num="188" count="3" type="stmt"/>
        <line num="191" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="192" count="2" type="stmt"/>
        <line num="193" count="2" type="stmt"/>
        <line num="195" count="2" type="stmt"/>
        <line num="197" count="2" type="stmt"/>
        <line num="200" count="2" type="stmt"/>
        <line num="201" count="2" type="stmt"/>
        <line num="202" count="2" type="stmt"/>
        <line num="204" count="2" type="stmt"/>
        <line num="205" count="2" type="stmt"/>
        <line num="206" count="2" type="stmt"/>
        <line num="207" count="2" type="stmt"/>
        <line num="209" count="2" type="stmt"/>
        <line num="210" count="2" type="stmt"/>
        <line num="213" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="214" count="3" type="cond" truecount="1" falsecount="0"/>
        <line num="217" count="1" type="stmt"/>
        <line num="220" count="1" type="stmt"/>
        <line num="221" count="1" type="stmt"/>
        <line num="222" count="1" type="stmt"/>
        <line num="223" count="1" type="stmt"/>
        <line num="225" count="1" type="stmt"/>
        <line num="226" count="3" type="stmt"/>
        <line num="227" count="1" type="stmt"/>
      </file>
      <file name="combinedLearningObjectService.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/combinedLearningObjectService.ts">
        <metrics statements="55" coveredstatements="7" conditionals="0" coveredconditionals="0" methods="5" coveredmethods="0"/>
        <line num="2" count="1" type="stmt"/>
        <line num="11" count="1" type="stmt"/>
        <line num="22" count="1" type="stmt"/>
        <line num="23" count="0" type="stmt"/>
        <line num="24" count="0" type="stmt"/>
        <line num="25" count="0" type="stmt"/>
        <line num="26" count="0" type="stmt"/>
        <line num="27" count="0" type="stmt"/>
        <line num="28" count="0" type="stmt"/>
        <line num="33" count="1" type="stmt"/>
        <line num="34" count="0" type="stmt"/>
        <line num="35" count="0" type="stmt"/>
        <line num="36" count="0" type="stmt"/>
        <line num="37" count="0" type="stmt"/>
        <line num="38" count="0" type="stmt"/>
        <line num="39" count="0" type="stmt"/>
        <line num="40" count="0" type="stmt"/>
        <line num="45" count="1" type="stmt"/>
        <line num="46" count="0" type="stmt"/>
        <line num="47" count="0" type="stmt"/>
        <line num="48" count="0" type="stmt"/>
        <line num="50" count="0" type="stmt"/>
        <line num="51" count="0" type="stmt"/>
        <line num="54" count="0" type="stmt"/>
        <line num="55" count="0" type="stmt"/>
        <line num="57" count="0" type="stmt"/>
        <line num="58" count="0" type="stmt"/>
        <line num="64" count="1" type="stmt"/>
        <line num="65" count="0" type="stmt"/>
        <line num="66" count="0" type="stmt"/>
        <line num="67" count="0" type="stmt"/>
        <line num="68" count="0" type="stmt"/>
        <line num="69" count="0" type="stmt"/>
        <line num="72" count="1" type="stmt"/>
        <line num="73" count="0" type="stmt"/>
        <line num="74" count="0" type="stmt"/>
        <line num="75" count="0" type="stmt"/>
        <line num="76" count="0" type="stmt"/>
        <line num="77" count="0" type="stmt"/>
        <line num="79" count="0" type="stmt"/>
        <line num="80" count="0" type="stmt"/>
        <line num="81" count="0" type="stmt"/>
        <line num="82" count="0" type="stmt"/>
        <line num="83" count="0" type="stmt"/>
        <line num="84" count="0" type="stmt"/>
        <line num="85" count="0" type="stmt"/>
        <line num="88" count="0" type="stmt"/>
        <line num="89" count="0" type="stmt"/>
        <line num="90" count="0" type="stmt"/>
        <line num="91" count="0" type="stmt"/>
        <line num="92" count="0" type="stmt"/>
        <line num="93" count="0" type="stmt"/>
        <line num="94" count="0" type="stmt"/>
        <line num="96" count="0" type="stmt"/>
        <line num="97" count="0" type="stmt"/>
      </file>
      <file name="dwengoLearningObjectService.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/dwengoLearningObjectService.ts">
        <metrics statements="167" coveredstatements="20" conditionals="1" coveredconditionals="1" methods="6" coveredmethods="0"/>
        <line num="1" count="1" type="stmt"/>
        <line num="7" count="7" type="cond" truecount="1" falsecount="0"/>
        <line num="8" count="1" type="stmt"/>
        <line num="9" count="1" type="stmt"/>
        <line num="10" count="1" type="stmt"/>
        <line num="11" count="1" type="stmt"/>
        <line num="12" count="1" type="stmt"/>
        <line num="13" count="1" type="stmt"/>
        <line num="14" count="1" type="stmt"/>
        <line num="15" count="1" type="stmt"/>
        <line num="21" count="1" type="stmt"/>
        <line num="22" count="1" type="stmt"/>
        <line num="23" count="1" type="stmt"/>
        <line num="24" count="1" type="stmt"/>
        <line num="25" count="1" type="stmt"/>
        <line num="26" count="1" type="stmt"/>
        <line num="27" count="1" type="stmt"/>
        <line num="28" count="1" type="stmt"/>
        <line num="29" count="1" type="stmt"/>
        <line num="30" count="1" type="stmt"/>
        <line num="82" count="0" type="stmt"/>
        <line num="83" count="0" type="stmt"/>
        <line num="84" count="0" type="stmt"/>
        <line num="85" count="0" type="stmt"/>
        <line num="86" count="0" type="stmt"/>
        <line num="87" count="0" type="stmt"/>
        <line num="88" count="0" type="stmt"/>
        <line num="89" count="0" type="stmt"/>
        <line num="90" count="0" type="stmt"/>
        <line num="91" count="0" type="stmt"/>
        <line num="92" count="0" type="stmt"/>
        <line num="93" count="0" type="stmt"/>
        <line num="94" count="0" type="stmt"/>
        <line num="95" count="0" type="stmt"/>
        <line num="96" count="0" type="stmt"/>
        <line num="97" count="0" type="stmt"/>
        <line num="98" count="0" type="stmt"/>
        <line num="99" count="0" type="stmt"/>
        <line num="100" count="0" type="stmt"/>
        <line num="101" count="0" type="stmt"/>
        <line num="102" count="0" type="stmt"/>
        <line num="103" count="0" type="stmt"/>
        <line num="104" count="0" type="stmt"/>
        <line num="105" count="0" type="stmt"/>
        <line num="106" count="0" type="stmt"/>
        <line num="107" count="0" type="stmt"/>
        <line num="108" count="0" type="stmt"/>
        <line num="109" count="0" type="stmt"/>
        <line num="112" count="0" type="stmt"/>
        <line num="113" count="0" type="stmt"/>
        <line num="114" count="0" type="stmt"/>
        <line num="115" count="0" type="stmt"/>
        <line num="116" count="0" type="stmt"/>
        <line num="117" count="0" type="stmt"/>
        <line num="118" count="0" type="stmt"/>
        <line num="119" count="0" type="stmt"/>
        <line num="120" count="0" type="stmt"/>
        <line num="121" count="0" type="stmt"/>
        <line num="122" count="0" type="stmt"/>
        <line num="123" count="0" type="stmt"/>
        <line num="124" count="0" type="stmt"/>
        <line num="125" count="0" type="stmt"/>
        <line num="126" count="0" type="stmt"/>
        <line num="129" count="0" type="stmt"/>
        <line num="130" count="0" type="stmt"/>
        <line num="131" count="0" type="stmt"/>
        <line num="132" count="0" type="stmt"/>
        <line num="133" count="0" type="stmt"/>
        <line num="134" count="0" type="stmt"/>
        <line num="135" count="0" type="stmt"/>
        <line num="136" count="0" type="stmt"/>
        <line num="137" count="0" type="stmt"/>
        <line num="139" count="0" type="stmt"/>
        <line num="140" count="0" type="stmt"/>
        <line num="141" count="0" type="stmt"/>
        <line num="142" count="0" type="stmt"/>
        <line num="143" count="0" type="stmt"/>
        <line num="144" count="0" type="stmt"/>
        <line num="145" count="0" type="stmt"/>
        <line num="146" count="0" type="stmt"/>
        <line num="147" count="0" type="stmt"/>
        <line num="148" count="0" type="stmt"/>
        <line num="149" count="0" type="stmt"/>
        <line num="150" count="0" type="stmt"/>
        <line num="153" count="0" type="stmt"/>
        <line num="154" count="0" type="stmt"/>
        <line num="155" count="0" type="stmt"/>
        <line num="156" count="0" type="stmt"/>
        <line num="157" count="0" type="stmt"/>
        <line num="158" count="0" type="stmt"/>
        <line num="159" count="0" type="stmt"/>
        <line num="161" count="0" type="stmt"/>
        <line num="162" count="0" type="stmt"/>
        <line num="164" count="0" type="stmt"/>
        <line num="165" count="0" type="stmt"/>
        <line num="166" count="0" type="stmt"/>
        <line num="168" count="0" type="stmt"/>
        <line num="169" count="0" type="stmt"/>
        <line num="170" count="0" type="stmt"/>
        <line num="171" count="0" type="stmt"/>
        <line num="172" count="0" type="stmt"/>
        <line num="173" count="0" type="stmt"/>
        <line num="174" count="0" type="stmt"/>
        <line num="175" count="0" type="stmt"/>
        <line num="176" count="0" type="stmt"/>
        <line num="177" count="0" type="stmt"/>
        <line num="178" count="0" type="stmt"/>
        <line num="179" count="0" type="stmt"/>
        <line num="182" count="0" type="stmt"/>
        <line num="183" count="0" type="stmt"/>
        <line num="184" count="0" type="stmt"/>
        <line num="185" count="0" type="stmt"/>
        <line num="186" count="0" type="stmt"/>
        <line num="187" count="0" type="stmt"/>
        <line num="188" count="0" type="stmt"/>
        <line num="189" count="0" type="stmt"/>
        <line num="190" count="0" type="stmt"/>
        <line num="191" count="0" type="stmt"/>
        <line num="192" count="0" type="stmt"/>
        <line num="193" count="0" type="stmt"/>
        <line num="194" count="0" type="stmt"/>
        <line num="195" count="0" type="stmt"/>
        <line num="196" count="0" type="stmt"/>
        <line num="197" count="0" type="stmt"/>
        <line num="198" count="0" type="stmt"/>
        <line num="199" count="0" type="stmt"/>
        <line num="200" count="0" type="stmt"/>
        <line num="201" count="0" type="stmt"/>
        <line num="202" count="0" type="stmt"/>
        <line num="205" count="0" type="stmt"/>
        <line num="206" count="0" type="stmt"/>
        <line num="207" count="0" type="stmt"/>
        <line num="208" count="0" type="stmt"/>
        <line num="209" count="0" type="stmt"/>
        <line num="210" count="0" type="stmt"/>
        <line num="211" count="0" type="stmt"/>
        <line num="212" count="0" type="stmt"/>
        <line num="213" count="0" type="stmt"/>
        <line num="214" count="0" type="stmt"/>
        <line num="215" count="0" type="stmt"/>
        <line num="216" count="0" type="stmt"/>
        <line num="217" count="0" type="stmt"/>
        <line num="218" count="0" type="stmt"/>
        <line num="220" count="0" type="stmt"/>
        <line num="221" count="0" type="stmt"/>
        <line num="222" count="0" type="stmt"/>
        <line num="223" count="0" type="stmt"/>
        <line num="224" count="0" type="stmt"/>
        <line num="225" count="0" type="stmt"/>
        <line num="226" count="0" type="stmt"/>
        <line num="227" count="0" type="stmt"/>
        <line num="228" count="0" type="stmt"/>
        <line num="229" count="0" type="stmt"/>
        <line num="231" count="0" type="stmt"/>
        <line num="232" count="0" type="stmt"/>
        <line num="233" count="0" type="stmt"/>
        <line num="234" count="0" type="stmt"/>
        <line num="235" count="0" type="stmt"/>
        <line num="236" count="0" type="stmt"/>
        <line num="237" count="0" type="stmt"/>
        <line num="238" count="0" type="stmt"/>
        <line num="239" count="0" type="stmt"/>
        <line num="240" count="0" type="stmt"/>
        <line num="241" count="0" type="stmt"/>
        <line num="242" count="0" type="stmt"/>
        <line num="243" count="0" type="stmt"/>
        <line num="244" count="0" type="stmt"/>
      </file>
      <file name="feedbackService.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/feedbackService.ts">
        <metrics statements="125" coveredstatements="11" conditionals="0" coveredconditionals="0" methods="7" coveredmethods="0"/>
        <line num="1" count="1" type="stmt"/>
        <line num="4" count="1" type="stmt"/>
        <line num="6" count="1" type="stmt"/>
        <line num="7" count="1" type="stmt"/>
        <line num="8" count="0" type="stmt"/>
        <line num="9" count="0" type="stmt"/>
        <line num="10" count="0" type="stmt"/>
        <line num="12" count="0" type="stmt"/>
        <line num="13" count="0" type="stmt"/>
        <line num="14" count="0" type="stmt"/>
        <line num="15" count="0" type="stmt"/>
        <line num="16" count="0" type="stmt"/>
        <line num="17" count="0" type="stmt"/>
        <line num="18" count="0" type="stmt"/>
        <line num="19" count="0" type="stmt"/>
        <line num="20" count="0" type="stmt"/>
        <line num="21" count="0" type="stmt"/>
        <line num="22" count="0" type="stmt"/>
        <line num="23" count="0" type="stmt"/>
        <line num="25" count="1" type="stmt"/>
        <line num="26" count="0" type="stmt"/>
        <line num="27" count="0" type="stmt"/>
        <line num="28" count="0" type="stmt"/>
        <line num="31" count="0" type="stmt"/>
        <line num="32" count="0" type="stmt"/>
        <line num="33" count="0" type="stmt"/>
        <line num="34" count="0" type="stmt"/>
        <line num="35" count="0" type="stmt"/>
        <line num="36" count="0" type="stmt"/>
        <line num="37" count="0" type="stmt"/>
        <line num="44" count="0" type="stmt"/>
        <line num="45" count="0" type="stmt"/>
        <line num="48" count="0" type="stmt"/>
        <line num="49" count="0" type="stmt"/>
        <line num="50" count="0" type="stmt"/>
        <line num="52" count="0" type="stmt"/>
        <line num="53" count="0" type="stmt"/>
        <line num="54" count="0" type="stmt"/>
        <line num="55" count="0" type="stmt"/>
        <line num="56" count="0" type="stmt"/>
        <line num="57" count="0" type="stmt"/>
        <line num="58" count="0" type="stmt"/>
        <line num="59" count="0" type="stmt"/>
        <line num="61" count="1" type="stmt"/>
        <line num="62" count="0" type="stmt"/>
        <line num="63" count="0" type="stmt"/>
        <line num="64" count="0" type="stmt"/>
        <line num="66" count="0" type="stmt"/>
        <line num="67" count="0" type="stmt"/>
        <line num="68" count="0" type="stmt"/>
        <line num="69" count="0" type="stmt"/>
        <line num="70" count="0" type="stmt"/>
        <line num="71" count="0" type="stmt"/>
        <line num="73" count="1" type="stmt"/>
        <line num="74" count="0" type="stmt"/>
        <line num="75" count="0" type="stmt"/>
        <line num="76" count="0" type="stmt"/>
        <line num="78" count="0" type="stmt"/>
        <line num="79" count="0" type="stmt"/>
        <line num="80" count="0" type="stmt"/>
        <line num="81" count="0" type="stmt"/>
        <line num="82" count="0" type="stmt"/>
        <line num="83" count="0" type="stmt"/>
        <line num="84" count="0" type="stmt"/>
        <line num="85" count="0" type="stmt"/>
        <line num="86" count="0" type="stmt"/>
        <line num="88" count="1" type="stmt"/>
        <line num="89" count="0" type="stmt"/>
        <line num="90" count="0" type="stmt"/>
        <line num="91" count="0" type="stmt"/>
        <line num="93" count="0" type="stmt"/>
        <line num="94" count="0" type="stmt"/>
        <line num="95" count="0" type="stmt"/>
        <line num="96" count="0" type="stmt"/>
        <line num="97" count="0" type="stmt"/>
        <line num="99" count="0" type="stmt"/>
        <line num="101" count="1" type="stmt"/>
        <line num="103" count="0" type="stmt"/>
        <line num="104" count="0" type="stmt"/>
        <line num="105" count="0" type="stmt"/>
        <line num="106" count="0" type="stmt"/>
        <line num="107" count="0" type="stmt"/>
        <line num="108" count="0" type="stmt"/>
        <line num="109" count="0" type="stmt"/>
        <line num="110" count="0" type="stmt"/>
        <line num="111" count="0" type="stmt"/>
        <line num="112" count="0" type="stmt"/>
        <line num="113" count="0" type="stmt"/>
        <line num="114" count="0" type="stmt"/>
        <line num="115" count="0" type="stmt"/>
        <line num="116" count="0" type="stmt"/>
        <line num="117" count="0" type="stmt"/>
        <line num="118" count="0" type="stmt"/>
        <line num="119" count="0" type="stmt"/>
        <line num="120" count="0" type="stmt"/>
        <line num="121" count="0" type="stmt"/>
        <line num="123" count="0" type="stmt"/>
        <line num="124" count="0" type="stmt"/>
        <line num="126" count="1" type="stmt"/>
        <line num="128" count="0" type="stmt"/>
        <line num="129" count="0" type="stmt"/>
        <line num="130" count="0" type="stmt"/>
        <line num="131" count="0" type="stmt"/>
        <line num="132" count="0" type="stmt"/>
        <line num="133" count="0" type="stmt"/>
        <line num="134" count="0" type="stmt"/>
        <line num="135" count="0" type="stmt"/>
        <line num="136" count="0" type="stmt"/>
        <line num="137" count="0" type="stmt"/>
        <line num="138" count="0" type="stmt"/>
        <line num="139" count="0" type="stmt"/>
        <line num="140" count="0" type="stmt"/>
        <line num="141" count="0" type="stmt"/>
        <line num="142" count="0" type="stmt"/>
        <line num="143" count="0" type="stmt"/>
        <line num="144" count="0" type="stmt"/>
        <line num="145" count="0" type="stmt"/>
        <line num="146" count="0" type="stmt"/>
        <line num="147" count="0" type="stmt"/>
        <line num="148" count="0" type="stmt"/>
        <line num="149" count="0" type="stmt"/>
        <line num="150" count="0" type="stmt"/>
        <line num="153" count="0" type="stmt"/>
        <line num="154" count="0" type="stmt"/>
        <line num="155" count="1" type="stmt"/>
      </file>
      <file name="inviteService.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/inviteService.ts">
        <metrics statements="114" coveredstatements="114" conditionals="20" coveredconditionals="20" methods="7" coveredmethods="7"/>
        <line num="1" count="1" type="stmt"/>
        <line num="2" count="1" type="stmt"/>
        <line num="3" count="1" type="stmt"/>
        <line num="5" count="1" type="stmt"/>
        <line num="7" count="1" type="stmt"/>
        <line num="9" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="10" count="4" type="stmt"/>
        <line num="11" count="4" type="stmt"/>
        <line num="12" count="4" type="stmt"/>
        <line num="13" count="4" type="stmt"/>
        <line num="14" count="4" type="stmt"/>
        <line num="15" count="4" type="stmt"/>
        <line num="16" count="4" type="stmt"/>
        <line num="17" count="4" type="cond" truecount="1" falsecount="0"/>
        <line num="18" count="2" type="stmt"/>
        <line num="19" count="2" type="stmt"/>
        <line num="20" count="2" type="stmt"/>
        <line num="21" count="4" type="stmt"/>
        <line num="23" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="25" count="7" type="stmt"/>
        <line num="26" count="7" type="cond" truecount="1" falsecount="0"/>
        <line num="27" count="1" type="stmt"/>
        <line num="28" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="31" count="6" type="stmt"/>
        <line num="32" count="7" type="cond" truecount="1" falsecount="0"/>
        <line num="33" count="1" type="stmt"/>
        <line num="34" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="37" count="5" type="stmt"/>
        <line num="38" count="5" type="stmt"/>
        <line num="39" count="5" type="stmt"/>
        <line num="40" count="5" type="stmt"/>
        <line num="41" count="5" type="stmt"/>
        <line num="42" count="5" type="stmt"/>
        <line num="43" count="5" type="stmt"/>
        <line num="44" count="7" type="cond" truecount="1" falsecount="0"/>
        <line num="45" count="1" type="stmt"/>
        <line num="46" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="49" count="4" type="stmt"/>
        <line num="50" count="7" type="cond" truecount="1" falsecount="0"/>
        <line num="51" count="1" type="stmt"/>
        <line num="52" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="55" count="3" type="stmt"/>
        <line num="56" count="3" type="stmt"/>
        <line num="57" count="3" type="stmt"/>
        <line num="58" count="3" type="stmt"/>
        <line num="59" count="3" type="stmt"/>
        <line num="60" count="3" type="stmt"/>
        <line num="61" count="3" type="stmt"/>
        <line num="62" count="3" type="stmt"/>
        <line num="63" count="7" type="stmt"/>
        <line num="65" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="67" count="2" type="stmt"/>
        <line num="68" count="2" type="cond" truecount="1" falsecount="0"/>
        <line num="69" count="1" type="stmt"/>
        <line num="70" count="1" type="stmt"/>
        <line num="71" count="1" type="stmt"/>
        <line num="72" count="1" type="stmt"/>
        <line num="73" count="1" type="stmt"/>
        <line num="74" count="1" type="stmt"/>
        <line num="75" count="1" type="stmt"/>
        <line num="76" count="1" type="stmt"/>
        <line num="77" count="2" type="stmt"/>
        <line num="79" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="80" count="1" type="stmt"/>
        <line num="81" count="1" type="stmt"/>
        <line num="82" count="1" type="stmt"/>
        <line num="83" count="1" type="stmt"/>
        <line num="84" count="1" type="stmt"/>
        <line num="85" count="1" type="stmt"/>
        <line num="86" count="1" type="stmt"/>
        <line num="88" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="90" count="3" type="cond" truecount="1" falsecount="0"/>
        <line num="92" count="1" type="stmt"/>
        <line num="94" count="1" type="stmt"/>
        <line num="95" count="1" type="stmt"/>
        <line num="96" count="1" type="stmt"/>
        <line num="97" count="1" type="stmt"/>
        <line num="98" count="1" type="stmt"/>
        <line num="99" count="1" type="stmt"/>
        <line num="100" count="1" type="stmt"/>
        <line num="101" count="1" type="stmt"/>
        <line num="103" count="1" type="stmt"/>
        <line num="104" count="1" type="stmt"/>
        <line num="105" count="1" type="stmt"/>
        <line num="106" count="1" type="stmt"/>
        <line num="107" count="1" type="stmt"/>
        <line num="108" count="1" type="stmt"/>
        <line num="109" count="1" type="stmt"/>
        <line num="110" count="1" type="stmt"/>
        <line num="111" count="3" type="stmt"/>
        <line num="113" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="115" count="1" type="stmt"/>
        <line num="118" count="1" type="stmt"/>
        <line num="119" count="1" type="stmt"/>
        <line num="120" count="1" type="stmt"/>
        <line num="121" count="1" type="stmt"/>
        <line num="122" count="1" type="stmt"/>
        <line num="123" count="1" type="stmt"/>
        <line num="124" count="1" type="stmt"/>
        <line num="125" count="1" type="stmt"/>
        <line num="126" count="1" type="stmt"/>
        <line num="128" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="131" count="4" type="stmt"/>
        <line num="132" count="4" type="cond" truecount="1" falsecount="0"/>
        <line num="133" count="1" type="stmt"/>
        <line num="134" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="137" count="3" type="stmt"/>
        <line num="138" count="3" type="stmt"/>
        <line num="139" count="3" type="stmt"/>
        <line num="140" count="3" type="stmt"/>
        <line num="141" count="3" type="stmt"/>
        <line num="142" count="3" type="stmt"/>
        <line num="143" count="4" type="stmt"/>
        <line num="145" count="1" type="stmt"/>
      </file>
      <file name="joinRequestService.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/joinRequestService.ts">
        <metrics statements="103" coveredstatements="98" conditionals="25" coveredconditionals="22" methods="8" coveredmethods="8"/>
        <line num="1" count="1" type="stmt"/>
        <line num="2" count="1" type="stmt"/>
        <line num="4" count="1" type="stmt"/>
        <line num="5" count="1" type="stmt"/>
        <line num="7" count="1" type="stmt"/>
        <line num="9" count="1" type="stmt"/>
        <line num="12" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="13" count="7" type="stmt"/>
        <line num="14" count="7" type="cond" truecount="1" falsecount="0"/>
        <line num="15" count="1" type="stmt"/>
        <line num="16" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="17" count="6" type="stmt"/>
        <line num="18" count="7" type="stmt"/>
        <line num="20" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="22" count="5" type="stmt"/>
        <line num="23" count="5" type="cond" truecount="1" falsecount="0"/>
        <line num="24" count="1" type="stmt"/>
        <line num="25" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="27" count="4" type="stmt"/>
        <line num="28" count="4" type="stmt"/>
        <line num="29" count="4" type="stmt"/>
        <line num="30" count="5" type="cond" truecount="1" falsecount="0"/>
        <line num="31" count="2" type="stmt"/>
        <line num="32" count="2" type="stmt"/>
        <line num="35" count="2" type="stmt"/>
        <line num="36" count="2" type="stmt"/>
        <line num="37" count="2" type="stmt"/>
        <line num="38" count="2" type="stmt"/>
        <line num="40" count="2" type="stmt"/>
        <line num="41" count="5" type="stmt"/>
        <line num="43" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="44" count="4" type="stmt"/>
        <line num="45" count="4" type="stmt"/>
        <line num="46" count="4" type="stmt"/>
        <line num="47" count="4" type="stmt"/>
        <line num="48" count="4" type="stmt"/>
        <line num="49" count="4" type="stmt"/>
        <line num="50" count="4" type="stmt"/>
        <line num="51" count="4" type="stmt"/>
        <line num="53" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="54" count="7" type="stmt"/>
        <line num="55" count="7" type="cond" truecount="1" falsecount="0"/>
        <line num="58" count="7" type="cond" truecount="1" falsecount="0"/>
        <line num="59" count="1" type="stmt"/>
        <line num="60" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="63" count="5" type="stmt"/>
        <line num="64" count="5" type="stmt"/>
        <line num="65" count="5" type="stmt"/>
        <line num="66" count="5" type="stmt"/>
        <line num="67" count="5" type="stmt"/>
        <line num="68" count="5" type="stmt"/>
        <line num="69" count="5" type="stmt"/>
        <line num="70" count="7" type="cond" truecount="1" falsecount="0"/>
        <line num="71" count="1" type="stmt"/>
        <line num="72" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="74" count="4" type="stmt"/>
        <line num="75" count="4" type="cond" truecount="1" falsecount="0"/>
        <line num="76" count="3" type="stmt"/>
        <line num="81" count="3" type="stmt"/>
        <line num="82" count="3" type="stmt"/>
        <line num="83" count="7" type="stmt"/>
        <line num="85" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="86" count="4" type="stmt"/>
        <line num="87" count="4" type="cond" truecount="1" falsecount="0"/>
        <line num="90" count="1" type="stmt"/>
        <line num="91" count="1" type="stmt"/>
        <line num="92" count="4" type="cond" truecount="1" falsecount="0"/>
        <line num="93" count="3" type="stmt"/>
        <line num="94" count="3" type="stmt"/>
        <line num="95" count="3" type="stmt"/>
        <line num="96" count="4" type="stmt"/>
        <line num="98" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="99" count="1" type="stmt"/>
        <line num="100" count="1" type="stmt"/>
        <line num="101" count="1" type="cond" truecount="0" falsecount="1"/>
        <line num="102" count="0" type="stmt"/>
        <line num="103" count="0" type="stmt"/>
        <line num="104" count="0" type="stmt"/>
        <line num="105" count="1" type="stmt"/>
        <line num="107" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="108" count="2" type="stmt"/>
        <line num="109" count="2" type="stmt"/>
        <line num="110" count="2" type="cond" truecount="1" falsecount="0"/>
        <line num="111" count="1" type="stmt"/>
        <line num="112" count="1" type="stmt"/>
        <line num="113" count="1" type="stmt"/>
        <line num="114" count="1" type="stmt"/>
        <line num="115" count="1" type="stmt"/>
        <line num="116" count="1" type="stmt"/>
        <line num="117" count="1" type="stmt"/>
        <line num="118" count="1" type="stmt"/>
        <line num="119" count="1" type="stmt"/>
        <line num="120" count="2" type="stmt"/>
        <line num="122" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="123" count="7" type="cond" truecount="0" falsecount="1"/>
        <line num="124" count="0" type="stmt"/>
        <line num="125" count="7" type="stmt"/>
        <line num="126" count="7" type="stmt"/>
        <line num="127" count="7" type="stmt"/>
        <line num="128" count="7" type="cond" truecount="0" falsecount="1"/>
        <line num="129" count="0" type="stmt"/>
        <line num="130" count="7" type="stmt"/>
        <line num="131" count="1" type="stmt"/>
      </file>
      <file name="learningPathService.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/learningPathService.ts">
        <metrics statements="59" coveredstatements="1" conditionals="0" coveredconditionals="0" methods="3" coveredmethods="0"/>
        <line num="1" count="1" type="stmt"/>
        <line num="20" count="0" type="stmt"/>
        <line num="21" count="0" type="stmt"/>
        <line num="22" count="0" type="stmt"/>
        <line num="23" count="0" type="stmt"/>
        <line num="24" count="0" type="stmt"/>
        <line num="25" count="0" type="stmt"/>
        <line num="26" count="0" type="stmt"/>
        <line num="27" count="0" type="stmt"/>
        <line num="28" count="0" type="stmt"/>
        <line num="29" count="0" type="stmt"/>
        <line num="30" count="0" type="stmt"/>
        <line num="31" count="0" type="stmt"/>
        <line num="32" count="0" type="stmt"/>
        <line num="33" count="0" type="stmt"/>
        <line num="34" count="0" type="stmt"/>
        <line num="42" count="0" type="stmt"/>
        <line num="43" count="0" type="stmt"/>
        <line num="49" count="0" type="stmt"/>
        <line num="50" count="0" type="stmt"/>
        <line num="51" count="0" type="stmt"/>
        <line num="53" count="0" type="stmt"/>
        <line num="57" count="0" type="stmt"/>
        <line num="58" count="0" type="stmt"/>
        <line num="59" count="0" type="stmt"/>
        <line num="60" count="0" type="stmt"/>
        <line num="63" count="0" type="stmt"/>
        <line num="65" count="0" type="stmt"/>
        <line num="66" count="0" type="stmt"/>
        <line num="69" count="0" type="stmt"/>
        <line num="70" count="0" type="stmt"/>
        <line num="71" count="0" type="stmt"/>
        <line num="72" count="0" type="stmt"/>
        <line num="75" count="0" type="stmt"/>
        <line num="76" count="0" type="stmt"/>
        <line num="77" count="0" type="stmt"/>
        <line num="78" count="0" type="stmt"/>
        <line num="79" count="0" type="stmt"/>
        <line num="80" count="0" type="stmt"/>
        <line num="81" count="0" type="stmt"/>
        <line num="90" count="0" type="stmt"/>
        <line num="91" count="0" type="stmt"/>
        <line num="92" count="0" type="stmt"/>
        <line num="93" count="0" type="stmt"/>
        <line num="95" count="0" type="stmt"/>
        <line num="96" count="0" type="stmt"/>
        <line num="97" count="0" type="stmt"/>
        <line num="98" count="0" type="stmt"/>
        <line num="99" count="0" type="stmt"/>
        <line num="102" count="0" type="stmt"/>
        <line num="103" count="0" type="stmt"/>
        <line num="104" count="0" type="stmt"/>
        <line num="105" count="0" type="stmt"/>
        <line num="107" count="0" type="stmt"/>
        <line num="108" count="0" type="stmt"/>
        <line num="109" count="0" type="stmt"/>
        <line num="110" count="0" type="stmt"/>
        <line num="111" count="0" type="stmt"/>
        <line num="112" count="0" type="stmt"/>
      </file>
      <file name="localDBLearningObjectService.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/localDBLearningObjectService.ts">
        <metrics statements="89" coveredstatements="2" conditionals="0" coveredconditionals="0" methods="5" coveredmethods="0"/>
        <line num="3" count="1" type="stmt"/>
        <line num="6" count="1" type="stmt"/>
        <line num="12" count="0" type="stmt"/>
        <line num="13" count="0" type="stmt"/>
        <line num="14" count="0" type="stmt"/>
        <line num="15" count="0" type="stmt"/>
        <line num="16" count="0" type="stmt"/>
        <line num="17" count="0" type="stmt"/>
        <line num="18" count="0" type="stmt"/>
        <line num="19" count="0" type="stmt"/>
        <line num="20" count="0" type="stmt"/>
        <line num="21" count="0" type="stmt"/>
        <line num="22" count="0" type="stmt"/>
        <line num="23" count="0" type="stmt"/>
        <line num="24" count="0" type="stmt"/>
        <line num="25" count="0" type="stmt"/>
        <line num="26" count="0" type="stmt"/>
        <line num="27" count="0" type="stmt"/>
        <line num="28" count="0" type="stmt"/>
        <line num="29" count="0" type="stmt"/>
        <line num="30" count="0" type="stmt"/>
        <line num="31" count="0" type="stmt"/>
        <line num="32" count="0" type="stmt"/>
        <line num="33" count="0" type="stmt"/>
        <line num="34" count="0" type="stmt"/>
        <line num="35" count="0" type="stmt"/>
        <line num="36" count="0" type="stmt"/>
        <line num="42" count="0" type="stmt"/>
        <line num="43" count="0" type="stmt"/>
        <line num="44" count="0" type="stmt"/>
        <line num="45" count="0" type="stmt"/>
        <line num="46" count="0" type="stmt"/>
        <line num="47" count="0" type="stmt"/>
        <line num="49" count="0" type="stmt"/>
        <line num="50" count="0" type="stmt"/>
        <line num="51" count="0" type="stmt"/>
        <line num="52" count="0" type="stmt"/>
        <line num="54" count="0" type="stmt"/>
        <line num="55" count="0" type="stmt"/>
        <line num="60" count="0" type="stmt"/>
        <line num="61" count="0" type="stmt"/>
        <line num="62" count="0" type="stmt"/>
        <line num="63" count="0" type="stmt"/>
        <line num="64" count="0" type="stmt"/>
        <line num="65" count="0" type="stmt"/>
        <line num="67" count="0" type="stmt"/>
        <line num="68" count="0" type="stmt"/>
        <line num="69" count="0" type="stmt"/>
        <line num="70" count="0" type="stmt"/>
        <line num="71" count="0" type="stmt"/>
        <line num="76" count="0" type="stmt"/>
        <line num="77" count="0" type="stmt"/>
        <line num="78" count="0" type="stmt"/>
        <line num="79" count="0" type="stmt"/>
        <line num="80" count="0" type="stmt"/>
        <line num="81" count="0" type="stmt"/>
        <line num="82" count="0" type="stmt"/>
        <line num="83" count="0" type="stmt"/>
        <line num="84" count="0" type="stmt"/>
        <line num="85" count="0" type="stmt"/>
        <line num="86" count="0" type="stmt"/>
        <line num="88" count="0" type="stmt"/>
        <line num="89" count="0" type="stmt"/>
        <line num="90" count="0" type="stmt"/>
        <line num="92" count="0" type="stmt"/>
        <line num="93" count="0" type="stmt"/>
        <line num="94" count="0" type="stmt"/>
        <line num="95" count="0" type="stmt"/>
        <line num="97" count="0" type="stmt"/>
        <line num="98" count="0" type="stmt"/>
        <line num="101" count="0" type="stmt"/>
        <line num="102" count="0" type="stmt"/>
        <line num="103" count="0" type="stmt"/>
        <line num="104" count="0" type="stmt"/>
        <line num="105" count="0" type="stmt"/>
        <line num="106" count="0" type="stmt"/>
        <line num="107" count="0" type="stmt"/>
        <line num="111" count="0" type="stmt"/>
        <line num="112" count="0" type="stmt"/>
        <line num="113" count="0" type="stmt"/>
        <line num="114" count="0" type="stmt"/>
        <line num="115" count="0" type="stmt"/>
        <line num="116" count="0" type="stmt"/>
        <line num="118" count="0" type="stmt"/>
        <line num="120" count="0" type="stmt"/>
        <line num="121" count="0" type="stmt"/>
        <line num="122" count="0" type="stmt"/>
        <line num="123" count="0" type="stmt"/>
        <line num="124" count="0" type="stmt"/>
      </file>
      <file name="localLearningObjectService.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/localLearningObjectService.ts">
        <metrics statements="69" coveredstatements="33" conditionals="1" coveredconditionals="1" methods="5" coveredmethods="1"/>
        <line num="1" count="1" type="stmt"/>
        <line num="3" count="1" type="stmt"/>
        <line num="22" count="1" type="stmt"/>
        <line num="27" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="28" count="10" type="stmt"/>
        <line num="29" count="10" type="stmt"/>
        <line num="30" count="10" type="stmt"/>
        <line num="32" count="10" type="stmt"/>
        <line num="33" count="10" type="stmt"/>
        <line num="34" count="10" type="stmt"/>
        <line num="35" count="10" type="stmt"/>
        <line num="36" count="10" type="stmt"/>
        <line num="37" count="10" type="stmt"/>
        <line num="38" count="10" type="stmt"/>
        <line num="39" count="10" type="stmt"/>
        <line num="40" count="10" type="stmt"/>
        <line num="41" count="10" type="stmt"/>
        <line num="42" count="10" type="stmt"/>
        <line num="43" count="10" type="stmt"/>
        <line num="44" count="10" type="stmt"/>
        <line num="45" count="10" type="stmt"/>
        <line num="46" count="10" type="stmt"/>
        <line num="47" count="10" type="stmt"/>
        <line num="48" count="10" type="stmt"/>
        <line num="49" count="10" type="stmt"/>
        <line num="50" count="10" type="stmt"/>
        <line num="51" count="10" type="stmt"/>
        <line num="52" count="10" type="stmt"/>
        <line num="58" count="1" type="stmt"/>
        <line num="59" count="0" type="stmt"/>
        <line num="60" count="0" type="stmt"/>
        <line num="61" count="0" type="stmt"/>
        <line num="62" count="0" type="stmt"/>
        <line num="63" count="0" type="stmt"/>
        <line num="64" count="0" type="stmt"/>
        <line num="70" count="1" type="stmt"/>
        <line num="71" count="0" type="stmt"/>
        <line num="72" count="0" type="stmt"/>
        <line num="73" count="0" type="stmt"/>
        <line num="74" count="0" type="stmt"/>
        <line num="80" count="1" type="stmt"/>
        <line num="81" count="0" type="stmt"/>
        <line num="82" count="0" type="stmt"/>
        <line num="83" count="0" type="stmt"/>
        <line num="85" count="0" type="stmt"/>
        <line num="86" count="0" type="stmt"/>
        <line num="87" count="0" type="stmt"/>
        <line num="90" count="0" type="stmt"/>
        <line num="91" count="0" type="stmt"/>
        <line num="92" count="0" type="stmt"/>
        <line num="93" count="0" type="stmt"/>
        <line num="94" count="0" type="stmt"/>
        <line num="95" count="0" type="stmt"/>
        <line num="96" count="0" type="stmt"/>
        <line num="97" count="0" type="stmt"/>
        <line num="98" count="0" type="stmt"/>
        <line num="99" count="0" type="stmt"/>
        <line num="100" count="0" type="stmt"/>
        <line num="101" count="0" type="stmt"/>
        <line num="102" count="0" type="stmt"/>
        <line num="103" count="0" type="stmt"/>
        <line num="104" count="0" type="stmt"/>
        <line num="105" count="0" type="stmt"/>
        <line num="110" count="1" type="stmt"/>
        <line num="111" count="0" type="stmt"/>
        <line num="112" count="0" type="stmt"/>
        <line num="113" count="0" type="stmt"/>
        <line num="114" count="0" type="stmt"/>
        <line num="115" count="1" type="stmt"/>
      </file>
      <file name="localLearningPathNodeService.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/localLearningPathNodeService.ts">
        <metrics statements="238" coveredstatements="13" conditionals="0" coveredconditionals="0" methods="7" coveredmethods="0"/>
        <line num="1" count="1" type="stmt"/>
        <line num="3" count="1" type="stmt"/>
        <line num="5" count="1" type="stmt"/>
        <line num="24" count="1" type="stmt"/>
        <line num="28" count="1" type="stmt"/>
        <line num="29" count="0" type="stmt"/>
        <line num="30" count="0" type="stmt"/>
        <line num="31" count="0" type="stmt"/>
        <line num="32" count="0" type="stmt"/>
        <line num="33" count="0" type="stmt"/>
        <line num="34" count="0" type="stmt"/>
        <line num="35" count="0" type="stmt"/>
        <line num="36" count="0" type="stmt"/>
        <line num="37" count="0" type="stmt"/>
        <line num="38" count="0" type="stmt"/>
        <line num="43" count="1" type="stmt"/>
        <line num="44" count="0" type="stmt"/>
        <line num="45" count="0" type="stmt"/>
        <line num="46" count="0" type="stmt"/>
        <line num="47" count="0" type="stmt"/>
        <line num="48" count="0" type="stmt"/>
        <line num="49" count="0" type="stmt"/>
        <line num="50" count="0" type="stmt"/>
        <line num="51" count="0" type="stmt"/>
        <line num="52" count="0" type="stmt"/>
        <line num="59" count="1" type="stmt"/>
        <line num="60" count="0" type="stmt"/>
        <line num="61" count="0" type="stmt"/>
        <line num="62" count="0" type="stmt"/>
        <line num="63" count="0" type="stmt"/>
        <line num="64" count="0" type="stmt"/>
        <line num="67" count="0" type="stmt"/>
        <line num="68" count="0" type="stmt"/>
        <line num="69" count="0" type="stmt"/>
        <line num="70" count="0" type="stmt"/>
        <line num="71" count="0" type="stmt"/>
        <line num="72" count="0" type="stmt"/>
        <line num="73" count="0" type="stmt"/>
        <line num="74" count="0" type="stmt"/>
        <line num="75" count="0" type="stmt"/>
        <line num="76" count="0" type="stmt"/>
        <line num="77" count="0" type="stmt"/>
        <line num="78" count="0" type="stmt"/>
        <line num="79" count="0" type="stmt"/>
        <line num="80" count="0" type="stmt"/>
        <line num="81" count="0" type="stmt"/>
        <line num="82" count="0" type="stmt"/>
        <line num="83" count="0" type="stmt"/>
        <line num="84" count="0" type="stmt"/>
        <line num="85" count="0" type="stmt"/>
        <line num="86" count="0" type="stmt"/>
        <line num="87" count="0" type="stmt"/>
        <line num="90" count="0" type="stmt"/>
        <line num="92" count="0" type="stmt"/>
        <line num="93" count="0" type="stmt"/>
        <line num="94" count="0" type="stmt"/>
        <line num="95" count="0" type="stmt"/>
        <line num="97" count="0" type="stmt"/>
        <line num="98" count="0" type="stmt"/>
        <line num="99" count="0" type="stmt"/>
        <line num="100" count="0" type="stmt"/>
        <line num="101" count="0" type="stmt"/>
        <line num="102" count="0" type="stmt"/>
        <line num="104" count="0" type="stmt"/>
        <line num="105" count="0" type="stmt"/>
        <line num="106" count="0" type="stmt"/>
        <line num="109" count="0" type="stmt"/>
        <line num="110" count="0" type="stmt"/>
        <line num="111" count="0" type="stmt"/>
        <line num="112" count="0" type="stmt"/>
        <line num="113" count="0" type="stmt"/>
        <line num="114" count="0" type="stmt"/>
        <line num="115" count="0" type="stmt"/>
        <line num="117" count="0" type="stmt"/>
        <line num="118" count="0" type="stmt"/>
        <line num="120" count="0" type="stmt"/>
        <line num="121" count="0" type="stmt"/>
        <line num="128" count="1" type="stmt"/>
        <line num="129" count="0" type="stmt"/>
        <line num="130" count="0" type="stmt"/>
        <line num="131" count="0" type="stmt"/>
        <line num="132" count="0" type="stmt"/>
        <line num="133" count="0" type="stmt"/>
        <line num="134" count="0" type="stmt"/>
        <line num="136" count="0" type="stmt"/>
        <line num="137" count="0" type="stmt"/>
        <line num="138" count="0" type="stmt"/>
        <line num="139" count="0" type="stmt"/>
        <line num="140" count="0" type="stmt"/>
        <line num="141" count="0" type="stmt"/>
        <line num="142" count="0" type="stmt"/>
        <line num="143" count="0" type="stmt"/>
        <line num="144" count="0" type="stmt"/>
        <line num="147" count="0" type="stmt"/>
        <line num="149" count="0" type="stmt"/>
        <line num="150" count="0" type="stmt"/>
        <line num="151" count="0" type="stmt"/>
        <line num="152" count="0" type="stmt"/>
        <line num="155" count="0" type="stmt"/>
        <line num="157" count="0" type="stmt"/>
        <line num="159" count="0" type="stmt"/>
        <line num="160" count="0" type="stmt"/>
        <line num="161" count="0" type="stmt"/>
        <line num="162" count="0" type="stmt"/>
        <line num="163" count="0" type="stmt"/>
        <line num="164" count="0" type="stmt"/>
        <line num="165" count="0" type="stmt"/>
        <line num="166" count="0" type="stmt"/>
        <line num="167" count="0" type="stmt"/>
        <line num="168" count="0" type="stmt"/>
        <line num="169" count="0" type="stmt"/>
        <line num="170" count="0" type="stmt"/>
        <line num="171" count="0" type="stmt"/>
        <line num="172" count="0" type="stmt"/>
        <line num="175" count="0" type="stmt"/>
        <line num="176" count="0" type="stmt"/>
        <line num="177" count="0" type="stmt"/>
        <line num="180" count="0" type="stmt"/>
        <line num="181" count="0" type="stmt"/>
        <line num="183" count="0" type="stmt"/>
        <line num="184" count="0" type="stmt"/>
        <line num="185" count="0" type="stmt"/>
        <line num="186" count="0" type="stmt"/>
        <line num="188" count="0" type="stmt"/>
        <line num="190" count="0" type="stmt"/>
        <line num="191" count="0" type="stmt"/>
        <line num="192" count="0" type="stmt"/>
        <line num="193" count="0" type="stmt"/>
        <line num="194" count="0" type="stmt"/>
        <line num="196" count="0" type="stmt"/>
        <line num="198" count="0" type="stmt"/>
        <line num="199" count="0" type="stmt"/>
        <line num="200" count="0" type="stmt"/>
        <line num="201" count="0" type="stmt"/>
        <line num="202" count="0" type="stmt"/>
        <line num="203" count="0" type="stmt"/>
        <line num="205" count="0" type="stmt"/>
        <line num="206" count="0" type="stmt"/>
        <line num="207" count="0" type="stmt"/>
        <line num="208" count="0" type="stmt"/>
        <line num="209" count="0" type="stmt"/>
        <line num="211" count="0" type="stmt"/>
        <line num="212" count="0" type="stmt"/>
        <line num="213" count="0" type="stmt"/>
        <line num="214" count="0" type="stmt"/>
        <line num="215" count="0" type="stmt"/>
        <line num="217" count="0" type="stmt"/>
        <line num="218" count="0" type="stmt"/>
        <line num="219" count="0" type="stmt"/>
        <line num="220" count="0" type="stmt"/>
        <line num="222" count="0" type="stmt"/>
        <line num="224" count="0" type="stmt"/>
        <line num="225" count="0" type="stmt"/>
        <line num="226" count="0" type="stmt"/>
        <line num="227" count="0" type="stmt"/>
        <line num="228" count="0" type="stmt"/>
        <line num="230" count="0" type="stmt"/>
        <line num="231" count="0" type="stmt"/>
        <line num="232" count="0" type="stmt"/>
        <line num="233" count="0" type="stmt"/>
        <line num="234" count="0" type="stmt"/>
        <line num="235" count="0" type="stmt"/>
        <line num="236" count="0" type="stmt"/>
        <line num="237" count="0" type="stmt"/>
        <line num="238" count="0" type="stmt"/>
        <line num="239" count="0" type="stmt"/>
        <line num="240" count="0" type="stmt"/>
        <line num="241" count="0" type="stmt"/>
        <line num="242" count="0" type="stmt"/>
        <line num="245" count="0" type="stmt"/>
        <line num="246" count="0" type="stmt"/>
        <line num="254" count="1" type="stmt"/>
        <line num="255" count="0" type="stmt"/>
        <line num="256" count="0" type="stmt"/>
        <line num="257" count="0" type="stmt"/>
        <line num="258" count="0" type="stmt"/>
        <line num="259" count="0" type="stmt"/>
        <line num="261" count="0" type="stmt"/>
        <line num="262" count="0" type="stmt"/>
        <line num="263" count="0" type="stmt"/>
        <line num="264" count="0" type="stmt"/>
        <line num="265" count="0" type="stmt"/>
        <line num="266" count="0" type="stmt"/>
        <line num="267" count="0" type="stmt"/>
        <line num="268" count="0" type="stmt"/>
        <line num="269" count="0" type="stmt"/>
        <line num="271" count="0" type="stmt"/>
        <line num="273" count="0" type="stmt"/>
        <line num="274" count="0" type="stmt"/>
        <line num="275" count="0" type="stmt"/>
        <line num="278" count="0" type="stmt"/>
        <line num="279" count="0" type="stmt"/>
        <line num="280" count="0" type="stmt"/>
        <line num="281" count="0" type="stmt"/>
        <line num="282" count="0" type="stmt"/>
        <line num="283" count="0" type="stmt"/>
        <line num="284" count="0" type="stmt"/>
        <line num="285" count="0" type="stmt"/>
        <line num="286" count="0" type="stmt"/>
        <line num="293" count="1" type="stmt"/>
        <line num="294" count="0" type="stmt"/>
        <line num="295" count="0" type="stmt"/>
        <line num="296" count="0" type="stmt"/>
        <line num="297" count="0" type="stmt"/>
        <line num="298" count="0" type="stmt"/>
        <line num="299" count="0" type="stmt"/>
        <line num="300" count="0" type="stmt"/>
        <line num="307" count="1" type="stmt"/>
        <line num="308" count="0" type="stmt"/>
        <line num="309" count="0" type="stmt"/>
        <line num="310" count="0" type="stmt"/>
        <line num="311" count="0" type="stmt"/>
        <line num="312" count="0" type="stmt"/>
        <line num="313" count="0" type="stmt"/>
        <line num="314" count="0" type="stmt"/>
        <line num="315" count="0" type="stmt"/>
        <line num="316" count="0" type="stmt"/>
        <line num="317" count="0" type="stmt"/>
        <line num="318" count="0" type="stmt"/>
        <line num="319" count="0" type="stmt"/>
        <line num="320" count="0" type="stmt"/>
        <line num="321" count="0" type="stmt"/>
        <line num="322" count="0" type="stmt"/>
        <line num="323" count="0" type="stmt"/>
        <line num="324" count="0" type="stmt"/>
        <line num="325" count="0" type="stmt"/>
        <line num="326" count="0" type="stmt"/>
        <line num="327" count="0" type="stmt"/>
        <line num="328" count="0" type="stmt"/>
        <line num="329" count="0" type="stmt"/>
        <line num="330" count="0" type="stmt"/>
        <line num="331" count="0" type="stmt"/>
        <line num="332" count="0" type="stmt"/>
        <line num="333" count="0" type="stmt"/>
        <line num="334" count="0" type="stmt"/>
        <line num="335" count="0" type="stmt"/>
        <line num="336" count="1" type="stmt"/>
        <line num="338" count="1" type="stmt"/>
      </file>
      <file name="localLearningPathService.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/localLearningPathService.ts">
        <metrics statements="60" coveredstatements="11" conditionals="0" coveredconditionals="0" methods="6" coveredmethods="0"/>
        <line num="1" count="1" type="stmt"/>
        <line num="3" count="1" type="stmt"/>
        <line num="12" count="1" type="stmt"/>
        <line num="16" count="1" type="stmt"/>
        <line num="17" count="0" type="stmt"/>
        <line num="18" count="0" type="stmt"/>
        <line num="19" count="0" type="stmt"/>
        <line num="20" count="0" type="stmt"/>
        <line num="21" count="0" type="stmt"/>
        <line num="22" count="0" type="stmt"/>
        <line num="23" count="0" type="stmt"/>
        <line num="24" count="0" type="stmt"/>
        <line num="25" count="0" type="stmt"/>
        <line num="26" count="0" type="stmt"/>
        <line num="27" count="0" type="stmt"/>
        <line num="28" count="0" type="stmt"/>
        <line num="30" count="0" type="stmt"/>
        <line num="31" count="0" type="stmt"/>
        <line num="32" count="0" type="stmt"/>
        <line num="33" count="0" type="stmt"/>
        <line num="34" count="0" type="stmt"/>
        <line num="36" count="1" type="stmt"/>
        <line num="37" count="0" type="stmt"/>
        <line num="38" count="0" type="stmt"/>
        <line num="39" count="0" type="stmt"/>
        <line num="40" count="0" type="stmt"/>
        <line num="41" count="0" type="stmt"/>
        <line num="43" count="1" type="stmt"/>
        <line num="44" count="0" type="stmt"/>
        <line num="45" count="0" type="stmt"/>
        <line num="46" count="0" type="stmt"/>
        <line num="47" count="0" type="stmt"/>
        <line num="49" count="1" type="stmt"/>
        <line num="50" count="0" type="stmt"/>
        <line num="51" count="0" type="stmt"/>
        <line num="52" count="0" type="stmt"/>
        <line num="53" count="0" type="stmt"/>
        <line num="54" count="0" type="stmt"/>
        <line num="55" count="0" type="stmt"/>
        <line num="56" count="0" type="stmt"/>
        <line num="57" count="0" type="stmt"/>
        <line num="58" count="0" type="stmt"/>
        <line num="59" count="0" type="stmt"/>
        <line num="60" count="0" type="stmt"/>
        <line num="62" count="1" type="stmt"/>
        <line num="63" count="0" type="stmt"/>
        <line num="64" count="0" type="stmt"/>
        <line num="65" count="0" type="stmt"/>
        <line num="66" count="0" type="stmt"/>
        <line num="71" count="1" type="stmt"/>
        <line num="72" count="0" type="stmt"/>
        <line num="73" count="0" type="stmt"/>
        <line num="74" count="0" type="stmt"/>
        <line num="75" count="0" type="stmt"/>
        <line num="76" count="0" type="stmt"/>
        <line num="77" count="0" type="stmt"/>
        <line num="78" count="0" type="stmt"/>
        <line num="79" count="0" type="stmt"/>
        <line num="80" count="1" type="stmt"/>
        <line num="82" count="1" type="stmt"/>
      </file>
      <file name="questionsService.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/questionsService.ts">
        <metrics statements="305" coveredstatements="19" conditionals="0" coveredconditionals="0" methods="14" coveredmethods="0"/>
        <line num="1" count="1" type="stmt"/>
        <line num="11" count="1" type="stmt"/>
        <line num="12" count="1" type="stmt"/>
        <line num="15" count="1" type="stmt"/>
        <line num="32" count="0" type="stmt"/>
        <line num="39" count="0" type="stmt"/>
        <line num="41" count="0" type="stmt"/>
        <line num="44" count="0" type="stmt"/>
        <line num="45" count="0" type="stmt"/>
        <line num="48" count="0" type="stmt"/>
        <line num="49" count="0" type="stmt"/>
        <line num="51" count="0" type="stmt"/>
        <line num="53" count="0" type="stmt"/>
        <line num="54" count="0" type="stmt"/>
        <line num="55" count="0" type="stmt"/>
        <line num="56" count="0" type="stmt"/>
        <line num="58" count="0" type="stmt"/>
        <line num="59" count="0" type="stmt"/>
        <line num="60" count="0" type="stmt"/>
        <line num="61" count="0" type="stmt"/>
        <line num="63" count="1" type="stmt"/>
        <line num="70" count="1" type="stmt"/>
        <line num="71" count="0" type="stmt"/>
        <line num="72" count="0" type="stmt"/>
        <line num="73" count="0" type="stmt"/>
        <line num="74" count="0" type="stmt"/>
        <line num="75" count="0" type="stmt"/>
        <line num="76" count="0" type="stmt"/>
        <line num="77" count="0" type="stmt"/>
        <line num="78" count="0" type="stmt"/>
        <line num="79" count="0" type="stmt"/>
        <line num="81" count="0" type="stmt"/>
        <line num="82" count="0" type="stmt"/>
        <line num="83" count="0" type="stmt"/>
        <line num="84" count="0" type="stmt"/>
        <line num="85" count="0" type="stmt"/>
        <line num="86" count="0" type="stmt"/>
        <line num="89" count="0" type="stmt"/>
        <line num="90" count="0" type="stmt"/>
        <line num="91" count="0" type="stmt"/>
        <line num="92" count="0" type="stmt"/>
        <line num="93" count="0" type="stmt"/>
        <line num="94" count="0" type="stmt"/>
        <line num="95" count="0" type="stmt"/>
        <line num="96" count="0" type="stmt"/>
        <line num="97" count="0" type="stmt"/>
        <line num="98" count="0" type="stmt"/>
        <line num="101" count="0" type="stmt"/>
        <line num="102" count="0" type="stmt"/>
        <line num="103" count="0" type="stmt"/>
        <line num="106" count="0" type="stmt"/>
        <line num="107" count="0" type="stmt"/>
        <line num="108" count="0" type="stmt"/>
        <line num="109" count="0" type="stmt"/>
        <line num="110" count="0" type="stmt"/>
        <line num="111" count="0" type="stmt"/>
        <line num="114" count="0" type="stmt"/>
        <line num="115" count="0" type="stmt"/>
        <line num="116" count="0" type="stmt"/>
        <line num="117" count="0" type="stmt"/>
        <line num="118" count="0" type="stmt"/>
        <line num="119" count="0" type="stmt"/>
        <line num="120" count="0" type="stmt"/>
        <line num="121" count="0" type="stmt"/>
        <line num="122" count="0" type="stmt"/>
        <line num="123" count="0" type="stmt"/>
        <line num="124" count="0" type="stmt"/>
        <line num="125" count="0" type="stmt"/>
        <line num="126" count="0" type="stmt"/>
        <line num="127" count="0" type="stmt"/>
        <line num="128" count="0" type="stmt"/>
        <line num="129" count="0" type="stmt"/>
        <line num="130" count="0" type="stmt"/>
        <line num="131" count="0" type="stmt"/>
        <line num="132" count="0" type="stmt"/>
        <line num="133" count="0" type="stmt"/>
        <line num="135" count="0" type="stmt"/>
        <line num="136" count="0" type="stmt"/>
        <line num="141" count="1" type="stmt"/>
        <line num="142" count="0" type="stmt"/>
        <line num="143" count="0" type="stmt"/>
        <line num="144" count="0" type="stmt"/>
        <line num="145" count="0" type="stmt"/>
        <line num="146" count="0" type="stmt"/>
        <line num="147" count="0" type="stmt"/>
        <line num="148" count="0" type="stmt"/>
        <line num="149" count="0" type="stmt"/>
        <line num="150" count="0" type="stmt"/>
        <line num="151" count="0" type="stmt"/>
        <line num="152" count="0" type="stmt"/>
        <line num="153" count="0" type="stmt"/>
        <line num="154" count="0" type="stmt"/>
        <line num="156" count="0" type="stmt"/>
        <line num="157" count="0" type="stmt"/>
        <line num="158" count="0" type="stmt"/>
        <line num="159" count="0" type="stmt"/>
        <line num="160" count="0" type="stmt"/>
        <line num="161" count="0" type="stmt"/>
        <line num="162" count="0" type="stmt"/>
        <line num="163" count="0" type="stmt"/>
        <line num="164" count="0" type="stmt"/>
        <line num="165" count="0" type="stmt"/>
        <line num="168" count="0" type="stmt"/>
        <line num="169" count="0" type="stmt"/>
        <line num="170" count="0" type="stmt"/>
        <line num="171" count="0" type="stmt"/>
        <line num="172" count="0" type="stmt"/>
        <line num="173" count="0" type="stmt"/>
        <line num="174" count="0" type="stmt"/>
        <line num="175" count="0" type="stmt"/>
        <line num="176" count="0" type="stmt"/>
        <line num="177" count="0" type="stmt"/>
        <line num="178" count="0" type="stmt"/>
        <line num="180" count="0" type="stmt"/>
        <line num="181" count="0" type="stmt"/>
        <line num="182" count="0" type="stmt"/>
        <line num="183" count="0" type="stmt"/>
        <line num="184" count="0" type="stmt"/>
        <line num="185" count="0" type="stmt"/>
        <line num="186" count="0" type="stmt"/>
        <line num="187" count="0" type="stmt"/>
        <line num="188" count="0" type="stmt"/>
        <line num="189" count="0" type="stmt"/>
        <line num="190" count="0" type="stmt"/>
        <line num="195" count="1" type="stmt"/>
        <line num="196" count="0" type="stmt"/>
        <line num="197" count="0" type="stmt"/>
        <line num="198" count="0" type="stmt"/>
        <line num="199" count="0" type="stmt"/>
        <line num="200" count="0" type="stmt"/>
        <line num="201" count="0" type="stmt"/>
        <line num="202" count="0" type="stmt"/>
        <line num="203" count="0" type="stmt"/>
        <line num="204" count="0" type="stmt"/>
        <line num="205" count="0" type="stmt"/>
        <line num="206" count="0" type="stmt"/>
        <line num="208" count="0" type="stmt"/>
        <line num="209" count="0" type="stmt"/>
        <line num="210" count="0" type="stmt"/>
        <line num="211" count="0" type="stmt"/>
        <line num="212" count="0" type="stmt"/>
        <line num="213" count="0" type="stmt"/>
        <line num="214" count="0" type="stmt"/>
        <line num="215" count="0" type="stmt"/>
        <line num="216" count="0" type="stmt"/>
        <line num="217" count="0" type="stmt"/>
        <line num="220" count="0" type="stmt"/>
        <line num="221" count="0" type="stmt"/>
        <line num="222" count="0" type="stmt"/>
        <line num="223" count="0" type="stmt"/>
        <line num="224" count="0" type="stmt"/>
        <line num="225" count="0" type="stmt"/>
        <line num="226" count="0" type="stmt"/>
        <line num="227" count="0" type="stmt"/>
        <line num="229" count="0" type="stmt"/>
        <line num="230" count="0" type="stmt"/>
        <line num="231" count="0" type="stmt"/>
        <line num="232" count="0" type="stmt"/>
        <line num="233" count="0" type="stmt"/>
        <line num="234" count="0" type="stmt"/>
        <line num="235" count="0" type="stmt"/>
        <line num="236" count="0" type="stmt"/>
        <line num="241" count="1" type="stmt"/>
        <line num="242" count="0" type="stmt"/>
        <line num="243" count="0" type="stmt"/>
        <line num="244" count="0" type="stmt"/>
        <line num="245" count="0" type="stmt"/>
        <line num="246" count="0" type="stmt"/>
        <line num="247" count="0" type="stmt"/>
        <line num="248" count="0" type="stmt"/>
        <line num="249" count="0" type="stmt"/>
        <line num="250" count="0" type="stmt"/>
        <line num="251" count="0" type="stmt"/>
        <line num="252" count="0" type="stmt"/>
        <line num="254" count="0" type="stmt"/>
        <line num="255" count="0" type="stmt"/>
        <line num="256" count="0" type="stmt"/>
        <line num="257" count="0" type="stmt"/>
        <line num="258" count="0" type="stmt"/>
        <line num="259" count="0" type="stmt"/>
        <line num="260" count="0" type="stmt"/>
        <line num="261" count="0" type="stmt"/>
        <line num="266" count="1" type="stmt"/>
        <line num="267" count="0" type="stmt"/>
        <line num="268" count="0" type="stmt"/>
        <line num="269" count="0" type="stmt"/>
        <line num="270" count="0" type="stmt"/>
        <line num="271" count="0" type="stmt"/>
        <line num="272" count="0" type="stmt"/>
        <line num="273" count="0" type="stmt"/>
        <line num="274" count="0" type="stmt"/>
        <line num="275" count="0" type="stmt"/>
        <line num="276" count="0" type="stmt"/>
        <line num="277" count="0" type="stmt"/>
        <line num="278" count="0" type="stmt"/>
        <line num="283" count="1" type="stmt"/>
        <line num="284" count="0" type="stmt"/>
        <line num="285" count="0" type="stmt"/>
        <line num="286" count="0" type="stmt"/>
        <line num="287" count="0" type="stmt"/>
        <line num="288" count="0" type="stmt"/>
        <line num="289" count="0" type="stmt"/>
        <line num="290" count="0" type="stmt"/>
        <line num="291" count="0" type="stmt"/>
        <line num="292" count="0" type="stmt"/>
        <line num="293" count="0" type="stmt"/>
        <line num="294" count="0" type="stmt"/>
        <line num="295" count="0" type="stmt"/>
        <line num="301" count="1" type="stmt"/>
        <line num="302" count="0" type="stmt"/>
        <line num="303" count="0" type="stmt"/>
        <line num="304" count="0" type="stmt"/>
        <line num="305" count="0" type="stmt"/>
        <line num="306" count="0" type="stmt"/>
        <line num="307" count="0" type="stmt"/>
        <line num="308" count="0" type="stmt"/>
        <line num="309" count="0" type="stmt"/>
        <line num="310" count="0" type="stmt"/>
        <line num="311" count="0" type="stmt"/>
        <line num="312" count="0" type="stmt"/>
        <line num="313" count="0" type="stmt"/>
        <line num="314" count="0" type="stmt"/>
        <line num="320" count="1" type="stmt"/>
        <line num="321" count="0" type="stmt"/>
        <line num="322" count="0" type="stmt"/>
        <line num="323" count="0" type="stmt"/>
        <line num="324" count="0" type="stmt"/>
        <line num="325" count="0" type="stmt"/>
        <line num="326" count="0" type="stmt"/>
        <line num="327" count="0" type="stmt"/>
        <line num="328" count="0" type="stmt"/>
        <line num="329" count="0" type="stmt"/>
        <line num="330" count="0" type="stmt"/>
        <line num="331" count="0" type="stmt"/>
        <line num="332" count="0" type="stmt"/>
        <line num="333" count="0" type="stmt"/>
        <line num="334" count="0" type="stmt"/>
        <line num="335" count="0" type="stmt"/>
        <line num="336" count="0" type="stmt"/>
        <line num="337" count="0" type="stmt"/>
        <line num="342" count="1" type="stmt"/>
        <line num="343" count="0" type="stmt"/>
        <line num="344" count="0" type="stmt"/>
        <line num="345" count="0" type="stmt"/>
        <line num="346" count="0" type="stmt"/>
        <line num="347" count="0" type="stmt"/>
        <line num="348" count="0" type="stmt"/>
        <line num="349" count="0" type="stmt"/>
        <line num="350" count="0" type="stmt"/>
        <line num="351" count="0" type="stmt"/>
        <line num="352" count="0" type="stmt"/>
        <line num="353" count="0" type="stmt"/>
        <line num="354" count="0" type="stmt"/>
        <line num="355" count="0" type="stmt"/>
        <line num="356" count="0" type="stmt"/>
        <line num="357" count="0" type="stmt"/>
        <line num="358" count="0" type="stmt"/>
        <line num="359" count="0" type="stmt"/>
        <line num="360" count="0" type="stmt"/>
        <line num="361" count="0" type="stmt"/>
        <line num="366" count="1" type="stmt"/>
        <line num="367" count="0" type="stmt"/>
        <line num="368" count="0" type="stmt"/>
        <line num="369" count="0" type="stmt"/>
        <line num="370" count="0" type="stmt"/>
        <line num="371" count="0" type="stmt"/>
        <line num="372" count="0" type="stmt"/>
        <line num="373" count="0" type="stmt"/>
        <line num="374" count="0" type="stmt"/>
        <line num="375" count="0" type="stmt"/>
        <line num="376" count="0" type="stmt"/>
        <line num="377" count="0" type="stmt"/>
        <line num="378" count="0" type="stmt"/>
        <line num="379" count="0" type="stmt"/>
        <line num="380" count="0" type="stmt"/>
        <line num="381" count="0" type="stmt"/>
        <line num="382" count="0" type="stmt"/>
        <line num="383" count="0" type="stmt"/>
        <line num="384" count="0" type="stmt"/>
        <line num="385" count="0" type="stmt"/>
        <line num="386" count="0" type="stmt"/>
        <line num="387" count="0" type="stmt"/>
        <line num="388" count="0" type="stmt"/>
        <line num="394" count="1" type="stmt"/>
        <line num="395" count="0" type="stmt"/>
        <line num="396" count="0" type="stmt"/>
        <line num="397" count="0" type="stmt"/>
        <line num="398" count="0" type="stmt"/>
        <line num="399" count="0" type="stmt"/>
        <line num="400" count="0" type="stmt"/>
        <line num="405" count="1" type="stmt"/>
        <line num="406" count="0" type="stmt"/>
        <line num="407" count="0" type="stmt"/>
        <line num="408" count="0" type="stmt"/>
        <line num="409" count="0" type="stmt"/>
        <line num="410" count="0" type="stmt"/>
        <line num="411" count="0" type="stmt"/>
        <line num="416" count="1" type="stmt"/>
        <line num="417" count="0" type="stmt"/>
        <line num="418" count="0" type="stmt"/>
        <line num="419" count="0" type="stmt"/>
        <line num="420" count="0" type="stmt"/>
        <line num="421" count="0" type="stmt"/>
        <line num="422" count="0" type="stmt"/>
        <line num="423" count="1" type="stmt"/>
      </file>
      <file name="referenceValidationService.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/referenceValidationService.ts">
        <metrics statements="95" coveredstatements="29" conditionals="6" coveredconditionals="4" methods="6" coveredmethods="2"/>
        <line num="1" count="1" type="stmt"/>
        <line num="2" count="1" type="stmt"/>
        <line num="4" count="1" type="stmt"/>
        <line num="11" count="1" type="stmt"/>
        <line num="17" count="1" type="stmt"/>
        <line num="18" count="0" type="stmt"/>
        <line num="19" count="0" type="stmt"/>
        <line num="20" count="0" type="stmt"/>
        <line num="21" count="0" type="stmt"/>
        <line num="22" count="0" type="stmt"/>
        <line num="23" count="0" type="stmt"/>
        <line num="24" count="0" type="stmt"/>
        <line num="26" count="1" type="stmt"/>
        <line num="27" count="0" type="stmt"/>
        <line num="28" count="0" type="stmt"/>
        <line num="29" count="0" type="stmt"/>
        <line num="30" count="0" type="stmt"/>
        <line num="32" count="0" type="stmt"/>
        <line num="33" count="0" type="stmt"/>
        <line num="34" count="0" type="stmt"/>
        <line num="35" count="0" type="stmt"/>
        <line num="36" count="0" type="stmt"/>
        <line num="37" count="0" type="stmt"/>
        <line num="38" count="0" type="stmt"/>
        <line num="39" count="0" type="stmt"/>
        <line num="40" count="0" type="stmt"/>
        <line num="41" count="0" type="stmt"/>
        <line num="42" count="0" type="stmt"/>
        <line num="43" count="0" type="stmt"/>
        <line num="44" count="0" type="stmt"/>
        <line num="45" count="0" type="stmt"/>
        <line num="46" count="0" type="stmt"/>
        <line num="47" count="0" type="stmt"/>
        <line num="48" count="0" type="stmt"/>
        <line num="49" count="0" type="stmt"/>
        <line num="55" count="1" type="stmt"/>
        <line num="56" count="0" type="stmt"/>
        <line num="57" count="0" type="stmt"/>
        <line num="58" count="0" type="stmt"/>
        <line num="59" count="0" type="stmt"/>
        <line num="60" count="0" type="stmt"/>
        <line num="61" count="0" type="stmt"/>
        <line num="62" count="0" type="stmt"/>
        <line num="63" count="0" type="stmt"/>
        <line num="64" count="0" type="stmt"/>
        <line num="65" count="0" type="stmt"/>
        <line num="66" count="0" type="stmt"/>
        <line num="67" count="0" type="stmt"/>
        <line num="68" count="0" type="stmt"/>
        <line num="69" count="0" type="stmt"/>
        <line num="70" count="0" type="stmt"/>
        <line num="71" count="0" type="stmt"/>
        <line num="72" count="0" type="stmt"/>
        <line num="73" count="0" type="stmt"/>
        <line num="80" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="81" count="3" type="stmt"/>
        <line num="82" count="3" type="stmt"/>
        <line num="83" count="3" type="stmt"/>
        <line num="84" count="3" type="cond" truecount="0" falsecount="1"/>
        <line num="85" count="0" type="stmt"/>
        <line num="86" count="0" type="stmt"/>
        <line num="87" count="3" type="stmt"/>
        <line num="89" count="1" type="stmt"/>
        <line num="92" count="0" type="stmt"/>
        <line num="93" count="0" type="stmt"/>
        <line num="94" count="0" type="stmt"/>
        <line num="95" count="0" type="stmt"/>
        <line num="96" count="0" type="stmt"/>
        <line num="97" count="0" type="stmt"/>
        <line num="98" count="0" type="stmt"/>
        <line num="99" count="0" type="stmt"/>
        <line num="100" count="0" type="stmt"/>
        <line num="102" count="0" type="stmt"/>
        <line num="103" count="0" type="stmt"/>
        <line num="104" count="0" type="stmt"/>
        <line num="105" count="0" type="stmt"/>
        <line num="110" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="111" count="4" type="stmt"/>
        <line num="112" count="4" type="stmt"/>
        <line num="113" count="4" type="stmt"/>
        <line num="114" count="4" type="stmt"/>
        <line num="115" count="4" type="stmt"/>
        <line num="116" count="4" type="cond" truecount="0" falsecount="1"/>
        <line num="117" count="0" type="stmt"/>
        <line num="118" count="0" type="stmt"/>
        <line num="119" count="0" type="stmt"/>
        <line num="120" count="0" type="stmt"/>
        <line num="121" count="4" type="stmt"/>
        <line num="122" count="4" type="cond" truecount="1" falsecount="0"/>
        <line num="123" count="1" type="stmt"/>
        <line num="124" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="125" count="3" type="stmt"/>
        <line num="126" count="3" type="stmt"/>
        <line num="127" count="4" type="stmt"/>
        <line num="128" count="1" type="stmt"/>
      </file>
      <file name="studentAssignmentService.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/studentAssignmentService.ts">
        <metrics statements="26" coveredstatements="26" conditionals="2" coveredconditionals="2" methods="1" coveredmethods="1"/>
        <line num="1" count="1" type="stmt"/>
        <line num="3" count="1" type="stmt"/>
        <line num="12" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="13" count="14" type="stmt"/>
        <line num="14" count="14" type="stmt"/>
        <line num="15" count="14" type="stmt"/>
        <line num="16" count="14" type="stmt"/>
        <line num="17" count="14" type="stmt"/>
        <line num="18" count="14" type="stmt"/>
        <line num="19" count="14" type="stmt"/>
        <line num="20" count="14" type="stmt"/>
        <line num="21" count="14" type="stmt"/>
        <line num="22" count="14" type="stmt"/>
        <line num="23" count="14" type="stmt"/>
        <line num="24" count="14" type="stmt"/>
        <line num="25" count="14" type="stmt"/>
        <line num="26" count="14" type="stmt"/>
        <line num="27" count="14" type="stmt"/>
        <line num="28" count="14" type="stmt"/>
        <line num="29" count="14" type="stmt"/>
        <line num="30" count="14" type="stmt"/>
        <line num="31" count="14" type="stmt"/>
        <line num="32" count="14" type="cond" truecount="1" falsecount="0"/>
        <line num="33" count="14" type="stmt"/>
        <line num="35" count="14" type="stmt"/>
        <line num="36" count="14" type="stmt"/>
      </file>
      <file name="studentService.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/studentService.ts">
        <metrics statements="39" coveredstatements="7" conditionals="0" coveredconditionals="0" methods="3" coveredmethods="0"/>
        <line num="1" count="1" type="stmt"/>
        <line num="3" count="1" type="stmt"/>
        <line num="5" count="1" type="stmt"/>
        <line num="6" count="1" type="stmt"/>
        <line num="7" count="0" type="stmt"/>
        <line num="8" count="0" type="stmt"/>
        <line num="9" count="0" type="stmt"/>
        <line num="10" count="0" type="stmt"/>
        <line num="11" count="0" type="stmt"/>
        <line num="12" count="0" type="stmt"/>
        <line num="13" count="0" type="stmt"/>
        <line num="15" count="1" type="stmt"/>
        <line num="16" count="0" type="stmt"/>
        <line num="17" count="0" type="stmt"/>
        <line num="18" count="0" type="stmt"/>
        <line num="19" count="0" type="stmt"/>
        <line num="21" count="0" type="stmt"/>
        <line num="22" count="0" type="stmt"/>
        <line num="23" count="0" type="stmt"/>
        <line num="25" count="0" type="stmt"/>
        <line num="26" count="0" type="stmt"/>
        <line num="29" count="1" type="stmt"/>
        <line num="30" count="0" type="stmt"/>
        <line num="31" count="0" type="stmt"/>
        <line num="32" count="0" type="stmt"/>
        <line num="33" count="0" type="stmt"/>
        <line num="34" count="0" type="stmt"/>
        <line num="35" count="0" type="stmt"/>
        <line num="36" count="0" type="stmt"/>
        <line num="37" count="0" type="stmt"/>
        <line num="38" count="0" type="stmt"/>
        <line num="39" count="0" type="stmt"/>
        <line num="40" count="0" type="stmt"/>
        <line num="41" count="0" type="stmt"/>
        <line num="42" count="0" type="stmt"/>
        <line num="43" count="0" type="stmt"/>
        <line num="44" count="0" type="stmt"/>
        <line num="45" count="0" type="stmt"/>
        <line num="46" count="1" type="stmt"/>
      </file>
      <file name="studentTeamService.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/studentTeamService.ts">
        <metrics statements="58" coveredstatements="7" conditionals="0" coveredconditionals="0" methods="3" coveredmethods="0"/>
        <line num="1" count="1" type="stmt"/>
        <line num="3" count="1" type="stmt"/>
        <line num="5" count="1" type="stmt"/>
        <line num="6" count="1" type="stmt"/>
        <line num="7" count="0" type="stmt"/>
        <line num="8" count="0" type="stmt"/>
        <line num="9" count="0" type="stmt"/>
        <line num="10" count="0" type="stmt"/>
        <line num="11" count="0" type="stmt"/>
        <line num="12" count="0" type="stmt"/>
        <line num="13" count="0" type="stmt"/>
        <line num="14" count="0" type="stmt"/>
        <line num="15" count="0" type="stmt"/>
        <line num="16" count="0" type="stmt"/>
        <line num="17" count="0" type="stmt"/>
        <line num="18" count="0" type="stmt"/>
        <line num="19" count="0" type="stmt"/>
        <line num="20" count="0" type="stmt"/>
        <line num="21" count="0" type="stmt"/>
        <line num="23" count="1" type="stmt"/>
        <line num="24" count="0" type="stmt"/>
        <line num="25" count="0" type="stmt"/>
        <line num="26" count="0" type="stmt"/>
        <line num="27" count="0" type="stmt"/>
        <line num="28" count="0" type="stmt"/>
        <line num="29" count="0" type="stmt"/>
        <line num="30" count="0" type="stmt"/>
        <line num="31" count="0" type="stmt"/>
        <line num="32" count="0" type="stmt"/>
        <line num="33" count="0" type="stmt"/>
        <line num="34" count="0" type="stmt"/>
        <line num="35" count="0" type="stmt"/>
        <line num="36" count="0" type="stmt"/>
        <line num="37" count="0" type="stmt"/>
        <line num="38" count="0" type="stmt"/>
        <line num="39" count="0" type="stmt"/>
        <line num="40" count="0" type="stmt"/>
        <line num="41" count="0" type="stmt"/>
        <line num="42" count="0" type="stmt"/>
        <line num="43" count="0" type="stmt"/>
        <line num="44" count="0" type="stmt"/>
        <line num="45" count="0" type="stmt"/>
        <line num="46" count="0" type="stmt"/>
        <line num="47" count="0" type="stmt"/>
        <line num="49" count="1" type="stmt"/>
        <line num="50" count="0" type="stmt"/>
        <line num="51" count="0" type="stmt"/>
        <line num="52" count="0" type="stmt"/>
        <line num="53" count="0" type="stmt"/>
        <line num="54" count="0" type="stmt"/>
        <line num="55" count="0" type="stmt"/>
        <line num="56" count="0" type="stmt"/>
        <line num="57" count="0" type="stmt"/>
        <line num="58" count="0" type="stmt"/>
        <line num="59" count="0" type="stmt"/>
        <line num="60" count="0" type="stmt"/>
        <line num="61" count="0" type="stmt"/>
        <line num="62" count="1" type="stmt"/>
      </file>
      <file name="submissionService.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/submissionService.ts">
        <metrics statements="138" coveredstatements="138" conditionals="6" coveredconditionals="6" methods="5" coveredmethods="5"/>
        <line num="1" count="1" type="stmt"/>
        <line num="2" count="1" type="stmt"/>
        <line num="4" count="1" type="stmt"/>
        <line num="6" count="1" type="stmt"/>
        <line num="7" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="8" count="2" type="stmt"/>
        <line num="9" count="2" type="stmt"/>
        <line num="10" count="2" type="stmt"/>
        <line num="11" count="2" type="stmt"/>
        <line num="14" count="2" type="stmt"/>
        <line num="15" count="2" type="stmt"/>
        <line num="16" count="2" type="stmt"/>
        <line num="17" count="2" type="stmt"/>
        <line num="18" count="2" type="stmt"/>
        <line num="19" count="2" type="stmt"/>
        <line num="20" count="2" type="stmt"/>
        <line num="21" count="2" type="stmt"/>
        <line num="22" count="2" type="stmt"/>
        <line num="23" count="2" type="stmt"/>
        <line num="24" count="2" type="stmt"/>
        <line num="25" count="2" type="stmt"/>
        <line num="26" count="2" type="stmt"/>
        <line num="27" count="2" type="stmt"/>
        <line num="28" count="2" type="stmt"/>
        <line num="29" count="2" type="stmt"/>
        <line num="30" count="2" type="stmt"/>
        <line num="32" count="2" type="cond" truecount="1" falsecount="0"/>
        <line num="33" count="1" type="stmt"/>
        <line num="34" count="1" type="stmt"/>
        <line num="36" count="1" type="stmt"/>
        <line num="37" count="1" type="stmt"/>
        <line num="38" count="1" type="stmt"/>
        <line num="39" count="1" type="stmt"/>
        <line num="40" count="1" type="stmt"/>
        <line num="41" count="1" type="stmt"/>
        <line num="42" count="1" type="stmt"/>
        <line num="43" count="2" type="stmt"/>
        <line num="45" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="46" count="1" type="stmt"/>
        <line num="47" count="1" type="stmt"/>
        <line num="48" count="1" type="stmt"/>
        <line num="49" count="1" type="stmt"/>
        <line num="50" count="1" type="stmt"/>
        <line num="51" count="1" type="stmt"/>
        <line num="52" count="1" type="stmt"/>
        <line num="53" count="1" type="stmt"/>
        <line num="54" count="1" type="stmt"/>
        <line num="55" count="1" type="stmt"/>
        <line num="56" count="1" type="stmt"/>
        <line num="57" count="1" type="stmt"/>
        <line num="58" count="1" type="stmt"/>
        <line num="59" count="1" type="stmt"/>
        <line num="60" count="1" type="stmt"/>
        <line num="61" count="1" type="stmt"/>
        <line num="62" count="1" type="stmt"/>
        <line num="63" count="1" type="stmt"/>
        <line num="64" count="1" type="stmt"/>
        <line num="66" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="67" count="1" type="stmt"/>
        <line num="68" count="1" type="stmt"/>
        <line num="69" count="1" type="stmt"/>
        <line num="70" count="1" type="stmt"/>
        <line num="71" count="1" type="stmt"/>
        <line num="72" count="1" type="stmt"/>
        <line num="73" count="1" type="stmt"/>
        <line num="74" count="1" type="stmt"/>
        <line num="75" count="1" type="stmt"/>
        <line num="76" count="1" type="stmt"/>
        <line num="77" count="1" type="stmt"/>
        <line num="78" count="1" type="stmt"/>
        <line num="79" count="1" type="stmt"/>
        <line num="80" count="1" type="stmt"/>
        <line num="81" count="1" type="stmt"/>
        <line num="82" count="1" type="stmt"/>
        <line num="83" count="1" type="stmt"/>
        <line num="84" count="1" type="stmt"/>
        <line num="85" count="1" type="stmt"/>
        <line num="86" count="1" type="stmt"/>
        <line num="87" count="1" type="stmt"/>
        <line num="89" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="90" count="2" type="stmt"/>
        <line num="91" count="2" type="stmt"/>
        <line num="92" count="2" type="stmt"/>
        <line num="93" count="2" type="stmt"/>
        <line num="94" count="2" type="stmt"/>
        <line num="95" count="2" type="stmt"/>
        <line num="96" count="2" type="stmt"/>
        <line num="97" count="2" type="stmt"/>
        <line num="98" count="2" type="stmt"/>
        <line num="99" count="2" type="stmt"/>
        <line num="100" count="2" type="stmt"/>
        <line num="101" count="2" type="stmt"/>
        <line num="102" count="2" type="stmt"/>
        <line num="103" count="2" type="stmt"/>
        <line num="104" count="2" type="stmt"/>
        <line num="105" count="2" type="stmt"/>
        <line num="106" count="2" type="stmt"/>
        <line num="107" count="2" type="stmt"/>
        <line num="108" count="2" type="stmt"/>
        <line num="109" count="2" type="stmt"/>
        <line num="110" count="2" type="stmt"/>
        <line num="111" count="2" type="stmt"/>
        <line num="112" count="2" type="stmt"/>
        <line num="113" count="2" type="stmt"/>
        <line num="114" count="2" type="stmt"/>
        <line num="115" count="2" type="stmt"/>
        <line num="116" count="2" type="stmt"/>
        <line num="117" count="2" type="stmt"/>
        <line num="118" count="2" type="stmt"/>
        <line num="119" count="2" type="stmt"/>
        <line num="121" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="122" count="2" type="stmt"/>
        <line num="123" count="2" type="stmt"/>
        <line num="124" count="2" type="stmt"/>
        <line num="125" count="2" type="stmt"/>
        <line num="126" count="2" type="stmt"/>
        <line num="127" count="2" type="stmt"/>
        <line num="128" count="2" type="stmt"/>
        <line num="129" count="2" type="stmt"/>
        <line num="130" count="2" type="stmt"/>
        <line num="131" count="2" type="stmt"/>
        <line num="132" count="2" type="stmt"/>
        <line num="133" count="2" type="stmt"/>
        <line num="134" count="2" type="stmt"/>
        <line num="135" count="2" type="stmt"/>
        <line num="136" count="2" type="stmt"/>
        <line num="137" count="2" type="stmt"/>
        <line num="138" count="2" type="stmt"/>
        <line num="139" count="2" type="stmt"/>
        <line num="140" count="2" type="stmt"/>
        <line num="141" count="2" type="stmt"/>
        <line num="142" count="2" type="stmt"/>
        <line num="143" count="2" type="stmt"/>
        <line num="144" count="2" type="stmt"/>
        <line num="145" count="2" type="stmt"/>
        <line num="146" count="2" type="stmt"/>
        <line num="147" count="2" type="stmt"/>
        <line num="148" count="1" type="stmt"/>
      </file>
      <file name="teacherService.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/teacherService.ts">
        <metrics statements="31" coveredstatements="7" conditionals="0" coveredconditionals="0" methods="3" coveredmethods="0"/>
        <line num="1" count="1" type="stmt"/>
        <line num="3" count="1" type="stmt"/>
        <line num="5" count="1" type="stmt"/>
        <line num="6" count="1" type="stmt"/>
        <line num="7" count="0" type="stmt"/>
        <line num="8" count="0" type="stmt"/>
        <line num="9" count="0" type="stmt"/>
        <line num="10" count="0" type="stmt"/>
        <line num="11" count="0" type="stmt"/>
        <line num="12" count="0" type="stmt"/>
        <line num="13" count="0" type="stmt"/>
        <line num="15" count="1" type="stmt"/>
        <line num="16" count="0" type="stmt"/>
        <line num="17" count="0" type="stmt"/>
        <line num="18" count="0" type="stmt"/>
        <line num="19" count="0" type="stmt"/>
        <line num="20" count="0" type="stmt"/>
        <line num="21" count="0" type="stmt"/>
        <line num="23" count="1" type="stmt"/>
        <line num="24" count="0" type="stmt"/>
        <line num="25" count="0" type="stmt"/>
        <line num="26" count="0" type="stmt"/>
        <line num="27" count="0" type="stmt"/>
        <line num="28" count="0" type="stmt"/>
        <line num="29" count="0" type="stmt"/>
        <line num="30" count="0" type="stmt"/>
        <line num="31" count="0" type="stmt"/>
        <line num="32" count="0" type="stmt"/>
        <line num="33" count="0" type="stmt"/>
        <line num="34" count="0" type="stmt"/>
        <line num="35" count="1" type="stmt"/>
      </file>
      <file name="teacherTeamsService.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/teacherTeamsService.ts">
        <metrics statements="166" coveredstatements="8" conditionals="0" coveredconditionals="0" methods="10" coveredmethods="0"/>
        <line num="1" count="1" type="stmt"/>
        <line num="3" count="1" type="stmt"/>
        <line num="5" count="1" type="stmt"/>
        <line num="12" count="1" type="stmt"/>
        <line num="13" count="0" type="stmt"/>
        <line num="14" count="0" type="stmt"/>
        <line num="15" count="0" type="stmt"/>
        <line num="16" count="0" type="stmt"/>
        <line num="17" count="0" type="stmt"/>
        <line num="21" count="0" type="stmt"/>
        <line num="22" count="0" type="stmt"/>
        <line num="23" count="0" type="stmt"/>
        <line num="24" count="0" type="stmt"/>
        <line num="25" count="0" type="stmt"/>
        <line num="26" count="0" type="stmt"/>
        <line num="28" count="0" type="stmt"/>
        <line num="29" count="0" type="stmt"/>
        <line num="30" count="0" type="stmt"/>
        <line num="33" count="0" type="stmt"/>
        <line num="34" count="0" type="stmt"/>
        <line num="35" count="0" type="stmt"/>
        <line num="36" count="0" type="stmt"/>
        <line num="38" count="0" type="stmt"/>
        <line num="39" count="0" type="stmt"/>
        <line num="41" count="0" type="stmt"/>
        <line num="42" count="0" type="stmt"/>
        <line num="46" count="0" type="stmt"/>
        <line num="47" count="0" type="stmt"/>
        <line num="48" count="0" type="stmt"/>
        <line num="49" count="0" type="stmt"/>
        <line num="50" count="0" type="stmt"/>
        <line num="51" count="0" type="stmt"/>
        <line num="52" count="0" type="stmt"/>
        <line num="53" count="0" type="stmt"/>
        <line num="57" count="0" type="stmt"/>
        <line num="58" count="0" type="stmt"/>
        <line num="59" count="0" type="stmt"/>
        <line num="60" count="0" type="stmt"/>
        <line num="61" count="0" type="stmt"/>
        <line num="63" count="0" type="stmt"/>
        <line num="64" count="0" type="stmt"/>
        <line num="65" count="0" type="stmt"/>
        <line num="66" count="0" type="stmt"/>
        <line num="67" count="0" type="stmt"/>
        <line num="68" count="0" type="stmt"/>
        <line num="69" count="0" type="stmt"/>
        <line num="70" count="0" type="stmt"/>
        <line num="74" count="0" type="stmt"/>
        <line num="75" count="0" type="stmt"/>
        <line num="77" count="0" type="stmt"/>
        <line num="78" count="0" type="stmt"/>
        <line num="80" count="0" type="stmt"/>
        <line num="81" count="0" type="stmt"/>
        <line num="82" count="0" type="stmt"/>
        <line num="83" count="0" type="stmt"/>
        <line num="84" count="0" type="stmt"/>
        <line num="85" count="0" type="stmt"/>
        <line num="86" count="0" type="stmt"/>
        <line num="87" count="0" type="stmt"/>
        <line num="88" count="0" type="stmt"/>
        <line num="89" count="0" type="stmt"/>
        <line num="90" count="0" type="stmt"/>
        <line num="91" count="0" type="stmt"/>
        <line num="98" count="0" type="stmt"/>
        <line num="100" count="0" type="stmt"/>
        <line num="101" count="0" type="stmt"/>
        <line num="102" count="0" type="stmt"/>
        <line num="105" count="0" type="stmt"/>
        <line num="106" count="0" type="stmt"/>
        <line num="107" count="0" type="stmt"/>
        <line num="109" count="0" type="stmt"/>
        <line num="112" count="0" type="stmt"/>
        <line num="114" count="0" type="stmt"/>
        <line num="116" count="0" type="stmt"/>
        <line num="117" count="0" type="stmt"/>
        <line num="118" count="0" type="stmt"/>
        <line num="120" count="0" type="stmt"/>
        <line num="121" count="0" type="stmt"/>
        <line num="122" count="0" type="stmt"/>
        <line num="124" count="0" type="stmt"/>
        <line num="125" count="0" type="stmt"/>
        <line num="129" count="0" type="stmt"/>
        <line num="136" count="0" type="stmt"/>
        <line num="137" count="0" type="stmt"/>
        <line num="138" count="0" type="stmt"/>
        <line num="139" count="0" type="stmt"/>
        <line num="140" count="0" type="stmt"/>
        <line num="141" count="0" type="stmt"/>
        <line num="142" count="0" type="stmt"/>
        <line num="143" count="0" type="stmt"/>
        <line num="144" count="0" type="stmt"/>
        <line num="145" count="0" type="stmt"/>
        <line num="148" count="0" type="stmt"/>
        <line num="149" count="0" type="stmt"/>
        <line num="150" count="0" type="stmt"/>
        <line num="153" count="0" type="stmt"/>
        <line num="155" count="0" type="stmt"/>
        <line num="158" count="0" type="stmt"/>
        <line num="159" count="0" type="stmt"/>
        <line num="162" count="0" type="stmt"/>
        <line num="164" count="0" type="stmt"/>
        <line num="166" count="0" type="stmt"/>
        <line num="167" count="0" type="stmt"/>
        <line num="168" count="0" type="stmt"/>
        <line num="170" count="0" type="stmt"/>
        <line num="171" count="0" type="stmt"/>
        <line num="172" count="0" type="stmt"/>
        <line num="174" count="0" type="stmt"/>
        <line num="175" count="0" type="stmt"/>
        <line num="178" count="1" type="stmt"/>
        <line num="180" count="0" type="stmt"/>
        <line num="181" count="0" type="stmt"/>
        <line num="182" count="0" type="stmt"/>
        <line num="183" count="0" type="stmt"/>
        <line num="186" count="0" type="stmt"/>
        <line num="189" count="0" type="stmt"/>
        <line num="192" count="0" type="stmt"/>
        <line num="193" count="0" type="stmt"/>
        <line num="194" count="0" type="stmt"/>
        <line num="195" count="0" type="stmt"/>
        <line num="198" count="1" type="stmt"/>
        <line num="199" count="0" type="stmt"/>
        <line num="200" count="0" type="stmt"/>
        <line num="201" count="0" type="stmt"/>
        <line num="202" count="0" type="stmt"/>
        <line num="204" count="0" type="stmt"/>
        <line num="206" count="0" type="stmt"/>
        <line num="208" count="0" type="stmt"/>
        <line num="209" count="0" type="stmt"/>
        <line num="210" count="0" type="stmt"/>
        <line num="213" count="0" type="stmt"/>
        <line num="216" count="0" type="stmt"/>
        <line num="217" count="0" type="stmt"/>
        <line num="218" count="0" type="stmt"/>
        <line num="219" count="0" type="stmt"/>
        <line num="220" count="0" type="stmt"/>
        <line num="222" count="0" type="stmt"/>
        <line num="223" count="0" type="stmt"/>
        <line num="224" count="0" type="stmt"/>
        <line num="225" count="0" type="stmt"/>
        <line num="226" count="0" type="stmt"/>
        <line num="227" count="0" type="stmt"/>
        <line num="228" count="0" type="stmt"/>
        <line num="229" count="0" type="stmt"/>
        <line num="230" count="0" type="stmt"/>
        <line num="231" count="0" type="stmt"/>
        <line num="233" count="0" type="stmt"/>
        <line num="234" count="0" type="stmt"/>
        <line num="236" count="0" type="stmt"/>
        <line num="237" count="0" type="stmt"/>
        <line num="241" count="1" type="stmt"/>
        <line num="242" count="0" type="stmt"/>
        <line num="243" count="0" type="stmt"/>
        <line num="244" count="0" type="stmt"/>
        <line num="245" count="0" type="stmt"/>
        <line num="246" count="0" type="stmt"/>
        <line num="247" count="0" type="stmt"/>
        <line num="248" count="0" type="stmt"/>
        <line num="249" count="0" type="stmt"/>
        <line num="253" count="1" type="stmt"/>
        <line num="254" count="0" type="stmt"/>
        <line num="255" count="0" type="stmt"/>
        <line num="256" count="0" type="stmt"/>
        <line num="257" count="0" type="stmt"/>
        <line num="258" count="0" type="stmt"/>
        <line num="259" count="0" type="stmt"/>
      </file>
      <file name="userService.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/userService.ts">
        <metrics statements="29" coveredstatements="7" conditionals="0" coveredconditionals="0" methods="3" coveredmethods="0"/>
        <line num="1" count="1" type="stmt"/>
        <line num="3" count="1" type="stmt"/>
        <line num="5" count="1" type="stmt"/>
        <line num="6" count="1" type="stmt"/>
        <line num="7" count="0" type="stmt"/>
        <line num="8" count="0" type="stmt"/>
        <line num="10" count="1" type="stmt"/>
        <line num="11" count="0" type="stmt"/>
        <line num="12" count="0" type="stmt"/>
        <line num="13" count="0" type="stmt"/>
        <line num="14" count="0" type="stmt"/>
        <line num="15" count="0" type="stmt"/>
        <line num="16" count="0" type="stmt"/>
        <line num="17" count="0" type="stmt"/>
        <line num="19" count="0" type="stmt"/>
        <line num="20" count="0" type="stmt"/>
        <line num="21" count="0" type="stmt"/>
        <line num="22" count="0" type="stmt"/>
        <line num="23" count="0" type="stmt"/>
        <line num="24" count="0" type="stmt"/>
        <line num="25" count="0" type="stmt"/>
        <line num="26" count="0" type="stmt"/>
        <line num="27" count="0" type="stmt"/>
        <line num="28" count="0" type="stmt"/>
        <line num="29" count="0" type="stmt"/>
        <line num="31" count="1" type="stmt"/>
        <line num="32" count="0" type="stmt"/>
        <line num="33" count="0" type="stmt"/>
        <line num="34" count="1" type="stmt"/>
      </file>
    </package>
    <package name="dwengo_backend.services.teacherServices">
      <metrics statements="82" coveredstatements="82" conditionals="17" coveredconditionals="14" methods="4" coveredmethods="4"/>
      <file name="teacherAssignmentService.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/services/teacherServices/teacherAssignmentService.ts">
        <metrics statements="82" coveredstatements="82" conditionals="17" coveredconditionals="14" methods="4" coveredmethods="4"/>
        <line num="2" count="1" type="stmt"/>
        <line num="3" count="1" type="stmt"/>
        <line num="4" count="1" type="stmt"/>
        <line num="7" count="1" type="stmt"/>
        <line num="9" count="1" type="stmt"/>
        <line num="13" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="14" count="4" type="stmt"/>
        <line num="15" count="4" type="stmt"/>
        <line num="16" count="4" type="stmt"/>
        <line num="17" count="4" type="stmt"/>
        <line num="18" count="4" type="stmt"/>
        <line num="19" count="4" type="stmt"/>
        <line num="20" count="4" type="stmt"/>
        <line num="22" count="4" type="cond" truecount="1" falsecount="0"/>
        <line num="23" count="1" type="stmt"/>
        <line num="24" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="29" count="3" type="stmt"/>
        <line num="30" count="3" type="stmt"/>
        <line num="31" count="4" type="cond" truecount="1" falsecount="1"/>
        <line num="32" count="4" type="cond" truecount="1" falsecount="1"/>
        <line num="33" count="4" type="cond" truecount="1" falsecount="1"/>
        <line num="34" count="4" type="cond" truecount="1" falsecount="0"/>
        <line num="37" count="2" type="stmt"/>
        <line num="38" count="2" type="stmt"/>
        <line num="39" count="2" type="stmt"/>
        <line num="40" count="2" type="stmt"/>
        <line num="41" count="2" type="stmt"/>
        <line num="42" count="2" type="stmt"/>
        <line num="43" count="2" type="stmt"/>
        <line num="44" count="2" type="stmt"/>
        <line num="45" count="2" type="stmt"/>
        <line num="46" count="2" type="stmt"/>
        <line num="47" count="2" type="stmt"/>
        <line num="48" count="2" type="stmt"/>
        <line num="49" count="4" type="stmt"/>
        <line num="55" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="56" count="4" type="stmt"/>
        <line num="57" count="4" type="stmt"/>
        <line num="58" count="4" type="stmt"/>
        <line num="59" count="4" type="cond" truecount="1" falsecount="0"/>
        <line num="60" count="1" type="stmt"/>
        <line num="61" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="62" count="3" type="stmt"/>
        <line num="63" count="3" type="stmt"/>
        <line num="64" count="3" type="stmt"/>
        <line num="65" count="3" type="stmt"/>
        <line num="66" count="3" type="stmt"/>
        <line num="67" count="3" type="stmt"/>
        <line num="68" count="3" type="stmt"/>
        <line num="69" count="3" type="stmt"/>
        <line num="70" count="3" type="stmt"/>
        <line num="71" count="4" type="stmt"/>
        <line num="76" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="77" count="2" type="stmt"/>
        <line num="78" count="2" type="stmt"/>
        <line num="79" count="2" type="stmt"/>
        <line num="80" count="2" type="stmt"/>
        <line num="81" count="2" type="stmt"/>
        <line num="83" count="2" type="cond" truecount="1" falsecount="0"/>
        <line num="84" count="1" type="stmt"/>
        <line num="85" count="1" type="stmt"/>
        <line num="88" count="1" type="stmt"/>
        <line num="91" count="1" type="stmt"/>
        <line num="92" count="1" type="stmt"/>
        <line num="93" count="1" type="stmt"/>
        <line num="94" count="1" type="stmt"/>
        <line num="95" count="1" type="stmt"/>
        <line num="96" count="1" type="stmt"/>
        <line num="97" count="1" type="stmt"/>
        <line num="98" count="2" type="stmt"/>
        <line num="103" count="1" type="cond" truecount="1" falsecount="0"/>
        <line num="104" count="2" type="stmt"/>
        <line num="105" count="2" type="stmt"/>
        <line num="106" count="2" type="stmt"/>
        <line num="107" count="2" type="cond" truecount="1" falsecount="0"/>
        <line num="108" count="1" type="stmt"/>
        <line num="109" count="1" type="stmt"/>
        <line num="111" count="1" type="stmt"/>
        <line num="112" count="1" type="stmt"/>
        <line num="113" count="1" type="stmt"/>
        <line num="114" count="2" type="stmt"/>
        <line num="115" count="1" type="stmt"/>
      </file>
    </package>
    <package name="dwengo_backend.zodSchemas">
      <metrics statements="21" coveredstatements="21" conditionals="0" coveredconditionals="0" methods="0" coveredmethods="0"/>
      <file name="inviteSchemas.ts" path="/home/daan/Documents/sel2/Dwengo-4/dwengo_backend/zodSchemas/inviteSchemas.ts">
        <metrics statements="21" coveredstatements="21" conditionals="0" coveredconditionals="0" methods="0" coveredmethods="0"/>
        <line num="1" count="1" type="stmt"/>
        <line num="6" count="1" type="stmt"/>
        <line num="7" count="1" type="stmt"/>
        <line num="8" count="1" type="stmt"/>
        <line num="9" count="1" type="stmt"/>
        <line num="10" count="1" type="stmt"/>
        <line num="11" count="1" type="stmt"/>
        <line num="12" count="1" type="stmt"/>
        <line num="13" count="1" type="stmt"/>
        <line num="14" count="1" type="stmt"/>
        <line num="19" count="1" type="stmt"/>
        <line num="24" count="1" type="stmt"/>
        <line num="25" count="1" type="stmt"/>
        <line num="26" count="1" type="stmt"/>
        <line num="27" count="1" type="stmt"/>
        <line num="28" count="1" type="stmt"/>
        <line num="29" count="1" type="stmt"/>
        <line num="30" count="1" type="stmt"/>
        <line num="31" count="1" type="stmt"/>
        <line num="32" count="1" type="stmt"/>
        <line num="37" count="1" type="stmt"/>
      </file>
    </package>
  </project>
</coverage>


===== Bestand: ../dwengo_backend/coverage/sorter.js =====
/* eslint-disable */
var addSorting = (function() {
    'use strict';
    var cols,
        currentSort = {
            index: 0,
            desc: false
        };

    // returns the summary table element
    function getTable() {
        return document.querySelector('.coverage-summary');
    }
    // returns the thead element of the summary table
    function getTableHeader() {
        return getTable().querySelector('thead tr');
    }
    // returns the tbody element of the summary table
    function getTableBody() {
        return getTable().querySelector('tbody');
    }
    // returns the th element for nth column
    function getNthColumn(n) {
        return getTableHeader().querySelectorAll('th')[n];
    }

    function onFilterInput() {
        const searchValue = document.getElementById('fileSearch').value;
        const rows = document.getElementsByTagName('tbody')[0].children;
        for (let i = 0; i < rows.length; i++) {
            const row = rows[i];
            if (
                row.textContent
                    .toLowerCase()
                    .includes(searchValue.toLowerCase())
            ) {
                row.style.display = '';
            } else {
                row.style.display = 'none';
            }
        }
    }

    // loads the search box
    function addSearchBox() {
        var template = document.getElementById('filterTemplate');
        var templateClone = template.content.cloneNode(true);
        templateClone.getElementById('fileSearch').oninput = onFilterInput;
        template.parentElement.appendChild(templateClone);
    }

    // loads all columns
    function loadColumns() {
        var colNodes = getTableHeader().querySelectorAll('th'),
            colNode,
            cols = [],
            col,
            i;

        for (i = 0; i < colNodes.length; i += 1) {
            colNode = colNodes[i];
            col = {
                key: colNode.getAttribute('data-col'),
                sortable: !colNode.getAttribute('data-nosort'),
                type: colNode.getAttribute('data-type') || 'string'
            };
            cols.push(col);
            if (col.sortable) {
                col.defaultDescSort = col.type === 'number';
                colNode.innerHTML =
                    colNode.innerHTML + '<span class="sorter"></span>';
            }
        }
        return cols;
    }
    // attaches a data attribute to every tr element with an object
    // of data values keyed by column name
    function loadRowData(tableRow) {
        var tableCols = tableRow.querySelectorAll('td'),
            colNode,
            col,
            data = {},
            i,
            val;
        for (i = 0; i < tableCols.length; i += 1) {
            colNode = tableCols[i];
            col = cols[i];
            val = colNode.getAttribute('data-value');
            if (col.type === 'number') {
                val = Number(val);
            }
            data[col.key] = val;
        }
        return data;
    }
    // loads all row data
    function loadData() {
        var rows = getTableBody().querySelectorAll('tr'),
            i;

        for (i = 0; i < rows.length; i += 1) {
            rows[i].data = loadRowData(rows[i]);
        }
    }
    // sorts the table using the data for the ith column
    function sortByIndex(index, desc) {
        var key = cols[index].key,
            sorter = function(a, b) {
                a = a.data[key];
                b = b.data[key];
                return a < b ? -1 : a > b ? 1 : 0;
            },
            finalSorter = sorter,
            tableBody = document.querySelector('.coverage-summary tbody'),
            rowNodes = tableBody.querySelectorAll('tr'),
            rows = [],
            i;

        if (desc) {
            finalSorter = function(a, b) {
                return -1 * sorter(a, b);
            };
        }

        for (i = 0; i < rowNodes.length; i += 1) {
            rows.push(rowNodes[i]);
            tableBody.removeChild(rowNodes[i]);
        }

        rows.sort(finalSorter);

        for (i = 0; i < rows.length; i += 1) {
            tableBody.appendChild(rows[i]);
        }
    }
    // removes sort indicators for current column being sorted
    function removeSortIndicators() {
        var col = getNthColumn(currentSort.index),
            cls = col.className;

        cls = cls.replace(/ sorted$/, '').replace(/ sorted-desc$/, '');
        col.className = cls;
    }
    // adds sort indicators for current column being sorted
    function addSortIndicators() {
        getNthColumn(currentSort.index).className += currentSort.desc
            ? ' sorted-desc'
            : ' sorted';
    }
    // adds event listeners for all sorter widgets
    function enableUI() {
        var i,
            el,
            ithSorter = function ithSorter(i) {
                var col = cols[i];

                return function() {
                    var desc = col.defaultDescSort;

                    if (currentSort.index === i) {
                        desc = !currentSort.desc;
                    }
                    sortByIndex(i, desc);
                    removeSortIndicators();
                    currentSort.index = i;
                    currentSort.desc = desc;
                    addSortIndicators();
                };
            };
        for (i = 0; i < cols.length; i += 1) {
            if (cols[i].sortable) {
                // add the click event handler on the th so users
                // dont have to click on those tiny arrows
                el = getNthColumn(i).querySelector('.sorter').parentElement;
                if (el.addEventListener) {
                    el.addEventListener('click', ithSorter(i));
                } else {
                    el.attachEvent('onclick', ithSorter(i));
                }
            }
        }
    }
    // adds sorting functionality to the UI
    return function() {
        if (!getTable()) {
            return;
        }
        cols = loadColumns();
        loadData();
        addSearchBox();
        addSortIndicators();
        enableUI();
    };
})();

window.addEventListener('load', addSorting);




===== Bestand: ../dwengo_backend/coverage/base.css =====
body, html {
  margin:0; padding: 0;
  height: 100%;
}
body {
    font-family: Helvetica Neue, Helvetica, Arial;
    font-size: 14px;
    color:#333;
}
.small { font-size: 12px; }
*, *:after, *:before {
  -webkit-box-sizing:border-box;
     -moz-box-sizing:border-box;
          box-sizing:border-box;
  }
h1 { font-size: 20px; margin: 0;}
h2 { font-size: 14px; }
pre {
    font: 12px/1.4 Consolas, "Liberation Mono", Menlo, Courier, monospace;
    margin: 0;
    padding: 0;
    -moz-tab-size: 2;
    -o-tab-size:  2;
    tab-size: 2;
}
a { color:#0074D9; text-decoration:none; }
a:hover { text-decoration:underline; }
.strong { font-weight: bold; }
.space-top1 { padding: 10px 0 0 0; }
.pad2y { padding: 20px 0; }
.pad1y { padding: 10px 0; }
.pad2x { padding: 0 20px; }
.pad2 { padding: 20px; }
.pad1 { padding: 10px; }
.space-left2 { padding-left:55px; }
.space-right2 { padding-right:20px; }
.center { text-align:center; }
.clearfix { display:block; }
.clearfix:after {
  content:'';
  display:block;
  height:0;
  clear:both;
  visibility:hidden;
  }
.fl { float: left; }
@media only screen and (max-width:640px) {
  .col3 { width:100%; max-width:100%; }
  .hide-mobile { display:none!important; }
}

.quiet {
  color: #7f7f7f;
  color: rgba(0,0,0,0.5);
}
.quiet a { opacity: 0.7; }

.fraction {
  font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace;
  font-size: 10px;
  color: #555;
  background: #E8E8E8;
  padding: 4px 5px;
  border-radius: 3px;
  vertical-align: middle;
}

div.path a:link, div.path a:visited { color: #333; }
table.coverage {
  border-collapse: collapse;
  margin: 10px 0 0 0;
  padding: 0;
}

table.coverage td {
  margin: 0;
  padding: 0;
  vertical-align: top;
}
table.coverage td.line-count {
    text-align: right;
    padding: 0 5px 0 20px;
}
table.coverage td.line-coverage {
    text-align: right;
    padding-right: 10px;
    min-width:20px;
}

table.coverage td span.cline-any {
    display: inline-block;
    padding: 0 5px;
    width: 100%;
}
.missing-if-branch {
    display: inline-block;
    margin-right: 5px;
    border-radius: 3px;
    position: relative;
    padding: 0 4px;
    background: #333;
    color: yellow;
}

.skip-if-branch {
    display: none;
    margin-right: 10px;
    position: relative;
    padding: 0 4px;
    background: #ccc;
    color: white;
}
.missing-if-branch .typ, .skip-if-branch .typ {
    color: inherit !important;
}
.coverage-summary {
  border-collapse: collapse;
  width: 100%;
}
.coverage-summary tr { border-bottom: 1px solid #bbb; }
.keyline-all { border: 1px solid #ddd; }
.coverage-summary td, .coverage-summary th { padding: 10px; }
.coverage-summary tbody { border: 1px solid #bbb; }
.coverage-summary td { border-right: 1px solid #bbb; }
.coverage-summary td:last-child { border-right: none; }
.coverage-summary th {
  text-align: left;
  font-weight: normal;
  white-space: nowrap;
}
.coverage-summary th.file { border-right: none !important; }
.coverage-summary th.pct { }
.coverage-summary th.pic,
.coverage-summary th.abs,
.coverage-summary td.pct,
.coverage-summary td.abs { text-align: right; }
.coverage-summary td.file { white-space: nowrap;  }
.coverage-summary td.pic { min-width: 120px !important;  }
.coverage-summary tfoot td { }

.coverage-summary .sorter {
    height: 10px;
    width: 7px;
    display: inline-block;
    margin-left: 0.5em;
    background: url(sort-arrow-sprite.png) no-repeat scroll 0 0 transparent;
}
.coverage-summary .sorted .sorter {
    background-position: 0 -20px;
}
.coverage-summary .sorted-desc .sorter {
    background-position: 0 -10px;
}
.status-line {  height: 10px; }
/* yellow */
.cbranch-no { background: yellow !important; color: #111; }
/* dark red */
.red.solid, .status-line.low, .low .cover-fill { background:#C21F39 }
.low .chart { border:1px solid #C21F39 }
.highlighted,
.highlighted .cstat-no, .highlighted .fstat-no, .highlighted .cbranch-no{
  background: #C21F39 !important;
}
/* medium red */
.cstat-no, .fstat-no, .cbranch-no, .cbranch-no { background:#F6C6CE }
/* light red */
.low, .cline-no { background:#FCE1E5 }
/* light green */
.high, .cline-yes { background:rgb(230,245,208) }
/* medium green */
.cstat-yes { background:rgb(161,215,106) }
/* dark green */
.status-line.high, .high .cover-fill { background:rgb(77,146,33) }
.high .chart { border:1px solid rgb(77,146,33) }
/* dark yellow (gold) */
.status-line.medium, .medium .cover-fill { background: #f9cd0b; }
.medium .chart { border:1px solid #f9cd0b; }
/* light yellow */
.medium { background: #fff4c2; }

.cstat-skip { background: #ddd; color: #111; }
.fstat-skip { background: #ddd; color: #111 !important; }
.cbranch-skip { background: #ddd !important; color: #111; }

span.cline-neutral { background: #eaeaea; }

.coverage-summary td.empty {
    opacity: .5;
    padding-top: 4px;
    padding-bottom: 4px;
    line-height: 1;
    color: #888;
}

.cover-fill, .cover-empty {
  display:inline-block;
  height: 12px;
}
.chart {
  line-height: 0;
}
.cover-empty {
    background: white;
}
.cover-full {
    border-right: none !important;
}
pre.prettyprint {
    border: none !important;
    padding: 0 !important;
    margin: 0 !important;
}
.com { color: #999 !important; }
.ignore-none { color: #999; font-weight: normal; }

.wrapper {
  min-height: 100%;
  height: auto !important;
  height: 100%;
  margin: 0 auto -48px;
}
.footer, .push {
  height: 48px;
}


===== Bestand: ../dwengo_backend/coverage/prettify.js =====
/* eslint-disable */
window.PR_SHOULD_USE_CONTINUATION=true;(function(){var h=["break,continue,do,else,for,if,return,while"];var u=[h,"auto,case,char,const,default,double,enum,extern,float,goto,int,long,register,short,signed,sizeof,static,struct,switch,typedef,union,unsigned,void,volatile"];var p=[u,"catch,class,delete,false,import,new,operator,private,protected,public,this,throw,true,try,typeof"];var l=[p,"alignof,align_union,asm,axiom,bool,concept,concept_map,const_cast,constexpr,decltype,dynamic_cast,explicit,export,friend,inline,late_check,mutable,namespace,nullptr,reinterpret_cast,static_assert,static_cast,template,typeid,typename,using,virtual,where"];var x=[p,"abstract,boolean,byte,extends,final,finally,implements,import,instanceof,null,native,package,strictfp,super,synchronized,throws,transient"];var R=[x,"as,base,by,checked,decimal,delegate,descending,dynamic,event,fixed,foreach,from,group,implicit,in,interface,internal,into,is,lock,object,out,override,orderby,params,partial,readonly,ref,sbyte,sealed,stackalloc,string,select,uint,ulong,unchecked,unsafe,ushort,var"];var r="all,and,by,catch,class,else,extends,false,finally,for,if,in,is,isnt,loop,new,no,not,null,of,off,on,or,return,super,then,true,try,unless,until,when,while,yes";var w=[p,"debugger,eval,export,function,get,null,set,undefined,var,with,Infinity,NaN"];var s="caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END";var I=[h,"and,as,assert,class,def,del,elif,except,exec,finally,from,global,import,in,is,lambda,nonlocal,not,or,pass,print,raise,try,with,yield,False,True,None"];var f=[h,"alias,and,begin,case,class,def,defined,elsif,end,ensure,false,in,module,next,nil,not,or,redo,rescue,retry,self,super,then,true,undef,unless,until,when,yield,BEGIN,END"];var H=[h,"case,done,elif,esac,eval,fi,function,in,local,set,then,until"];var A=[l,R,w,s+I,f,H];var e=/^(DIR|FILE|vector|(de|priority_)?queue|list|stack|(const_)?iterator|(multi)?(set|map)|bitset|u?(int|float)\d*)/;var C="str";var z="kwd";var j="com";var O="typ";var G="lit";var L="pun";var F="pln";var m="tag";var E="dec";var J="src";var P="atn";var n="atv";var N="nocode";var M="(?:^^\\.?|[+-]|\\!|\\!=|\\!==|\\#|\\%|\\%=|&|&&|&&=|&=|\\(|\\*|\\*=|\\+=|\\,|\\-=|\\->|\\/|\\/=|:|::|\\;|<|<<|<<=|<=|=|==|===|>|>=|>>|>>=|>>>|>>>=|\\?|\\@|\\[|\\^|\\^=|\\^\\^|\\^\\^=|\\{|\\||\\|=|\\|\\||\\|\\|=|\\~|break|case|continue|delete|do|else|finally|instanceof|return|throw|try|typeof)\\s*";function k(Z){var ad=0;var S=false;var ac=false;for(var V=0,U=Z.length;V<U;++V){var ae=Z[V];if(ae.ignoreCase){ac=true}else{if(/[a-z]/i.test(ae.source.replace(/\\u[0-9a-f]{4}|\\x[0-9a-f]{2}|\\[^ux]/gi,""))){S=true;ac=false;break}}}var Y={b:8,t:9,n:10,v:11,f:12,r:13};function ab(ah){var ag=ah.charCodeAt(0);if(ag!==92){return ag}var af=ah.charAt(1);ag=Y[af];if(ag){return ag}else{if("0"<=af&&af<="7"){return parseInt(ah.substring(1),8)}else{if(af==="u"||af==="x"){return parseInt(ah.substring(2),16)}else{return ah.charCodeAt(1)}}}}function T(af){if(af<32){return(af<16?"\\x0":"\\x")+af.toString(16)}var ag=String.fromCharCode(af);if(ag==="\\"||ag==="-"||ag==="["||ag==="]"){ag="\\"+ag}return ag}function X(am){var aq=am.substring(1,am.length-1).match(new RegExp("\\\\u[0-9A-Fa-f]{4}|\\\\x[0-9A-Fa-f]{2}|\\\\[0-3][0-7]{0,2}|\\\\[0-7]{1,2}|\\\\[\\s\\S]|-|[^-\\\\]","g"));var ak=[];var af=[];var ao=aq[0]==="^";for(var ar=ao?1:0,aj=aq.length;ar<aj;++ar){var ah=aq[ar];if(/\\[bdsw]/i.test(ah)){ak.push(ah)}else{var ag=ab(ah);var al;if(ar+2<aj&&"-"===aq[ar+1]){al=ab(aq[ar+2]);ar+=2}else{al=ag}af.push([ag,al]);if(!(al<65||ag>122)){if(!(al<65||ag>90)){af.push([Math.max(65,ag)|32,Math.min(al,90)|32])}if(!(al<97||ag>122)){af.push([Math.max(97,ag)&~32,Math.min(al,122)&~32])}}}}af.sort(function(av,au){return(av[0]-au[0])||(au[1]-av[1])});var ai=[];var ap=[NaN,NaN];for(var ar=0;ar<af.length;++ar){var at=af[ar];if(at[0]<=ap[1]+1){ap[1]=Math.max(ap[1],at[1])}else{ai.push(ap=at)}}var an=["["];if(ao){an.push("^")}an.push.apply(an,ak);for(var ar=0;ar<ai.length;++ar){var at=ai[ar];an.push(T(at[0]));if(at[1]>at[0]){if(at[1]+1>at[0]){an.push("-")}an.push(T(at[1]))}}an.push("]");return an.join("")}function W(al){var aj=al.source.match(new RegExp("(?:\\[(?:[^\\x5C\\x5D]|\\\\[\\s\\S])*\\]|\\\\u[A-Fa-f0-9]{4}|\\\\x[A-Fa-f0-9]{2}|\\\\[0-9]+|\\\\[^ux0-9]|\\(\\?[:!=]|[\\(\\)\\^]|[^\\x5B\\x5C\\(\\)\\^]+)","g"));var ah=aj.length;var an=[];for(var ak=0,am=0;ak<ah;++ak){var ag=aj[ak];if(ag==="("){++am}else{if("\\"===ag.charAt(0)){var af=+ag.substring(1);if(af&&af<=am){an[af]=-1}}}}for(var ak=1;ak<an.length;++ak){if(-1===an[ak]){an[ak]=++ad}}for(var ak=0,am=0;ak<ah;++ak){var ag=aj[ak];if(ag==="("){++am;if(an[am]===undefined){aj[ak]="(?:"}}else{if("\\"===ag.charAt(0)){var af=+ag.substring(1);if(af&&af<=am){aj[ak]="\\"+an[am]}}}}for(var ak=0,am=0;ak<ah;++ak){if("^"===aj[ak]&&"^"!==aj[ak+1]){aj[ak]=""}}if(al.ignoreCase&&S){for(var ak=0;ak<ah;++ak){var ag=aj[ak];var ai=ag.charAt(0);if(ag.length>=2&&ai==="["){aj[ak]=X(ag)}else{if(ai!=="\\"){aj[ak]=ag.replace(/[a-zA-Z]/g,function(ao){var ap=ao.charCodeAt(0);return"["+String.fromCharCode(ap&~32,ap|32)+"]"})}}}}return aj.join("")}var aa=[];for(var V=0,U=Z.length;V<U;++V){var ae=Z[V];if(ae.global||ae.multiline){throw new Error(""+ae)}aa.push("(?:"+W(ae)+")")}return new RegExp(aa.join("|"),ac?"gi":"g")}function a(V){var U=/(?:^|\s)nocode(?:\s|$)/;var X=[];var T=0;var Z=[];var W=0;var S;if(V.currentStyle){S=V.currentStyle.whiteSpace}else{if(window.getComputedStyle){S=document.defaultView.getComputedStyle(V,null).getPropertyValue("white-space")}}var Y=S&&"pre"===S.substring(0,3);function aa(ab){switch(ab.nodeType){case 1:if(U.test(ab.className)){return}for(var ae=ab.firstChild;ae;ae=ae.nextSibling){aa(ae)}var ad=ab.nodeName;if("BR"===ad||"LI"===ad){X[W]="\n";Z[W<<1]=T++;Z[(W++<<1)|1]=ab}break;case 3:case 4:var ac=ab.nodeValue;if(ac.length){if(!Y){ac=ac.replace(/[ \t\r\n]+/g," ")}else{ac=ac.replace(/\r\n?/g,"\n")}X[W]=ac;Z[W<<1]=T;T+=ac.length;Z[(W++<<1)|1]=ab}break}}aa(V);return{sourceCode:X.join("").replace(/\n$/,""),spans:Z}}function B(S,U,W,T){if(!U){return}var V={sourceCode:U,basePos:S};W(V);T.push.apply(T,V.decorations)}var v=/\S/;function o(S){var V=undefined;for(var U=S.firstChild;U;U=U.nextSibling){var T=U.nodeType;V=(T===1)?(V?S:U):(T===3)?(v.test(U.nodeValue)?S:V):V}return V===S?undefined:V}function g(U,T){var S={};var V;(function(){var ad=U.concat(T);var ah=[];var ag={};for(var ab=0,Z=ad.length;ab<Z;++ab){var Y=ad[ab];var ac=Y[3];if(ac){for(var ae=ac.length;--ae>=0;){S[ac.charAt(ae)]=Y}}var af=Y[1];var aa=""+af;if(!ag.hasOwnProperty(aa)){ah.push(af);ag[aa]=null}}ah.push(/[\0-\uffff]/);V=k(ah)})();var X=T.length;var W=function(ah){var Z=ah.sourceCode,Y=ah.basePos;var ad=[Y,F];var af=0;var an=Z.match(V)||[];var aj={};for(var ae=0,aq=an.length;ae<aq;++ae){var ag=an[ae];var ap=aj[ag];var ai=void 0;var am;if(typeof ap==="string"){am=false}else{var aa=S[ag.charAt(0)];if(aa){ai=ag.match(aa[1]);ap=aa[0]}else{for(var ao=0;ao<X;++ao){aa=T[ao];ai=ag.match(aa[1]);if(ai){ap=aa[0];break}}if(!ai){ap=F}}am=ap.length>=5&&"lang-"===ap.substring(0,5);if(am&&!(ai&&typeof ai[1]==="string")){am=false;ap=J}if(!am){aj[ag]=ap}}var ab=af;af+=ag.length;if(!am){ad.push(Y+ab,ap)}else{var al=ai[1];var ak=ag.indexOf(al);var ac=ak+al.length;if(ai[2]){ac=ag.length-ai[2].length;ak=ac-al.length}var ar=ap.substring(5);B(Y+ab,ag.substring(0,ak),W,ad);B(Y+ab+ak,al,q(ar,al),ad);B(Y+ab+ac,ag.substring(ac),W,ad)}}ah.decorations=ad};return W}function i(T){var W=[],S=[];if(T.tripleQuotedStrings){W.push([C,/^(?:\'\'\'(?:[^\'\\]|\\[\s\S]|\'{1,2}(?=[^\']))*(?:\'\'\'|$)|\"\"\"(?:[^\"\\]|\\[\s\S]|\"{1,2}(?=[^\"]))*(?:\"\"\"|$)|\'(?:[^\\\']|\\[\s\S])*(?:\'|$)|\"(?:[^\\\"]|\\[\s\S])*(?:\"|$))/,null,"'\""])}else{if(T.multiLineStrings){W.push([C,/^(?:\'(?:[^\\\']|\\[\s\S])*(?:\'|$)|\"(?:[^\\\"]|\\[\s\S])*(?:\"|$)|\`(?:[^\\\`]|\\[\s\S])*(?:\`|$))/,null,"'\"`"])}else{W.push([C,/^(?:\'(?:[^\\\'\r\n]|\\.)*(?:\'|$)|\"(?:[^\\\"\r\n]|\\.)*(?:\"|$))/,null,"\"'"])}}if(T.verbatimStrings){S.push([C,/^@\"(?:[^\"]|\"\")*(?:\"|$)/,null])}var Y=T.hashComments;if(Y){if(T.cStyleComments){if(Y>1){W.push([j,/^#(?:##(?:[^#]|#(?!##))*(?:###|$)|.*)/,null,"#"])}else{W.push([j,/^#(?:(?:define|elif|else|endif|error|ifdef|include|ifndef|line|pragma|undef|warning)\b|[^\r\n]*)/,null,"#"])}S.push([C,/^<(?:(?:(?:\.\.\/)*|\/?)(?:[\w-]+(?:\/[\w-]+)+)?[\w-]+\.h|[a-z]\w*)>/,null])}else{W.push([j,/^#[^\r\n]*/,null,"#"])}}if(T.cStyleComments){S.push([j,/^\/\/[^\r\n]*/,null]);S.push([j,/^\/\*[\s\S]*?(?:\*\/|$)/,null])}if(T.regexLiterals){var X=("/(?=[^/*])(?:[^/\\x5B\\x5C]|\\x5C[\\s\\S]|\\x5B(?:[^\\x5C\\x5D]|\\x5C[\\s\\S])*(?:\\x5D|$))+/");S.push(["lang-regex",new RegExp("^"+M+"("+X+")")])}var V=T.types;if(V){S.push([O,V])}var U=(""+T.keywords).replace(/^ | $/g,"");if(U.length){S.push([z,new RegExp("^(?:"+U.replace(/[\s,]+/g,"|")+")\\b"),null])}W.push([F,/^\s+/,null," \r\n\t\xA0"]);S.push([G,/^@[a-z_$][a-z_$@0-9]*/i,null],[O,/^(?:[@_]?[A-Z]+[a-z][A-Za-z_$@0-9]*|\w+_t\b)/,null],[F,/^[a-z_$][a-z_$@0-9]*/i,null],[G,new RegExp("^(?:0x[a-f0-9]+|(?:\\d(?:_\\d+)*\\d*(?:\\.\\d*)?|\\.\\d\\+)(?:e[+\\-]?\\d+)?)[a-z]*","i"),null,"0123456789"],[F,/^\\[\s\S]?/,null],[L,/^.[^\s\w\.$@\'\"\`\/\#\\]*/,null]);return g(W,S)}var K=i({keywords:A,hashComments:true,cStyleComments:true,multiLineStrings:true,regexLiterals:true});function Q(V,ag){var U=/(?:^|\s)nocode(?:\s|$)/;var ab=/\r\n?|\n/;var ac=V.ownerDocument;var S;if(V.currentStyle){S=V.currentStyle.whiteSpace}else{if(window.getComputedStyle){S=ac.defaultView.getComputedStyle(V,null).getPropertyValue("white-space")}}var Z=S&&"pre"===S.substring(0,3);var af=ac.createElement("LI");while(V.firstChild){af.appendChild(V.firstChild)}var W=[af];function ae(al){switch(al.nodeType){case 1:if(U.test(al.className)){break}if("BR"===al.nodeName){ad(al);if(al.parentNode){al.parentNode.removeChild(al)}}else{for(var an=al.firstChild;an;an=an.nextSibling){ae(an)}}break;case 3:case 4:if(Z){var am=al.nodeValue;var aj=am.match(ab);if(aj){var ai=am.substring(0,aj.index);al.nodeValue=ai;var ah=am.substring(aj.index+aj[0].length);if(ah){var ak=al.parentNode;ak.insertBefore(ac.createTextNode(ah),al.nextSibling)}ad(al);if(!ai){al.parentNode.removeChild(al)}}}break}}function ad(ak){while(!ak.nextSibling){ak=ak.parentNode;if(!ak){return}}function ai(al,ar){var aq=ar?al.cloneNode(false):al;var ao=al.parentNode;if(ao){var ap=ai(ao,1);var an=al.nextSibling;ap.appendChild(aq);for(var am=an;am;am=an){an=am.nextSibling;ap.appendChild(am)}}return aq}var ah=ai(ak.nextSibling,0);for(var aj;(aj=ah.parentNode)&&aj.nodeType===1;){ah=aj}W.push(ah)}for(var Y=0;Y<W.length;++Y){ae(W[Y])}if(ag===(ag|0)){W[0].setAttribute("value",ag)}var aa=ac.createElement("OL");aa.className="linenums";var X=Math.max(0,((ag-1))|0)||0;for(var Y=0,T=W.length;Y<T;++Y){af=W[Y];af.className="L"+((Y+X)%10);if(!af.firstChild){af.appendChild(ac.createTextNode("\xA0"))}aa.appendChild(af)}V.appendChild(aa)}function D(ac){var aj=/\bMSIE\b/.test(navigator.userAgent);var am=/\n/g;var al=ac.sourceCode;var an=al.length;var V=0;var aa=ac.spans;var T=aa.length;var ah=0;var X=ac.decorations;var Y=X.length;var Z=0;X[Y]=an;var ar,aq;for(aq=ar=0;aq<Y;){if(X[aq]!==X[aq+2]){X[ar++]=X[aq++];X[ar++]=X[aq++]}else{aq+=2}}Y=ar;for(aq=ar=0;aq<Y;){var at=X[aq];var ab=X[aq+1];var W=aq+2;while(W+2<=Y&&X[W+1]===ab){W+=2}X[ar++]=at;X[ar++]=ab;aq=W}Y=X.length=ar;var ae=null;while(ah<T){var af=aa[ah];var S=aa[ah+2]||an;var ag=X[Z];var ap=X[Z+2]||an;var W=Math.min(S,ap);var ak=aa[ah+1];var U;if(ak.nodeType!==1&&(U=al.substring(V,W))){if(aj){U=U.replace(am,"\r")}ak.nodeValue=U;var ai=ak.ownerDocument;var ao=ai.createElement("SPAN");ao.className=X[Z+1];var ad=ak.parentNode;ad.replaceChild(ao,ak);ao.appendChild(ak);if(V<S){aa[ah+1]=ak=ai.createTextNode(al.substring(W,S));ad.insertBefore(ak,ao.nextSibling)}}V=W;if(V>=S){ah+=2}if(V>=ap){Z+=2}}}var t={};function c(U,V){for(var S=V.length;--S>=0;){var T=V[S];if(!t.hasOwnProperty(T)){t[T]=U}else{if(window.console){console.warn("cannot override language handler %s",T)}}}}function q(T,S){if(!(T&&t.hasOwnProperty(T))){T=/^\s*</.test(S)?"default-markup":"default-code"}return t[T]}c(K,["default-code"]);c(g([],[[F,/^[^<?]+/],[E,/^<!\w[^>]*(?:>|$)/],[j,/^<\!--[\s\S]*?(?:-\->|$)/],["lang-",/^<\?([\s\S]+?)(?:\?>|$)/],["lang-",/^<%([\s\S]+?)(?:%>|$)/],[L,/^(?:<[%?]|[%?]>)/],["lang-",/^<xmp\b[^>]*>([\s\S]+?)<\/xmp\b[^>]*>/i],["lang-js",/^<script\b[^>]*>([\s\S]*?)(<\/script\b[^>]*>)/i],["lang-css",/^<style\b[^>]*>([\s\S]*?)(<\/style\b[^>]*>)/i],["lang-in.tag",/^(<\/?[a-z][^<>]*>)/i]]),["default-markup","htm","html","mxml","xhtml","xml","xsl"]);c(g([[F,/^[\s]+/,null," \t\r\n"],[n,/^(?:\"[^\"]*\"?|\'[^\']*\'?)/,null,"\"'"]],[[m,/^^<\/?[a-z](?:[\w.:-]*\w)?|\/?>$/i],[P,/^(?!style[\s=]|on)[a-z](?:[\w:-]*\w)?/i],["lang-uq.val",/^=\s*([^>\'\"\s]*(?:[^>\'\"\s\/]|\/(?=\s)))/],[L,/^[=<>\/]+/],["lang-js",/^on\w+\s*=\s*\"([^\"]+)\"/i],["lang-js",/^on\w+\s*=\s*\'([^\']+)\'/i],["lang-js",/^on\w+\s*=\s*([^\"\'>\s]+)/i],["lang-css",/^style\s*=\s*\"([^\"]+)\"/i],["lang-css",/^style\s*=\s*\'([^\']+)\'/i],["lang-css",/^style\s*=\s*([^\"\'>\s]+)/i]]),["in.tag"]);c(g([],[[n,/^[\s\S]+/]]),["uq.val"]);c(i({keywords:l,hashComments:true,cStyleComments:true,types:e}),["c","cc","cpp","cxx","cyc","m"]);c(i({keywords:"null,true,false"}),["json"]);c(i({keywords:R,hashComments:true,cStyleComments:true,verbatimStrings:true,types:e}),["cs"]);c(i({keywords:x,cStyleComments:true}),["java"]);c(i({keywords:H,hashComments:true,multiLineStrings:true}),["bsh","csh","sh"]);c(i({keywords:I,hashComments:true,multiLineStrings:true,tripleQuotedStrings:true}),["cv","py"]);c(i({keywords:s,hashComments:true,multiLineStrings:true,regexLiterals:true}),["perl","pl","pm"]);c(i({keywords:f,hashComments:true,multiLineStrings:true,regexLiterals:true}),["rb"]);c(i({keywords:w,cStyleComments:true,regexLiterals:true}),["js"]);c(i({keywords:r,hashComments:3,cStyleComments:true,multilineStrings:true,tripleQuotedStrings:true,regexLiterals:true}),["coffee"]);c(g([],[[C,/^[\s\S]+/]]),["regex"]);function d(V){var U=V.langExtension;try{var S=a(V.sourceNode);var T=S.sourceCode;V.sourceCode=T;V.spans=S.spans;V.basePos=0;q(U,T)(V);D(V)}catch(W){if("console" in window){console.log(W&&W.stack?W.stack:W)}}}function y(W,V,U){var S=document.createElement("PRE");S.innerHTML=W;if(U){Q(S,U)}var T={langExtension:V,numberLines:U,sourceNode:S};d(T);return S.innerHTML}function b(ad){function Y(af){return document.getElementsByTagName(af)}var ac=[Y("pre"),Y("code"),Y("xmp")];var T=[];for(var aa=0;aa<ac.length;++aa){for(var Z=0,V=ac[aa].length;Z<V;++Z){T.push(ac[aa][Z])}}ac=null;var W=Date;if(!W.now){W={now:function(){return +(new Date)}}}var X=0;var S;var ab=/\blang(?:uage)?-([\w.]+)(?!\S)/;var ae=/\bprettyprint\b/;function U(){var ag=(window.PR_SHOULD_USE_CONTINUATION?W.now()+250:Infinity);for(;X<T.length&&W.now()<ag;X++){var aj=T[X];var ai=aj.className;if(ai.indexOf("prettyprint")>=0){var ah=ai.match(ab);var am;if(!ah&&(am=o(aj))&&"CODE"===am.tagName){ah=am.className.match(ab)}if(ah){ah=ah[1]}var al=false;for(var ak=aj.parentNode;ak;ak=ak.parentNode){if((ak.tagName==="pre"||ak.tagName==="code"||ak.tagName==="xmp")&&ak.className&&ak.className.indexOf("prettyprint")>=0){al=true;break}}if(!al){var af=aj.className.match(/\blinenums\b(?::(\d+))?/);af=af?af[1]&&af[1].length?+af[1]:true:false;if(af){Q(aj,af)}S={langExtension:ah,sourceNode:aj,numberLines:af};d(S)}}}if(X<T.length){setTimeout(U,250)}else{if(ad){ad()}}}U()}window.prettyPrintOne=y;window.prettyPrint=b;window.PR={createSimpleLexer:g,registerLangHandler:c,sourceDecorator:i,PR_ATTRIB_NAME:P,PR_ATTRIB_VALUE:n,PR_COMMENT:j,PR_DECLARATION:E,PR_KEYWORD:z,PR_LITERAL:G,PR_NOCODE:N,PR_PLAIN:F,PR_PUNCTUATION:L,PR_SOURCE:J,PR_STRING:C,PR_TAG:m,PR_TYPE:O}})();PR.registerLangHandler(PR.createSimpleLexer([],[[PR.PR_DECLARATION,/^<!\w[^>]*(?:>|$)/],[PR.PR_COMMENT,/^<\!--[\s\S]*?(?:-\->|$)/],[PR.PR_PUNCTUATION,/^(?:<[%?]|[%?]>)/],["lang-",/^<\?([\s\S]+?)(?:\?>|$)/],["lang-",/^<%([\s\S]+?)(?:%>|$)/],["lang-",/^<xmp\b[^>]*>([\s\S]+?)<\/xmp\b[^>]*>/i],["lang-handlebars",/^<script\b[^>]*type\s*=\s*['"]?text\/x-handlebars-template['"]?\b[^>]*>([\s\S]*?)(<\/script\b[^>]*>)/i],["lang-js",/^<script\b[^>]*>([\s\S]*?)(<\/script\b[^>]*>)/i],["lang-css",/^<style\b[^>]*>([\s\S]*?)(<\/style\b[^>]*>)/i],["lang-in.tag",/^(<\/?[a-z][^<>]*>)/i],[PR.PR_DECLARATION,/^{{[#^>/]?\s*[\w.][^}]*}}/],[PR.PR_DECLARATION,/^{{&?\s*[\w.][^}]*}}/],[PR.PR_DECLARATION,/^{{{>?\s*[\w.][^}]*}}}/],[PR.PR_COMMENT,/^{{![^}]*}}/]]),["handlebars","hbs"]);PR.registerLangHandler(PR.createSimpleLexer([[PR.PR_PLAIN,/^[ \t\r\n\f]+/,null," \t\r\n\f"]],[[PR.PR_STRING,/^\"(?:[^\n\r\f\\\"]|\\(?:\r\n?|\n|\f)|\\[\s\S])*\"/,null],[PR.PR_STRING,/^\'(?:[^\n\r\f\\\']|\\(?:\r\n?|\n|\f)|\\[\s\S])*\'/,null],["lang-css-str",/^url\(([^\)\"\']*)\)/i],[PR.PR_KEYWORD,/^(?:url|rgb|\!important|@import|@page|@media|@charset|inherit)(?=[^\-\w]|$)/i,null],["lang-css-kw",/^(-?(?:[_a-z]|(?:\\[0-9a-f]+ ?))(?:[_a-z0-9\-]|\\(?:\\[0-9a-f]+ ?))*)\s*:/i],[PR.PR_COMMENT,/^\/\*[^*]*\*+(?:[^\/*][^*]*\*+)*\//],[PR.PR_COMMENT,/^(?:<!--|-->)/],[PR.PR_LITERAL,/^(?:\d+|\d*\.\d+)(?:%|[a-z]+)?/i],[PR.PR_LITERAL,/^#(?:[0-9a-f]{3}){1,2}/i],[PR.PR_PLAIN,/^-?(?:[_a-z]|(?:\\[\da-f]+ ?))(?:[_a-z\d\-]|\\(?:\\[\da-f]+ ?))*/i],[PR.PR_PUNCTUATION,/^[^\s\w\'\"]+/]]),["css"]);PR.registerLangHandler(PR.createSimpleLexer([],[[PR.PR_KEYWORD,/^-?(?:[_a-z]|(?:\\[\da-f]+ ?))(?:[_a-z\d\-]|\\(?:\\[\da-f]+ ?))*/i]]),["css-kw"]);PR.registerLangHandler(PR.createSimpleLexer([],[[PR.PR_STRING,/^[^\)\"\']+/]]),["css-str"]);


===== Bestand: ../dwengo_backend/out.txt =====


===== Bestand: ../dwengo_backend/prisma/schema.prisma =====
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

/// Enums: aanpassing besproken: minder 1-1-relaties

enum Role {
  ADMIN
  TEACHER
  STUDENT
}

enum JoinRequestStatus {
  PENDING
  APPROVED
  DENIED
}

enum EvaluationType {
  OPEN
  MULTIPLE
}

/// Gebruiker â enkele tabel met rol (aangepast)

model User {
  id        Int      @id @default(autoincrement())
  firstName String
  lastName  String
  email     String   @unique
  password  String
  role      Role
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  admin   Admin?
  teacher Teacher?
  student Student?
}

model Admin {
  userId Int  @id
  user   User @relation(fields: [userId], references: [id])
}

model Teacher {
  userId Int  @id
  user   User @relation(fields: [userId], references: [id])

  teacherFeedbacks Feedback[]
  // Uitnodigingen om een klas mee te beheren
  invite           Invite[]

  // Door deze gebruiker (als teacher) aangemaakte leerpaden en leerobjecten
  createdLearningPaths   LearningPath[]   @relation("LearningPathCreator")
  createdLearningObjects LearningObject[] @relation("LearningObjectCreator")

  teaches ClassTeacher[]
}

model Student {
  userId Int  @id
  user   User @relation(fields: [userId], references: [id])

  // Voortgang van studenten
  progress StudentProgress[]

  // Verzoeken om lid te worden van een klas
  joinRequests JoinRequest[]

  // Relaties naar klassen (veel-op-veel)
  classes ClassStudent[]

  // Teams waarvan de student lid is
  Team Team[]
}

model Class {
  id        Int      @id @default(autoincrement())
  name      String
  code      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  classLinks   ClassStudent[]
  joinRequests JoinRequest[]
  assignments  ClassAssignment[]
  Invite       Invite[]
  ClassTeacher ClassTeacher[]
  teams        Team[]
}

///
/// Tussentabel om een Student aan een Class te koppelen
///
model ClassStudent {
  studentId Int
  classId   Int

  student Student @relation(fields: [studentId], references: [userId], onDelete: Cascade)
  class   Class   @relation(fields: [classId], references: [id], onDelete: Cascade)

  @@id([studentId, classId])
}

///
/// Tussentabel om een Teacher aan een Class te koppelen
///
model ClassTeacher {
  teacherId Int
  classId   Int

  teacher Teacher  @relation(fields: [teacherId], references: [userId], onDelete: Cascade)
  class   Class    @relation(fields: [classId], references: [id], onDelete: Cascade)
  invites Invite[] // the invites that the teacher has sent

  @@id([teacherId, classId])
}

///
/// JoinRequest â voor verzoeken om een klas te joinen

model JoinRequest {
  // Op deze manier kan een leerling meer dan 1 keer een verzoek sturen naar een klas
  requestId Int               @id @default(autoincrement())
  studentId Int
  classId   Int
  status    JoinRequestStatus

  student Student @relation(fields: [studentId], references: [userId], onDelete: Cascade)
  class   Class   @relation(fields: [classId], references: [id], onDelete: Cascade)
}

model Invite {
  inviteId       Int               @id @default(autoincrement())
  otherTeacherId Int
  classTeacherId Int
  classId        Int
  status         JoinRequestStatus

  otherTeacher Teacher      @relation(fields: [otherTeacherId], references: [userId], onDelete: Cascade)
  classTeacher ClassTeacher @relation(fields: [classTeacherId, classId], references: [teacherId, classId], onDelete: Cascade)
  class        Class        @relation(fields: [classId], references: [id], onDelete: Cascade)
}

model LearningPath {
  ///
  /// Velden uit de Dwengo API
  ///

  // _id bij Dwengo API
  id             String  @id @default(uuid())
  hruid          String  @unique
  title          String
  language       String
  description    String
  // Base 64 encoding van de cover afbeelding
  image          String?
  // Aantal nodes in het leerpad
  num_nodes      Int?
  // Ik ga ervan uit dat dit is hoeveel nodes een leerling nog moet doorlopen? Hier kunnen we misschien iets mee doen om de progressie bij te houden?
  num_nodes_left Int?

  // De nodes van het leerpad
  nodes LearningPathNode[]

  ///
  /// Custom velden
  ///
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  creatorId Int
  creator   Teacher  @relation(fields: [creatorId], references: [userId], name: "LearningPathCreator", onDelete: Cascade)
  // assignments     Assignment[]
  // questionGeneral QuestionGeneral[]
}

model LearningPathNode {
  nodeId         String       @id @default(uuid())
  learningPathId String
  learningPath   LearningPath @relation(fields: [learningPathId], references: [id])

  // Deze velden gebruik je voor lokale objecten:
  localLearningObjectId String? // bv. ID uit je eigen 'LearningObject' tabel

  // Deze velden gebruik je voor Dwengo-objecten:
  dwengoHruid    String?
  dwengoLanguage String?
  dwengoVersion  Int?

  // True als dit een extern (Dwengo) object is, false als lokaal
  isExternal Boolean @default(false)

  start_node Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  transitions     LearningPathTransition[] @relation("TransitionNode")
  nextTransitions LearningPathTransition[] @relation("NextNode")
}

model LearningPathTransition {
  // _id bij Dwengo API
  transitionId String  @id @default(uuid())
  // Ik ben niet 100% zeker waarvoor default staat in de Dwengo API, maar ik denk dat het betekent dat er geen conditie is.
  // Er wordt dus standaard naar de volgende node gegaan.
  default      Boolean @default(true)
  // Een eventuele conditie die aan deze transitie vasthangt.
  condition    String?

  // Een transitie hoort bij een node
  nodeId String
  node   LearningPathNode @relation(fields: [nodeId], references: [nodeId], name: "TransitionNode")

  // Next wijst in de Dwengo API naar de volgende node.
  // Als next leeg is, betekent dit dat de laatste node van het leerpad bereikt is.
  nextNodeId String?
  nextNode   LearningPathNode? @relation(fields: [nextNodeId], references: [nodeId], name: "NextNode")
}

///
/// Content types van leerobjecten; kan altijd nog uitgebreid worden
enum ContentType {
  // Dwengo API
  TEXT_PLAIN
  TEXT_MARKDOWN
  IMAGE_IMAGE_BLOCK
  IMAGE_IMAGE
  AUDIO_MPEG
  // Eigen toevoegingen
  VIDEO
  EVAL_MULTIPLE_CHOICE
  EVAL_OPEN_QUESTION
}

model LearningObject {
  // _id bij Dwengo APi
  id               String      @id @default(uuid())
  uuid             String      @unique @default(cuid())
  // In de Dwengo API wordt er nog met een hruid gewerkt ook. Ik zou voorstellen om anders de titel van een leerobject uniek te maken.
  // Op die manier kan de hruid ingesteld worden op de titel van het leerobject.
  // Ik ga dit voorlopig laten staan, maar misschien dat we dit nog moeten aanpassen.
  hruid            String      @unique
  title            String
  version          Int         @default(1)
  language         String
  description      String
  contentType      ContentType
  estimatedTime    Int // In minuten
  keywords         String[]    @default([])
  targetAges       Int[]
  teacherExclusive Boolean
  skosConcepts     String[]    @default([])
  copyright        String      @default("CC BY Dwengo")
  licence          String      @default("dwengo")
  difficulty       Int
  available        Boolean     @default(true)
  // Link to external content
  contentLocation  String?
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt

  creatorId Int
  creator   Teacher @relation(fields: [creatorId], references: [userId], name: "LearningObjectCreator")

  // Binnen een leerobject kunnen er meerdere evaluaties zitten
  evaluations      Evaluation[]
  educationalGoals EducationalGoal[]
  returnValue      ReturnValue?
  progress         LearningObjectProgress[]
  // QuestionSpecifics QuestionSpecific[]
}

model EducationalGoal {
  id               String  @id
  learningObjectId String
  source           String?
  goalId           String?

  learningObject LearningObject @relation(fields: [learningObjectId], references: [id])
}

model ReturnValue {
  id               Int    @id @default(autoincrement())
  learningObjectId String @unique
  callbackUrl      String
  callbackSchema   Json

  learningObject LearningObject @relation(fields: [learningObjectId], references: [id])
}

model Evaluation {
  id             String         @id
  nrOfQuestions  Int
  evaluationType EvaluationType

  learningObject LearningObject       @relation(fields: [id], references: [id])
  questions      EvaluationQuestion[]
  // Een evaluatie kan meerdere inzendingen hebben
  submissions    Submission[]
}

model EvaluationQuestion {
  id           Int    @id @default(autoincrement())
  evaluationId String
  questionId   Int
  question     String

  evaluation Evaluation             @relation(fields: [evaluationId], references: [id])
  // Indien de evaluatie multiple choice, kunnen hier opties gekoppeld worden.
  options    MultipleChoiceOption[]

  @@unique([evaluationId, questionId])
}

model MultipleChoiceOption {
  id                   Int     @id @default(autoincrement())
  evaluationQuestionId Int
  option               String
  isCorrect            Boolean

  evaluationQuestion EvaluationQuestion @relation(fields: [evaluationQuestionId], references: [id])
}

///
/// Vragen en antwoorden

enum QuestionType {
  // SPECIFIC representeert specifieke vragen die door studenten worden gesteld
  // bij het overlopen van een leerobject (deel van een leerpad)
  SPECIFIC
  // GENERAL representeert algemene vragen die door studenten worden gesteld
  // bij het doorlopen van een leerpad
  GENERAL
}

model QuestionSpecific {
  questionId            Int     @unique
  // Lokaal leerobject
  localLearningObjectId String?

  // Dwengo-velden
  dwengoHruid    String?
  dwengoLanguage String?
  dwengoVersion  Int?

  isExternal Boolean @default(false)

  question Question @relation(fields: [questionId], references: [id])

  @@id([questionId])
}

model QuestionGeneral {
  questionId Int     @unique
  pathRef    String
  isExternal Boolean @default(false)

  // Een QuestionSpecific is een vraag
  question Question @relation(fields: [questionId], references: [id])

  @@id([questionId])
}

model Question {
  id           Int          @id @default(autoincrement())
  teamId       Int
  title        String
  assignmentId Int
  type         QuestionType
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt

  // Een vraag is ofwel een specifieke vraag (bij leerobject),
  // een algemene vraag (bij leerpad) of
  // een bijvraag bij een antwoord
  specific QuestionSpecific?
  general  QuestionGeneral?

  assignment           Assignment        @relation(fields: [assignmentId], references: [id])
  team                 Team              @relation(fields: [teamId], references: [id])
  questionConversation QuestionMessage[]
}

model QuestionMessage {
  id         Int      @id @default(autoincrement())
  questionId Int
  // leerkracht of student
  userId     Int
  // de inhoud van de vraag dus
  text       String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  Questions  Question @relation(fields: [questionId], references: [id], onDelete: Cascade)
}

///
/// Taken en indieningen
model Assignment {
  id         Int      @id @default(autoincrement())
  pathRef    String
  isExternal Boolean  @default(false)
  deadline   DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  Questions        Question[]
  classAssignments ClassAssignment[]
  teamAssignments  TeamAssignment[]

  submissions Submission[]
}

model ClassAssignment {
  classId      Int
  assignmentId Int
  class        Class      @relation(fields: [classId], references: [id], onDelete: Cascade)
  assignment   Assignment @relation(fields: [assignmentId], references: [id], onDelete: Cascade)

  @@id([classId, assignmentId])
}

model Team {
  id       Int    @id @default(autoincrement())
  teamname String
  classId  Int

  // Een team bestaat uit studenten
  students       Student[]
  // Een verwijzing naar de assignment van dit team
  teamAssignment TeamAssignment?

  // De indieningen van een team
  class       Class        @relation(fields: [classId], references: [id])
  submissions Submission[]
  Questions   Question[]
}

model TeamAssignment {
  teamId       Int @unique
  assignmentId Int

  team       Team       @relation(fields: [teamId], references: [id])
  assignment Assignment @relation(fields: [assignmentId], references: [id], onDelete: Cascade)

  // Dit is een unieke composite key
  @@id([teamId, assignmentId])
}

model Submission {
  submissionId Int       @id @default(autoincrement())
  // Een inzending hoort bij een evaluatie
  evaluationId String
  // Een inzending is van een team
  teamId       Int
  submitted    DateTime  @default(now())
  // Er kan feedback komen op een inzending
  feedback     Feedback?

  assignmentId Int
  assignment   Assignment @relation(fields: [assignmentId], references: [id], onDelete: Cascade)

  evaluation Evaluation @relation(fields: [evaluationId], references: [id])
  team       Team       @relation(fields: [teamId], references: [id])
}

model Feedback {
  // Feedback hoort bij een inzending
  // Er kan maar 1 keer feedback gegeven worden op een inzending
  submissionId Int    @unique
  // Feedback kan gegeven worden door een teacher
  teacherId    Int
  // De feedback zelf
  description  String

  teacher    Teacher    @relation(fields: [teacherId], references: [userId], onDelete: Cascade)
  submission Submission @relation(fields: [submissionId], references: [submissionId], onDelete: Cascade)

  // Feedback wordt uniek bepaald door deze attributen
  @@id([submissionId, teacherId])
}

model LearningObjectProgress {
  id               Int     @id @default(autoincrement())
  learningObjectId String
  done             Boolean

  learningObject  LearningObject    @relation(fields: [learningObjectId], references: [id])
  studentProgress StudentProgress[]
}

model StudentProgress {
  studentId  Int
  progressId Int

  student  Student                @relation(fields: [studentId], references: [userId])
  progress LearningObjectProgress @relation(fields: [progressId], references: [id])

  @@id([studentId, progressId])
}


===== Bestand: ../dwengo_backend/prisma/migrations/20250326120804_/migration.sql =====
-- CreateEnum
CREATE TYPE "Role" AS ENUM ('ADMIN', 'TEACHER', 'STUDENT');

-- CreateEnum
CREATE TYPE "JoinRequestStatus" AS ENUM ('PENDING', 'APPROVED', 'DENIED');

-- CreateEnum
CREATE TYPE "EvaluationType" AS ENUM ('OPEN', 'MULTIPLE');

-- CreateEnum
CREATE TYPE "ContentType" AS ENUM ('TEXT_PLAIN', 'TEXT_MARKDOWN', 'IMAGE_IMAGE_BLOCK', 'IMAGE_IMAGE', 'AUDIO_MPEG', 'VIDEO', 'EVAL_MULTIPLE_CHOICE', 'EVAL_OPEN_QUESTION');

-- CreateEnum
CREATE TYPE "QuestionType" AS ENUM ('SPECIFIC', 'GENERAL');

-- CreateTable
CREATE TABLE "User" (
    "id" SERIAL NOT NULL,
    "firstName" TEXT NOT NULL,
    "lastName" TEXT NOT NULL,
    "email" TEXT NOT NULL,
    "password" TEXT NOT NULL,
    "role" "Role" NOT NULL,
    "createdAt" TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMP(3) NOT NULL,

    CONSTRAINT "User_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Admin" (
    "userId" INTEGER NOT NULL,

    CONSTRAINT "Admin_pkey" PRIMARY KEY ("userId")
);

-- CreateTable
CREATE TABLE "Teacher" (
    "userId" INTEGER NOT NULL,

    CONSTRAINT "Teacher_pkey" PRIMARY KEY ("userId")
);

-- CreateTable
CREATE TABLE "Student" (
    "userId" INTEGER NOT NULL,

    CONSTRAINT "Student_pkey" PRIMARY KEY ("userId")
);

-- CreateTable
CREATE TABLE "Class" (
    "id" SERIAL NOT NULL,
    "name" TEXT NOT NULL,
    "code" TEXT NOT NULL,
    "createdAt" TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMP(3) NOT NULL,

    CONSTRAINT "Class_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ClassStudent" (
    "studentId" INTEGER NOT NULL,
    "classId" INTEGER NOT NULL,

    CONSTRAINT "ClassStudent_pkey" PRIMARY KEY ("studentId","classId")
);

-- CreateTable
CREATE TABLE "ClassTeacher" (
    "teacherId" INTEGER NOT NULL,
    "classId" INTEGER NOT NULL,

    CONSTRAINT "ClassTeacher_pkey" PRIMARY KEY ("teacherId","classId")
);

-- CreateTable
CREATE TABLE "JoinRequest" (
    "requestId" SERIAL NOT NULL,
    "studentId" INTEGER NOT NULL,
    "classId" INTEGER NOT NULL,
    "status" "JoinRequestStatus" NOT NULL,

    CONSTRAINT "JoinRequest_pkey" PRIMARY KEY ("requestId")
);

-- CreateTable
CREATE TABLE "Invite" (
    "inviteId" SERIAL NOT NULL,
    "otherTeacherId" INTEGER NOT NULL,
    "classTeacherId" INTEGER NOT NULL,
    "classId" INTEGER NOT NULL,
    "status" "JoinRequestStatus" NOT NULL,

    CONSTRAINT "Invite_pkey" PRIMARY KEY ("inviteId")
);

-- CreateTable
CREATE TABLE "LearningPath" (
    "id" TEXT NOT NULL,
    "hruid" TEXT NOT NULL,
    "title" TEXT NOT NULL,
    "language" TEXT NOT NULL,
    "description" TEXT NOT NULL,
    "image" TEXT,
    "num_nodes" INTEGER,
    "num_nodes_left" INTEGER,
    "createdAt" TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMP(3) NOT NULL,
    "creatorId" INTEGER NOT NULL,

    CONSTRAINT "LearningPath_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "LearningPathNode" (
    "nodeId" TEXT NOT NULL,
    "learningPathId" TEXT NOT NULL,
    "localLearningObjectId" TEXT,
    "dwengoHruid" TEXT,
    "dwengoLanguage" TEXT,
    "dwengoVersion" INTEGER,
    "isExternal" BOOLEAN NOT NULL DEFAULT false,
    "start_node" BOOLEAN NOT NULL DEFAULT false,
    "createdAt" TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMP(3) NOT NULL,

    CONSTRAINT "LearningPathNode_pkey" PRIMARY KEY ("nodeId")
);

-- CreateTable
CREATE TABLE "LearningPathTransition" (
    "transitionId" TEXT NOT NULL,
    "default" BOOLEAN NOT NULL DEFAULT true,
    "condition" TEXT,
    "nodeId" TEXT NOT NULL,
    "nextNodeId" TEXT,

    CONSTRAINT "LearningPathTransition_pkey" PRIMARY KEY ("transitionId")
);

-- CreateTable
CREATE TABLE "LearningObject" (
    "id" TEXT NOT NULL,
    "uuid" TEXT NOT NULL,
    "hruid" TEXT NOT NULL,
    "title" TEXT NOT NULL,
    "version" INTEGER NOT NULL DEFAULT 1,
    "language" TEXT NOT NULL,
    "description" TEXT NOT NULL,
    "contentType" "ContentType" NOT NULL,
    "estimatedTime" INTEGER NOT NULL,
    "keywords" TEXT[] DEFAULT ARRAY[]::TEXT[],
    "targetAges" INTEGER[],
    "teacherExclusive" BOOLEAN NOT NULL,
    "skosConcepts" TEXT[] DEFAULT ARRAY[]::TEXT[],
    "copyright" TEXT NOT NULL DEFAULT 'CC BY Dwengo',
    "licence" TEXT NOT NULL DEFAULT 'dwengo',
    "difficulty" INTEGER NOT NULL,
    "available" BOOLEAN NOT NULL DEFAULT true,
    "contentLocation" TEXT,
    "createdAt" TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMP(3) NOT NULL,
    "creatorId" INTEGER NOT NULL,

    CONSTRAINT "LearningObject_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "EducationalGoal" (
    "id" TEXT NOT NULL,
    "learningObjectId" TEXT NOT NULL,
    "source" TEXT,
    "goalId" TEXT,

    CONSTRAINT "EducationalGoal_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ReturnValue" (
    "id" SERIAL NOT NULL,
    "learningObjectId" TEXT NOT NULL,
    "callbackUrl" TEXT NOT NULL,
    "callbackSchema" JSONB NOT NULL,

    CONSTRAINT "ReturnValue_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Evaluation" (
    "id" TEXT NOT NULL,
    "nrOfQuestions" INTEGER NOT NULL,
    "evaluationType" "EvaluationType" NOT NULL,

    CONSTRAINT "Evaluation_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "EvaluationQuestion" (
    "id" SERIAL NOT NULL,
    "evaluationId" TEXT NOT NULL,
    "questionId" INTEGER NOT NULL,
    "question" TEXT NOT NULL,

    CONSTRAINT "EvaluationQuestion_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "MultipleChoiceOption" (
    "id" SERIAL NOT NULL,
    "evaluationQuestionId" INTEGER NOT NULL,
    "option" TEXT NOT NULL,
    "isCorrect" BOOLEAN NOT NULL,

    CONSTRAINT "MultipleChoiceOption_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "QuestionSpecific" (
    "questionId" INTEGER NOT NULL,
    "localLearningObjectId" TEXT,
    "dwengoHruid" TEXT,
    "dwengoLanguage" TEXT,
    "dwengoVersion" INTEGER,
    "isExternal" BOOLEAN NOT NULL DEFAULT false,

    CONSTRAINT "QuestionSpecific_pkey" PRIMARY KEY ("questionId")
);

-- CreateTable
CREATE TABLE "QuestionGeneral" (
    "questionId" INTEGER NOT NULL,
    "pathRef" TEXT NOT NULL,
    "isExternal" BOOLEAN NOT NULL DEFAULT false,

    CONSTRAINT "QuestionGeneral_pkey" PRIMARY KEY ("questionId")
);

-- CreateTable
CREATE TABLE "Question" (
    "id" SERIAL NOT NULL,
    "teamId" INTEGER NOT NULL,
    "title" TEXT NOT NULL,
    "assignmentId" INTEGER NOT NULL,
    "type" "QuestionType" NOT NULL,
    "createdAt" TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMP(3) NOT NULL,
    "createdBy" INTEGER NOT NULL,
    "isPrivate" BOOLEAN NOT NULL DEFAULT false,

    CONSTRAINT "Question_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "QuestionMessage" (
    "id" SERIAL NOT NULL,
    "questionId" INTEGER NOT NULL,
    "userId" INTEGER NOT NULL,
    "text" TEXT NOT NULL,
    "createdAt" TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMP(3) NOT NULL,

    CONSTRAINT "QuestionMessage_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "Assignment" (
    "id" SERIAL NOT NULL,
    "pathRef" TEXT NOT NULL,
    "isExternal" BOOLEAN NOT NULL DEFAULT false,
    "deadline" TIMESTAMP(3) NOT NULL,
    "createdAt" TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" TIMESTAMP(3) NOT NULL,

    CONSTRAINT "Assignment_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "ClassAssignment" (
    "classId" INTEGER NOT NULL,
    "assignmentId" INTEGER NOT NULL,

    CONSTRAINT "ClassAssignment_pkey" PRIMARY KEY ("classId","assignmentId")
);

-- CreateTable
CREATE TABLE "Team" (
    "id" SERIAL NOT NULL,
    "teamname" TEXT NOT NULL,
    "classId" INTEGER NOT NULL,

    CONSTRAINT "Team_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "TeamAssignment" (
    "teamId" INTEGER NOT NULL,
    "assignmentId" INTEGER NOT NULL,

    CONSTRAINT "TeamAssignment_pkey" PRIMARY KEY ("teamId","assignmentId")
);

-- CreateTable
CREATE TABLE "Submission" (
    "submissionId" SERIAL NOT NULL,
    "evaluationId" TEXT NOT NULL,
    "teamId" INTEGER NOT NULL,
    "submitted" TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "assignmentId" INTEGER NOT NULL,

    CONSTRAINT "Submission_pkey" PRIMARY KEY ("submissionId")
);

-- CreateTable
CREATE TABLE "Feedback" (
    "submissionId" INTEGER NOT NULL,
    "teacherId" INTEGER NOT NULL,
    "description" TEXT NOT NULL,

    CONSTRAINT "Feedback_pkey" PRIMARY KEY ("submissionId","teacherId")
);

-- CreateTable
CREATE TABLE "LearningObjectProgress" (
    "id" SERIAL NOT NULL,
    "learningObjectId" TEXT NOT NULL,
    "done" BOOLEAN NOT NULL,

    CONSTRAINT "LearningObjectProgress_pkey" PRIMARY KEY ("id")
);

-- CreateTable
CREATE TABLE "StudentProgress" (
    "studentId" INTEGER NOT NULL,
    "progressId" INTEGER NOT NULL,

    CONSTRAINT "StudentProgress_pkey" PRIMARY KEY ("studentId","progressId")
);

-- CreateTable
CREATE TABLE "_StudentToTeam" (
    "A" INTEGER NOT NULL,
    "B" INTEGER NOT NULL,

    CONSTRAINT "_StudentToTeam_AB_pkey" PRIMARY KEY ("A","B")
);

-- CreateIndex
CREATE UNIQUE INDEX "User_email_key" ON "User"("email");

-- CreateIndex
CREATE UNIQUE INDEX "Class_code_key" ON "Class"("code");

-- CreateIndex
CREATE UNIQUE INDEX "LearningPath_hruid_key" ON "LearningPath"("hruid");

-- CreateIndex
CREATE UNIQUE INDEX "LearningObject_uuid_key" ON "LearningObject"("uuid");

-- CreateIndex
CREATE UNIQUE INDEX "LearningObject_hruid_key" ON "LearningObject"("hruid");

-- CreateIndex
CREATE UNIQUE INDEX "ReturnValue_learningObjectId_key" ON "ReturnValue"("learningObjectId");

-- CreateIndex
CREATE UNIQUE INDEX "EvaluationQuestion_evaluationId_questionId_key" ON "EvaluationQuestion"("evaluationId", "questionId");

-- CreateIndex
CREATE UNIQUE INDEX "QuestionSpecific_questionId_key" ON "QuestionSpecific"("questionId");

-- CreateIndex
CREATE UNIQUE INDEX "QuestionGeneral_questionId_key" ON "QuestionGeneral"("questionId");

-- CreateIndex
CREATE UNIQUE INDEX "TeamAssignment_teamId_key" ON "TeamAssignment"("teamId");

-- CreateIndex
CREATE UNIQUE INDEX "Feedback_submissionId_key" ON "Feedback"("submissionId");

-- CreateIndex
CREATE INDEX "_StudentToTeam_B_index" ON "_StudentToTeam"("B");

-- AddForeignKey
ALTER TABLE "Admin" ADD CONSTRAINT "Admin_userId_fkey" FOREIGN KEY ("userId") REFERENCES "User"("id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Teacher" ADD CONSTRAINT "Teacher_userId_fkey" FOREIGN KEY ("userId") REFERENCES "User"("id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Student" ADD CONSTRAINT "Student_userId_fkey" FOREIGN KEY ("userId") REFERENCES "User"("id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ClassStudent" ADD CONSTRAINT "ClassStudent_studentId_fkey" FOREIGN KEY ("studentId") REFERENCES "Student"("userId") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ClassStudent" ADD CONSTRAINT "ClassStudent_classId_fkey" FOREIGN KEY ("classId") REFERENCES "Class"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ClassTeacher" ADD CONSTRAINT "ClassTeacher_teacherId_fkey" FOREIGN KEY ("teacherId") REFERENCES "Teacher"("userId") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ClassTeacher" ADD CONSTRAINT "ClassTeacher_classId_fkey" FOREIGN KEY ("classId") REFERENCES "Class"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "JoinRequest" ADD CONSTRAINT "JoinRequest_studentId_fkey" FOREIGN KEY ("studentId") REFERENCES "Student"("userId") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "JoinRequest" ADD CONSTRAINT "JoinRequest_classId_fkey" FOREIGN KEY ("classId") REFERENCES "Class"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Invite" ADD CONSTRAINT "Invite_otherTeacherId_fkey" FOREIGN KEY ("otherTeacherId") REFERENCES "Teacher"("userId") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Invite" ADD CONSTRAINT "Invite_classTeacherId_classId_fkey" FOREIGN KEY ("classTeacherId", "classId") REFERENCES "ClassTeacher"("teacherId", "classId") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Invite" ADD CONSTRAINT "Invite_classId_fkey" FOREIGN KEY ("classId") REFERENCES "Class"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "LearningPath" ADD CONSTRAINT "LearningPath_creatorId_fkey" FOREIGN KEY ("creatorId") REFERENCES "Teacher"("userId") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "LearningPathNode" ADD CONSTRAINT "LearningPathNode_learningPathId_fkey" FOREIGN KEY ("learningPathId") REFERENCES "LearningPath"("id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "LearningPathTransition" ADD CONSTRAINT "LearningPathTransition_nodeId_fkey" FOREIGN KEY ("nodeId") REFERENCES "LearningPathNode"("nodeId") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "LearningPathTransition" ADD CONSTRAINT "LearningPathTransition_nextNodeId_fkey" FOREIGN KEY ("nextNodeId") REFERENCES "LearningPathNode"("nodeId") ON DELETE SET NULL ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "LearningObject" ADD CONSTRAINT "LearningObject_creatorId_fkey" FOREIGN KEY ("creatorId") REFERENCES "Teacher"("userId") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "EducationalGoal" ADD CONSTRAINT "EducationalGoal_learningObjectId_fkey" FOREIGN KEY ("learningObjectId") REFERENCES "LearningObject"("id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ReturnValue" ADD CONSTRAINT "ReturnValue_learningObjectId_fkey" FOREIGN KEY ("learningObjectId") REFERENCES "LearningObject"("id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Evaluation" ADD CONSTRAINT "Evaluation_id_fkey" FOREIGN KEY ("id") REFERENCES "LearningObject"("id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "EvaluationQuestion" ADD CONSTRAINT "EvaluationQuestion_evaluationId_fkey" FOREIGN KEY ("evaluationId") REFERENCES "Evaluation"("id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "MultipleChoiceOption" ADD CONSTRAINT "MultipleChoiceOption_evaluationQuestionId_fkey" FOREIGN KEY ("evaluationQuestionId") REFERENCES "EvaluationQuestion"("id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "QuestionSpecific" ADD CONSTRAINT "QuestionSpecific_questionId_fkey" FOREIGN KEY ("questionId") REFERENCES "Question"("id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "QuestionGeneral" ADD CONSTRAINT "QuestionGeneral_questionId_fkey" FOREIGN KEY ("questionId") REFERENCES "Question"("id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Question" ADD CONSTRAINT "Question_assignmentId_fkey" FOREIGN KEY ("assignmentId") REFERENCES "Assignment"("id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Question" ADD CONSTRAINT "Question_teamId_fkey" FOREIGN KEY ("teamId") REFERENCES "Team"("id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "QuestionMessage" ADD CONSTRAINT "QuestionMessage_questionId_fkey" FOREIGN KEY ("questionId") REFERENCES "Question"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ClassAssignment" ADD CONSTRAINT "ClassAssignment_classId_fkey" FOREIGN KEY ("classId") REFERENCES "Class"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "ClassAssignment" ADD CONSTRAINT "ClassAssignment_assignmentId_fkey" FOREIGN KEY ("assignmentId") REFERENCES "Assignment"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Team" ADD CONSTRAINT "Team_classId_fkey" FOREIGN KEY ("classId") REFERENCES "Class"("id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "TeamAssignment" ADD CONSTRAINT "TeamAssignment_teamId_fkey" FOREIGN KEY ("teamId") REFERENCES "Team"("id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "TeamAssignment" ADD CONSTRAINT "TeamAssignment_assignmentId_fkey" FOREIGN KEY ("assignmentId") REFERENCES "Assignment"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Submission" ADD CONSTRAINT "Submission_assignmentId_fkey" FOREIGN KEY ("assignmentId") REFERENCES "Assignment"("id") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Submission" ADD CONSTRAINT "Submission_evaluationId_fkey" FOREIGN KEY ("evaluationId") REFERENCES "Evaluation"("id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Submission" ADD CONSTRAINT "Submission_teamId_fkey" FOREIGN KEY ("teamId") REFERENCES "Team"("id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Feedback" ADD CONSTRAINT "Feedback_teacherId_fkey" FOREIGN KEY ("teacherId") REFERENCES "Teacher"("userId") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Feedback" ADD CONSTRAINT "Feedback_submissionId_fkey" FOREIGN KEY ("submissionId") REFERENCES "Submission"("submissionId") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "LearningObjectProgress" ADD CONSTRAINT "LearningObjectProgress_learningObjectId_fkey" FOREIGN KEY ("learningObjectId") REFERENCES "LearningObject"("id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "StudentProgress" ADD CONSTRAINT "StudentProgress_studentId_fkey" FOREIGN KEY ("studentId") REFERENCES "Student"("userId") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "StudentProgress" ADD CONSTRAINT "StudentProgress_progressId_fkey" FOREIGN KEY ("progressId") REFERENCES "LearningObjectProgress"("id") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "_StudentToTeam" ADD CONSTRAINT "_StudentToTeam_A_fkey" FOREIGN KEY ("A") REFERENCES "Student"("userId") ON DELETE CASCADE ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "_StudentToTeam" ADD CONSTRAINT "_StudentToTeam_B_fkey" FOREIGN KEY ("B") REFERENCES "Team"("id") ON DELETE CASCADE ON UPDATE CASCADE;


===== Bestand: ../dwengo_backend/errors/errors.ts =====
export class AppError extends Error {
    public statusCode: number;
    constructor(message: string, statusCode: number) {
        super(message);
        this.name = this.constructor.name;
        this.statusCode = statusCode;
    }
}

export class NotFoundError extends AppError {
    constructor(message: string) {
        super(message, 404);
    }
}

export class AccesDeniedError extends AppError {
    constructor(message: string) {
        super(message, 403);
    }
}

export class BadRequestError extends AppError {
    constructor(message: string) {
        super(message, 400);
    }
}

export class ConflictError extends AppError {
    constructor(message: string) {
        super(message, 409);
    }
}

export class UnauthorizedError extends AppError {
    constructor(message: string) {
        super(message, 401);
    }
}


===== Bestand: ../dwengo_backend/interfaces/extendedTypeInterfaces.ts =====
import { Request } from 'express';
import {Role, Student, Teacher} from "@prisma/client";


export interface AuthenticatedUser {
    id: number;
    role?: Role;
    teacher?: Teacher;
    student?: Student;
    email: string;
}

// Uitbreiding van het Express Request-type zodat we een user-property hebben
export interface AuthenticatedRequest extends Request {
    user?: AuthenticatedUser;
}

/*
* An IdentifiableTeamDivision is the same as a TeamDivision but with a ID for the team
* The reason for these interfaces is that when you are creating a team for the first time, it does not yet have
* an ID. Meaning that when you are creating, TeamDivision is all the info you need.
* On an update however, you need to somehow find the team, which is why IdentifiableTeamDivision exists.
* */
export interface TeamDivision {
    teamName: string;         // The name of the team (e.g., "Team 1")
    studentIds: number[];     // Array of student IDs that belong to this team
}

export interface IdentifiableTeamDivision extends TeamDivision {
    teamId: number;
}


